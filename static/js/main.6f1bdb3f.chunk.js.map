{"version":3,"sources":["utils/queries.js","components/detailPage/CircleRate.js","components/Anime.js","components/AnimeList.js","utils/helpers.js","components/homePage/Airing.js","components/homePage/AiringList.js","components/detailPage/Recom.js","components/homePage/HomeRec.js","components/homePage/Top.js","components/homePage/TopList.js","components/detailPage/RecomList.js","components/homePage/AirSlide.js","components/homePage/AiringSlider.js","pages/Loading.js","pages/Home.js","components/detailPage/Stream.js","components/detailPage/StreamList.js","components/detailPage/Popularity.js","components/detailPage/ExternalLinks.js","components/detailPage/Rank.js","components/detailPage/Trailer.js","components/detailPage/Character.js","components/detailPage/CharacterList.js","pages/CharacterDetail.js","components/detailPage/Review.js","components/detailPage/ReviewList.js","pages/AnimeDetail.js","components/SearchAnime.js","pages/SearchList.js","pages/Header.js","pages/ScrollToTop.js","pages/Footer.js","pages/ProgressBar.js","pages/AnimeFilter.js","App.js","index.js"],"names":["menuSearchQuery","gql","filterQuery","detailQuery","recomListQuery","homeQuery","charQuery","CircleRate","grad","bg","rate","symbol","size","style","backgroundImage","width","height","borderRadius","className","icon","right","top","transform","Anime","anime","client","useApolloClient","history","useHistory","motion","a","href","id","onClick","e","preventDefault","writeQuery","query","data","loadingbar","__typename","isLoading","setTimeout","push","animate","opacity","transition","duration","initial","undefined","averageScore","alt","src","coverImage","large","format","source","status","title","english","romaji","AnimeList","allAnimeData","initialQuantity","colsInRow","keyParam","useState","stream","showMore","setShowMore","gridColsTemp","counterAnime","trimedAllAnimeData","filter","anim","node","includes","div","_","index","map","animeData","length","target","display","secondsToDhms","seconds","dhms","Number","d","Math","floor","h","m","s","dDisplay","hDisplay","mDisplay","showMoreLessBtn","refElement","extraClassName","current","firstElementChild","offsetHeight","overflow","position","showMoreBtn","document","createElement","textContent","lastElementChild","after","addEventListener","unKnownPng","Airing","airing","bannerImage","nextAiringEpisode","episode","faClock","timeUntilAiring","AiringList","allAiring","trimedallAiring","media","Recom","recom","widthParam","recMedia","mediaRecommendation","rating","draggable","toLowerCase","description","content","faThumbsDown","faThumbsUp","HomeRecom","allRecom","rec","Top","rank","substring","season","seasonYear","tags","tag","name","popularity","toFixed","faHeart","TopList","RecomList","animeID","isSmallDevice","documentElement","clientWidth","magicNum1","magicNum2","rightLeftScroll","useRef","wastefulCover","recommend","allRecomData","useQuery","variables","loading","error","console","log","message","Media","recommendations","edges","startx","scrollLeft","isDown","Fragment","ref","onTouchEnd","recLeft","scrollWidth","round","scrollTo","left","behavior","onMouseDown","pageX","offsetLeft","onMouseLeave","onMouseUp","onMouseMove","walk","slice","recWidth","faChevronCircleRight","newRecommend","AirSlide","onGrabbingSlider","animeCardClickHandler","onTouchStart","genres","genre","AiringSlider","autoSlidePlay","slideNum","setSlideNum","isAutoPlayOn","setIsAutoPlayOn","useCallback","clearTimeout","useEffect","Loading","Home","gridRef","hQuery","trending","airingSchedules","allTime","top100","homeRecom","HomeRec","Stream","url","rel","thumbnail","StreamList","allEpisode","remove","Popularity","popularityRange","faFire","ExternalLinks","link","site","Rank","bgRank","bgBorder","rankRound","context","year","Trailer","embedId","frameBorder","allow","allowFullScreen","Character","charID","staffID","char","mangaStaffID","linkRef","voiceActors","charClickHandler","to","image","medium","fontSize","full","role","languageV2","CharacterList","characters","CharacterDetail","characterID","actorID","staffContentShowLess","charContentShowLess","char_id","staff_id","character","staff","Staff","charAnimeList","staffAnimeList","staffMedia","charFavouritesRange","favourites","actorFavouritesRange","monthNames","body","classList","contains","parentElement","faTimesCircle","age","dateOfBirth","day","month","gender","Review","review","reviewText","replace","test","decode","replaceAll","reviewContentShowLess","date","Date","createdAt","getFullYear","getMonth","getDay","user","avatar","score","ratingAmount","summary","ReviewList","allReviewData","AnimeDetail","params","useParams","useLocation","pathname","split","isCharacterPage","selectAnimeQuery","aData","startDate","endDate","banner","animeColor30","hex","c","join","hexToRgbA","color","externalLinks","rankings","relations","reviews","streamingEpisodes","studios","favouritesRange","isOneDate","backgroundColor","borderColor","episodes","volumes","chapters","gen","isMain","st","meanScore","trailer","SearchAnime","emptySearchValue","SearchList","searchBoxRef","searchValue","setSearchValue","setIsLoading","isExpanded","setIsExpanded","searchData","window","searchTimer","getSearchAnime","search","useLazyQuery","Page","onSubmit","faSearch","focus","onFocus","type","value","placeholder","onChange","span","delay","Header","navRef","burgerRef","navLinksRef","homeLinkRef","animeLinkRef","scrollerContainer","getElementById","burger","nav","navLinks","toggle","forEach","animation","matches","prevScrollpos","scrollTop","currentScrollPos","LinkClickHandler","headerLinks","text","activeStyle","exact","ScrollToTop","pervPath","setPervPath","Footer","ProgressBar","progressRef","READ_ISLOADING","isChanged","bar","shining","children","watchQuery","fetchPolicy","subscribe","next","add","AnimeFilter","path","location","p","App","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider"],"mappings":"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","file":"static/js/main.6f1bdb3f.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\r\n\r\nexport const menuSearchQuery = gql`\r\n  query MeNuSeArCh($search: String) {\r\n    Page(perPage: 5, page: 1) {\r\n      media(search: $search, sort: SEARCH_MATCH) {\r\n        id\r\n        coverImage {\r\n          medium\r\n        }\r\n        title {\r\n          english\r\n          romaji\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const filterQuery = gql`\r\n  query FiLtErPaGe($search: String) {\r\n    filter: Page(perPage: 50, page: 1) {\r\n      media(search: $search) {\r\n        id\r\n        title {\r\n          english\r\n          romaji\r\n        }\r\n        coverImage {\r\n          large\r\n        }\r\n        source\r\n        format\r\n        status\r\n        averageScore\r\n        popularity\r\n        seasonYear\r\n        season\r\n        tags {\r\n          name\r\n        }\r\n        description(asHtml: true)\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const detailQuery = gql`\r\n  query SelectedAnImE($id: Int) {\r\n    Media(id: $id) {\r\n      id\r\n      title {\r\n        english\r\n        romaji\r\n      }\r\n      description(asHtml: true)\r\n      duration\r\n      startDate {\r\n        year\r\n        month\r\n        day\r\n      }\r\n      endDate {\r\n        year\r\n        month\r\n        day\r\n      }\r\n      coverImage {\r\n        large\r\n        color\r\n      }\r\n      bannerImage\r\n      episodes\r\n      season\r\n      seasonYear\r\n      rankings {\r\n        id\r\n        context\r\n        allTime\r\n        rank\r\n        year\r\n        season\r\n      }\r\n      format\r\n      genres\r\n      streamingEpisodes {\r\n        title\r\n        thumbnail\r\n        url\r\n      }\r\n      relations {\r\n        edges {\r\n          node {\r\n            title {\r\n              english\r\n              romaji\r\n            }\r\n            id\r\n            coverImage {\r\n              large\r\n              color\r\n            }\r\n            source\r\n            format\r\n            status\r\n          }\r\n        }\r\n      }\r\n      reviews {\r\n        edges {\r\n          node {\r\n            id\r\n            user {\r\n              id\r\n              name\r\n              avatar {\r\n                medium\r\n              }\r\n            }\r\n            score\r\n            rating\r\n            ratingAmount\r\n            summary\r\n            body(asHtml: true)\r\n            createdAt\r\n          }\r\n        }\r\n      }\r\n      externalLinks {\r\n        id\r\n        site\r\n        url\r\n      }\r\n      studios {\r\n        edges {\r\n          isMain\r\n          node {\r\n            name\r\n            siteUrl\r\n            id\r\n          }\r\n        }\r\n      }\r\n      tags {\r\n        name\r\n        rank\r\n      }\r\n      popularity\r\n      meanScore\r\n      source\r\n      chapters\r\n      volumes\r\n      favourites\r\n      nextAiringEpisode {\r\n        timeUntilAiring\r\n        episode\r\n      }\r\n      trailer {\r\n        id\r\n      }\r\n      characters(sort: [ROLE]) {\r\n        edges {\r\n          role\r\n          voiceActors {\r\n            id\r\n            name {\r\n              full\r\n            }\r\n            image {\r\n              medium\r\n            }\r\n            languageV2\r\n          }\r\n          node {\r\n            id\r\n            name {\r\n              full\r\n            }\r\n            image {\r\n              medium\r\n            }\r\n          }\r\n        }\r\n      }\r\n      staff(sort: FAVOURITES_DESC) {\r\n        edges {\r\n          node {\r\n            id\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const recomListQuery = gql`\r\n  query rEcOmLiStQuErY($id: Int) {\r\n    Media(id: $id) {\r\n      recommendations(sort: RATING_DESC) {\r\n        edges {\r\n          node {\r\n            rating\r\n            mediaRecommendation {\r\n              id\r\n              format\r\n              source\r\n              status\r\n              title {\r\n                english\r\n                romaji\r\n              }\r\n              coverImage {\r\n                large\r\n              }\r\n              description\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const homeQuery = gql`\r\n  query HoMeAnImE {\r\n    top100: Page(perPage: 50, page: 1) {\r\n      media(sort: SCORE_DESC) {\r\n        id\r\n        title {\r\n          english\r\n          romaji\r\n        }\r\n        coverImage {\r\n          large\r\n        }\r\n        source\r\n        format\r\n        status\r\n        averageScore\r\n        popularity\r\n        seasonYear\r\n        season\r\n        tags {\r\n          name\r\n        }\r\n        description(asHtml: true)\r\n      }\r\n    }\r\n    airing: Page(perPage: 50, page: 1) {\r\n      airingSchedules(sort: TIME, notYetAired: true) {\r\n        media {\r\n          id\r\n          nextAiringEpisode {\r\n            episode\r\n            timeUntilAiring\r\n          }\r\n          bannerImage\r\n          title {\r\n            english\r\n            romaji\r\n          }\r\n          source\r\n          format\r\n          genres\r\n          coverImage {\r\n            large\r\n          }\r\n          description(asHtml: true)\r\n        }\r\n      }\r\n    }\r\n    trending: Page(page: 1, perPage: 50) {\r\n      media(sort: TRENDING_DESC) {\r\n        id\r\n        coverImage {\r\n          large\r\n        }\r\n        title {\r\n          english\r\n          romaji\r\n        }\r\n        source\r\n        format\r\n        status\r\n        averageScore\r\n        meanScore\r\n      }\r\n    }\r\n    homeRecom: Page(perPage: 30, page: 1) {\r\n      recommendations(sort: RATING_DESC) {\r\n        rating\r\n        media {\r\n          id\r\n          description(asHtml: true)\r\n          title {\r\n            english\r\n            romaji\r\n          }\r\n          format\r\n          status\r\n          source\r\n          coverImage {\r\n            large\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allTime: Page(perPage: 50, page: 1) {\r\n      media(sort: POPULARITY_DESC) {\r\n        id\r\n        title {\r\n          english\r\n          romaji\r\n        }\r\n        coverImage {\r\n          large\r\n        }\r\n        source\r\n        format\r\n        status\r\n        averageScore\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const charQuery = gql`\r\n  query SelectedChar($char_id: Int, $staff_id: Int) {\r\n    Character(id: $char_id) {\r\n      id\r\n      name {\r\n        full\r\n        native\r\n      }\r\n      age\r\n      gender\r\n      dateOfBirth {\r\n        year\r\n        month\r\n        day\r\n      }\r\n      description(asHtml: true)\r\n      image {\r\n        large\r\n      }\r\n      favourites\r\n      media {\r\n        edges {\r\n          node {\r\n            id\r\n            coverImage {\r\n              large\r\n            }\r\n            format\r\n            source\r\n            status\r\n            title {\r\n              english\r\n              romaji\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    Staff(id: $staff_id) {\r\n      id\r\n      name {\r\n        full\r\n        native\r\n      }\r\n      favourites\r\n      age\r\n      gender\r\n      dateOfBirth {\r\n        year\r\n        month\r\n        day\r\n      }\r\n      dateOfDeath {\r\n        year\r\n        month\r\n        day\r\n      }\r\n      homeTown\r\n      languageV2\r\n      image {\r\n        large\r\n      }\r\n      yearsActive\r\n      description(asHtml: true)\r\n      staffMedia {\r\n        edges {\r\n          node {\r\n            id\r\n            coverImage {\r\n              large\r\n            }\r\n            format\r\n            source\r\n            status\r\n            title {\r\n              english\r\n              romaji\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst CircleRate = ({ rate, symbol, size }) => {\r\n  let grad, bg;\r\n  if (rate === null) {\r\n    rate = 0;\r\n  }\r\n  if (rate <= 25) {\r\n    bg = \"bg-red-500\";\r\n    grad = `linear-gradient(${\r\n      (rate / 100) * 360 + 90\r\n    }deg, transparent 50%, rgb(212, 212, 212) 50%), linear-gradient(90deg, rgb(212, 212, 212) 50%, transparent 50%)`;\r\n  } else if (rate < 50) {\r\n    bg = \"bg-yellow-500\";\r\n    grad = `linear-gradient(${\r\n      (rate / 100) * 360 + 90\r\n    }deg, transparent 50%, rgb(212, 212, 212) 50%), linear-gradient(90deg, rgb(212, 212, 212) 50%, transparent 50%)`;\r\n  } else if (rate === 50) {\r\n    bg = \"bg-yellow-300\";\r\n    grad = `linear-gradient(90deg, rgb(212, 212, 212) 50%, transparent 50%)`;\r\n  } else if (rate >= 100) {\r\n    rate = 100;\r\n    bg = \"bg-green-600\";\r\n    grad = \"none\";\r\n  } else if (rate <= 75) {\r\n    bg = \"bg-green-300\";\r\n    grad = `linear-gradient(${\r\n      ((rate - 50) / 100) * 360 + 90\r\n    }deg, transparent 50%, rgba(110,231,183,1) 50%), linear-gradient(90deg, rgb(212, 212, 212) 50%, transparent 50%)`;\r\n  } else {\r\n    bg = \"bg-green-500\";\r\n    grad = `linear-gradient(${\r\n      ((rate - 50) / 100) * 360 + 90\r\n    }deg, transparent 50%, rgba(16,185,129,1) 50%), linear-gradient(90deg, rgb(212, 212, 212) 50%, transparent 50%)`;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: grad,\r\n        width: `${size}rem`,\r\n        height: `${size}rem`,\r\n        borderRadius: \"50%\",\r\n      }}\r\n      className={`${bg} circle-rate-container group group-hover:animate-reversecycler`}\r\n    >\r\n      <div\r\n        className=\"group-hover:animate-cycler\"\r\n        style={{\r\n          width: `${size - 1}rem`,\r\n          height: `${size - 1}rem`,\r\n          borderRadius: \"50%\",\r\n        }}\r\n      >\r\n        {symbol ? (\r\n          <div className=\"rate-symbol\">\r\n            <FontAwesomeIcon\r\n              icon={symbol}\r\n              className={`${\r\n                size === 5 ? \"text-6xl\" : size === 4 ? \"text-5xl \" : \"\"\r\n              } text-red-500`}\r\n            />\r\n            <div\r\n              className={`${\r\n                size === 5 ? \"text-lg\" : size === 4 ? \"text-sm\" : \"\"\r\n              } text-white absolute`}\r\n              style={{\r\n                right: \"50%\",\r\n                top: \"50%\",\r\n                transform: \"translate(50%, -50%)\",\r\n              }}\r\n            >\r\n              {rate}%\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <span className=\"score-num\">\r\n            <span>score</span>\r\n            <span\r\n              className={`${\r\n                size === 5 ? \"text-2xl\" : size === 4 ? \"text-base\" : \"\"\r\n              }`}\r\n            >\r\n              {rate}%\r\n            </span>\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CircleRate;\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CircleRate from \"./detailPage/CircleRate\";\r\nimport { useApolloClient, gql } from \"@apollo/client\";\r\n\r\nconst Anime = ({ anime }) => {\r\n  const client = useApolloClient();\r\n  const history = useHistory();\r\n\r\n  const animeCardClickHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    client.writeQuery({\r\n      query: gql`\r\n        query WriteIsLoading {\r\n          loadingbar {\r\n            isLoading\r\n          }\r\n        }\r\n      `,\r\n      data: {\r\n        // Contains the data to write\r\n        loadingbar: {\r\n          __typename: \"LoadingBar\",\r\n          isLoading: 30,\r\n        },\r\n      },\r\n    });\r\n\r\n    setTimeout(() => {\r\n      history.push(`/anime/${anime.id}`);\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <motion.a\r\n      href={`/anime/${anime.id}`}\r\n      onClick={animeCardClickHandler}\r\n      className=\"anime-card-container group hover-card-num-1\"\r\n      animate={{ opacity: 1, transition: { duration: 1 } }}\r\n      initial={{ opacity: 0 }}\r\n    >\r\n      {anime.averageScore !== undefined && (\r\n        <div\r\n          className=\"anime-circle-rate transform translate-x-4 -translate-y-4 \r\n    group-hover:translate-y-0.5 group-hover:-translate-x-0.5 \"\r\n        >\r\n          <CircleRate rate={anime.averageScore} size={4} />\r\n        </div>\r\n      )}\r\n\r\n      <img alt=\"\" src={anime.coverImage.large}></img>\r\n      <div\r\n        className=\"anime-info\r\n       \"\r\n      >\r\n        <div className=\" bg-yellow-300 \">{anime.format}</div>\r\n        <div className=\" bg-green-300 \">{anime.source}</div>\r\n        <div className=\" bg-red-300 \">{anime.status}</div>\r\n      </div>\r\n      <h3 className=\"line-clamp-2\">\r\n        {anime.title.english !== null\r\n          ? anime.title.english\r\n          : anime.title.romaji}\r\n      </h3>\r\n    </motion.a>\r\n  );\r\n};\r\n\r\nexport default Anime;\r\n","import React, { useState } from \"react\";\r\nimport Anime from \"./Anime\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst AnimeList = ({ allAnimeData, initialQuantity, colsInRow, keyParam }) => {\r\n  const [showMore, setShowMore] = useState({\r\n    stream: initialQuantity,\r\n  });\r\n\r\n  let gridColsTemp = `grid-cols-2 ssm:grid-cols-${colsInRow - 1} lg:grid-cols-${\r\n    colsInRow - 1\r\n  } xl:grid-cols-${colsInRow}`;\r\n\r\n  const streamShowMoreHandler = (e) => {\r\n    if (showMore.stream > 30) {\r\n      setShowMore({ ...showMore, stream: showMore.stream + 999 });\r\n      e.target.style.display = \"none\";\r\n    } else {\r\n      setShowMore({ ...showMore, stream: showMore.stream + 10 });\r\n    }\r\n    if (showMore.stream + 10 >= allAnimeData.length) {\r\n      e.target.style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  // maintain the array for duplicate elements\r\n  let counterAnime = [];\r\n  let trimedAllAnimeData = allAnimeData.filter((anime) => {\r\n    let anim = anime.id !== undefined ? anime : anime.node;\r\n    if (!counterAnime.includes(anim.id)) {\r\n      counterAnime.push(anim.id);\r\n      if (anime !== undefined) {\r\n        return anime;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  return (\r\n    <motion.div className=\"pb-10\">\r\n      <div className=\"anime-list-container\">\r\n        <motion.div className={`anime-list ${gridColsTemp}`}>\r\n          {trimedAllAnimeData\r\n            .filter((_, index) => index <= showMore.stream - 1)\r\n            .map((anime) => {\r\n              //check where the data come from node or media\r\n              const animeData = anime.id !== undefined ? anime : anime.node;\r\n              return (\r\n                <Anime key={`${keyParam}-${animeData.id}`} anime={animeData} />\r\n              );\r\n            })}\r\n        </motion.div>\r\n      </div>\r\n      {allAnimeData.length > initialQuantity && (\r\n        <button\r\n          onClick={streamShowMoreHandler}\r\n          className=\"stream-show-more-btn\"\r\n        >\r\n          Load More\r\n        </button>\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\nexport default AnimeList;\r\n","// convert hex to rgba\r\nexport const hexToRgbA = (hex, opacity) => {\r\n  let c;\r\n  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\r\n    c = hex.substring(1).split(\"\");\r\n    if (c.length === 3) {\r\n      c = [c[0], c[0], c[1], c[1], c[2], c[2]];\r\n    }\r\n    c = \"0x\" + c.join(\"\");\r\n    return (\r\n      \"rgba(\" +\r\n      [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(\",\") +\r\n      `,${opacity})`\r\n    );\r\n  }\r\n  return \"rgba(0,0,0,0.2)\";\r\n};\r\n\r\nexport const secondsToDhms = (seconds, dhms) => {\r\n  seconds = Number(seconds);\r\n  let d = Math.floor(seconds / (3600 * 24));\r\n  let h = Math.floor((seconds % (3600 * 24)) / 3600);\r\n  let m = Math.floor((seconds % 3600) / 60);\r\n  let s = Math.floor(seconds % 60);\r\n  let dDisplay = d > 0 ? d + \"d \" : \"\";\r\n  let hDisplay = h > 0 ? h + \"h \" : \"\";\r\n  let mDisplay = m > 0 ? m + \"min \" : \"\";\r\n  let sDisplay = s > 0 ? s + \"s\" : \"\";\r\n  if (dhms === \"dhms\") {\r\n    return dDisplay + hDisplay + mDisplay + sDisplay;\r\n  } else if (dhms === \"dhm\") {\r\n    return dDisplay + hDisplay + mDisplay;\r\n  }\r\n};\r\n\r\nexport const showMoreLessBtn = (refElement, extraClassName, height) => {\r\n  return setTimeout(() => {\r\n    if (refElement.current) {\r\n      if (\r\n        refElement.current.firstElementChild.offsetHeight > `${height + 100}`\r\n      ) {\r\n        refElement.current.firstElementChild.style.height = `${height}px`;\r\n        refElement.current.firstElementChild.style.overflow = \"hidden\";\r\n        refElement.current.firstElementChild.style.position = \"relative\";\r\n        const showMoreBtn = document.createElement(\"button\");\r\n        showMoreBtn.className = extraClassName;\r\n        showMoreBtn.textContent = \"Show More\";\r\n        refElement.current.firstElementChild.lastElementChild.after(\r\n          showMoreBtn\r\n        );\r\n\r\n        showMoreBtn.addEventListener(\"click\", () => {\r\n          showMoreBtn.style.display = \"none\";\r\n          refElement.current.firstElementChild.style.height = \"100%\";\r\n        });\r\n      }\r\n    }\r\n  }, 100);\r\n};\r\n\r\nexport const unKnownPng =\r\n  \"https://png.pngitem.com/pimgs/s/52-526033_unknown-person-icon-png-transparent-png.png\";\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { secondsToDhms } from \"../../utils/helpers\";\r\nimport { faClock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useApolloClient, gql } from \"@apollo/client\";\r\n\r\nconst Airing = ({ airing }) => {\r\n  const history = useHistory();\r\n  const client = useApolloClient();\r\n\r\n  const animeCardClickHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    client.writeQuery({\r\n      query: gql`\r\n        query WriteIsLoading {\r\n          loadingbar {\r\n            isLoading\r\n          }\r\n        }\r\n      `,\r\n      data: {\r\n        // Contains the data to write\r\n        loadingbar: {\r\n          __typename: \"LoadingBar\",\r\n          isLoading: 30,\r\n        },\r\n      },\r\n    });\r\n\r\n    setTimeout(() => {\r\n      history.push(`/anime/${airing.id}`);\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <motion.a\r\n      onClick={animeCardClickHandler}\r\n      href={`/anime/${airing.id}`}\r\n      className=\"airing-container group\"\r\n      animate={{ opacity: 1, transition: { duration: 2 } }}\r\n      initial={{ opacity: 0 }}\r\n    >\r\n      <div>\r\n        <img alt=\"\"\r\n          className=\"transform group-hover:scale-110\"\r\n          src={airing.bannerImage}\r\n        />\r\n        <div\r\n          className=\"group-hover:bg-opacity-60\"\r\n        >\r\n          <h3>\r\n            {airing.title.english ? airing.title.english : airing.title.romaji}\r\n          </h3>\r\n          <p>\r\n            <span>Episode {airing.nextAiringEpisode.episode} </span>\r\n            <span className=\"\">\r\n              <FontAwesomeIcon icon={faClock} />{\" \"}\r\n              {secondsToDhms(airing.nextAiringEpisode.timeUntilAiring, \"dhm\")}\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </motion.a>\r\n  );\r\n};\r\n\r\nexport default Airing;\r\n","import React from \"react\";\r\nimport Airing from \"./Airing\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst AiringList = ({ allAiring, keyParam }) => {\r\n  // maintain the array for duplicate elements\r\n  let counterAnime = [];\r\n  let trimedallAiring = allAiring.filter((anime) => {\r\n    if (!counterAnime.includes(anime.media.id)) {\r\n      counterAnime.push(anime.media.id);\r\n      if ((anime.media !== undefined) & (anime.media.bannerImage !== null)) {\r\n        return anime;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  return (\r\n    <motion.div className=\"airing-list-container\">\r\n      <div>\r\n        <div>\r\n          {trimedallAiring\r\n            .filter((_, index) => index <= 7)\r\n            .map((airing) => {\r\n              return (\r\n                <Airing\r\n                  key={`${keyParam}-${airing.media.id}`}\r\n                  airing={airing.media}\r\n                />\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\nexport default AiringList;\r\n","import { Markup } from \"interweave\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { faThumbsUp, faThumbsDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useApolloClient, gql } from \"@apollo/client\";\r\n\r\nconst Recom = ({ recom, widthParam }) => {\r\n  const recMedia = recom.node ? recom.node.mediaRecommendation : recom.media;\r\n\r\n  const rating = recom.node ? recom.node.rating : recom.rating;\r\n\r\n  const history = useHistory();\r\n  const client = useApolloClient();\r\n\r\n  const animeCardClickHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    client.writeQuery({\r\n      query: gql`\r\n        query WriteIsLoading {\r\n          loadingbar {\r\n            isLoading\r\n          }\r\n        }\r\n      `,\r\n      data: {\r\n        // Contains the data to write\r\n        loadingbar: {\r\n          __typename: \"LoadingBar\",\r\n          isLoading: 30,\r\n        },\r\n      },\r\n    });\r\n\r\n    setTimeout(() => {\r\n      history.push(`/anime/${recMedia.id}`);\r\n    }, 500);\r\n  };\r\n  return (\r\n    <motion.a\r\n      draggable={true}\r\n      href={`/anime/${recMedia.id}`}\r\n      onClick={animeCardClickHandler}\r\n      className={` ${\r\n        widthParam ? \"w-full ssm:w-8/12 sm:w-11/12 my-3\" : \"w-60 mx-3\"\r\n      }  recom-container`}\r\n    >\r\n      <div className=\"recom-detail\">\r\n        <img alt=\"\" src={recMedia.coverImage.large} />\r\n        <div className=\"recom-info\">\r\n          <p className=\"line-clamp-4\">\r\n            <b>Title:</b>\r\n            <br />{\" \"}\r\n            {recMedia.title.english\r\n              ? recMedia.title.english\r\n              : recMedia.title.romaji}\r\n          </p>\r\n          {recMedia.format && (\r\n            <p>\r\n              <b>Format:</b>\r\n              <br /> {recMedia.format.toLowerCase()}\r\n            </p>\r\n          )}\r\n          {recMedia.source && (\r\n            <p>\r\n              <b>Source:</b>\r\n              <br /> {recMedia.source.toLowerCase()}\r\n            </p>\r\n          )}\r\n          {recMedia.status && (\r\n            <p>\r\n              <b>Status:</b>\r\n              <br /> {recMedia.status.toLowerCase()}\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {recMedia.description && (\r\n        <div className=\"recom-desc line-clamp-5\">\r\n          <b>Description:</b> <Markup content={recMedia.description} />\r\n        </div>\r\n      )}\r\n      <div className=\"recom-rating\">\r\n        {rating !== undefined &&\r\n          (rating <= 0 ? (\r\n            <div className=\"red-rate\">\r\n              {rating} <FontAwesomeIcon icon={faThumbsDown} />\r\n            </div>\r\n          ) : (\r\n            <div className=\"green-rate\">\r\n              +{rating} <FontAwesomeIcon icon={faThumbsUp} />\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </motion.a>\r\n  );\r\n};\r\n\r\nexport default Recom;\r\n","import Recom from \"../detailPage/Recom\";\r\n\r\nconst HomeRecom = ({ allRecom, keyParam }) => {\r\n  return (\r\n    <div className=\"home-rec\">\r\n      {allRecom\r\n        .filter((_, index) => index <= 1)\r\n        .map((rec) => {\r\n          return (\r\n            <Recom\r\n              key={keyParam + rec.media.id}\r\n              widthParam={true}\r\n              recom={rec}\r\n            />\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeRecom;\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CircleRate from \"../detailPage/CircleRate\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Markup } from \"interweave\";\r\nimport { useApolloClient, gql } from \"@apollo/client\";\r\n\r\nconst Top = ({ anime, rank }) => {\r\n  const history = useHistory();\r\n  const client = useApolloClient();\r\n\r\n  const animeCardClickHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    client.writeQuery({\r\n      query: gql`\r\n        query WriteIsLoading {\r\n          loadingbar {\r\n            isLoading\r\n          }\r\n        }\r\n      `,\r\n      data: {\r\n        // Contains the data to write\r\n        loadingbar: {\r\n          __typename: \"LoadingBar\",\r\n          isLoading: 30,\r\n        },\r\n      },\r\n    });\r\n\r\n    setTimeout(() => {\r\n      history.push(`/anime/${anime.id}`);\r\n    }, 500);\r\n  };\r\n\r\n  let description = anime.description;\r\n  description = description.substring(0, 300);\r\n\r\n  return (\r\n    <div className=\"top-container group\">\r\n      <motion.a\r\n        href={`/anime/${anime.id}`}\r\n        onClick={animeCardClickHandler}\r\n        animate={{ opacity: 1, transition: { duration: 1 } }}\r\n        initial={{ opacity: 0 }}\r\n      >\r\n        <img alt=\"\" src={anime.coverImage.large} />\r\n\r\n        <div className=\"top-info-container\">\r\n          <div className=\"top-status\">\r\n            <h3>\r\n              {anime.title.english ? anime.title.english : anime.title.romaji}\r\n            </h3>\r\n            <div className=\"top-information\">\r\n              {anime.format && <p>{anime.format.toLowerCase()}</p>}\r\n              {anime.source && <p>{anime.source.toLowerCase()}</p>}\r\n              {anime.status && <p>{anime.status.toLowerCase()}</p>}\r\n              <p>\r\n                {anime.season ? anime.season.toLowerCase() : \"\"}{\" \"}\r\n                {anime.seasonYear ? anime.seasonYear : \"\"}\r\n              </p>\r\n            </div>\r\n            <div className=\"top-tag-container\">\r\n              {anime.tags\r\n                .filter((_, index) => index<=3)\r\n                .map((tag) => {\r\n                  return <span key={tag.name}>{tag.name}</span>;\r\n                })}\r\n            </div>\r\n          </div>\r\n          <div className=\"top-desc\">\r\n            <Markup content={description} />\r\n          </div>\r\n\r\n          <div className=\"top-rate-score transform translate-x-4 -translate-y-4 group-hover:translate-y-0.5 group-hover:-translate-x-0.5\">\r\n            <CircleRate size={4} rate={anime.averageScore} />\r\n          </div>\r\n          <div\r\n            className=\"top-rate-popularity transform translate-x-4 translate-y-4 \r\n    group-hover:-translate-y-0.5 group-hover:-translate-x-0.5\"\r\n          >\r\n            <div className=\"relative\">\r\n              <CircleRate\r\n                size={4}\r\n                rate={((anime.popularity / 300000) * 100).toFixed(0)}\r\n                symbol={faHeart}\r\n              />\r\n              <p className=\"top-rate-pop-text\">popularity</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </motion.a>\r\n      <span>{rank}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Top;\r\n","import React, { useState } from \"react\";\r\nimport Top from \"./Top\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst TopList = ({ allAnimeData, initialQuantity, keyParam }) => {\r\n  const [showMore, setShowMore] = useState({\r\n    stream: initialQuantity,\r\n  });\r\n\r\n  const streamShowMoreHandler = (e) => {\r\n    if (showMore.stream > 30) {\r\n      setShowMore({ ...showMore, stream: showMore.stream + 999 });\r\n      e.target.style.display = \"none\";\r\n    } else {\r\n      setShowMore({ ...showMore, stream: showMore.stream + 10 });\r\n    }\r\n    if (showMore.stream + 10 >= allAnimeData.length) {\r\n      e.target.style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  // maintain the array for duplicate elements\r\n  let counterAnime = [];\r\n  let trimedAllAnimeData = allAnimeData.filter((anime) => {\r\n    let anim = anime.id !== undefined ? anime : anime.node;\r\n    if (!counterAnime.includes(anim.id)) {\r\n      counterAnime.push(anim.id);\r\n      if (anime !== undefined) {\r\n        return anime;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  return (\r\n    <motion.div className=\"top-list-container\">\r\n      <div className=\"anime-list-container\">\r\n        <motion.div className=\"anime-list\">\r\n          {trimedAllAnimeData\r\n            .filter((_, index) => index <= showMore.stream - 1)\r\n            .map((anime, index) => {\r\n              //check where the data come from node or media\r\n              const animeData = anime.id !== undefined ? anime : anime.node;\r\n              return (\r\n                <Top\r\n                  key={`${keyParam}-${animeData.id}`}\r\n                  anime={animeData}\r\n                  rank={index + 1}\r\n                />\r\n              );\r\n            })}\r\n        </motion.div>\r\n      </div>\r\n      {allAnimeData.length > initialQuantity && (\r\n        <button\r\n          onClick={streamShowMoreHandler}\r\n          className=\"stream-show-more-btn \"\r\n        >\r\n          Load More\r\n        </button>\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\nexport default TopList;\r\n","import React, { useState, useRef } from \"react\";\r\nimport Recom from \"./Recom\";\r\nimport { faChevronCircleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { recomListQuery } from \"../../utils/queries\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nconst RecomList = ({ allRecom, animeID, initialQuantity, keyParam }) => {\r\n  const isSmallDevice = document.documentElement.clientWidth <= 768;\r\n  const magicNum1 = 250;\r\n  const magicNum2 = isSmallDevice ? 264 : 264 * 2;\r\n  const magicNum3 = 275;\r\n  const rightLeftScroll = useRef(null);\r\n  const wastefulCover = useRef(null);\r\n\r\n  const [showMore, setShowMore] = useState({\r\n    recommend: initialQuantity,\r\n  });\r\n\r\n  let id;\r\n  if (animeID) {\r\n    id = animeID;\r\n  } else {\r\n    id = 16498;\r\n  }\r\n  const { loading, error, data } = useQuery(recomListQuery, {\r\n    variables: {\r\n      id: id,\r\n    },\r\n  });\r\n\r\n  if (loading) {\r\n    return null;\r\n  }\r\n\r\n  if (error) {\r\n    console.log(error.message);\r\n    return `Error! ${error}`;\r\n  }\r\n\r\n  let allRecomData;\r\n  if (allRecom) {\r\n    allRecomData = allRecom;\r\n  } else {\r\n    allRecomData = data.Media.recommendations.edges;\r\n  }\r\n\r\n  let isDown = false;\r\n  let startx, scrollLeft;\r\n\r\n  const recSliderMouseDownHandler = (e) => {\r\n    e.preventDefault();\r\n    isDown = true;\r\n    startx = e.pageX - rightLeftScroll.current.offsetLeft;\r\n    scrollLeft = rightLeftScroll.current.scrollLeft;\r\n  };\r\n\r\n  const recSliderMouseLeaveHandler = () => {\r\n    isDown = false;\r\n    wastefulCover.current.style.display = \"none\";\r\n  };\r\n\r\n  const recSliderMouseUpHandler = () => {\r\n    isDown = false;\r\n\r\n    wastefulCover.current.style.display = \"none\";\r\n\r\n    setShowMore({ recommend: allRecomData.length });\r\n  };\r\n\r\n  const recSliderMouseMoveHandler = (e) => {\r\n    if (!isDown) return;\r\n    e.preventDefault();\r\n    const x = e.pageX - rightLeftScroll.current.offsetLeft;\r\n    const walk = (x - startx) * 1.5;\r\n    rightLeftScroll.current.scrollLeft = scrollLeft - walk;\r\n    wastefulCover.current.style.display = \"block\";\r\n  };\r\n\r\n  const rightScrollHandler = () => {\r\n    let recLeft = rightLeftScroll.current.scrollLeft;\r\n    let recWidth = rightLeftScroll.current.scrollWidth;\r\n\r\n    if ((Math.round(recLeft) - magicNum1) % magicNum2 !== 0) {\r\n      recLeft = Math.round((Math.round(recLeft) - magicNum1) / magicNum2);\r\n      recLeft = recLeft * magicNum2 + magicNum1;\r\n      rightLeftScroll.current.scrollTo({\r\n        top: 0,\r\n        left: recWidth === recLeft ? recLeft + magicNum3 : recLeft + magicNum2,\r\n        behavior: \"smooth\",\r\n      });\r\n      if (\r\n        isSmallDevice\r\n          ? showMore.recommend < allRecomData.length + 1\r\n          : showMore.recommend < allRecomData.length + 3\r\n      ) {\r\n        const newRecommend = isSmallDevice\r\n          ? showMore.recommend + 1\r\n          : showMore.recommend + 3;\r\n        setShowMore({ recommend: newRecommend });\r\n      }\r\n    } else {\r\n      rightLeftScroll.current.scrollTo({\r\n        top: 0,\r\n        left: recLeft === 0 ? recLeft + magicNum1 : recLeft + magicNum2,\r\n        behavior: \"smooth\",\r\n      });\r\n\r\n      if (\r\n        isSmallDevice\r\n          ? showMore.recommend < allRecomData.length + 1\r\n          : showMore.recommend < allRecomData.length + 3\r\n      ) {\r\n        const newRecommend = isSmallDevice\r\n          ? showMore.recommend + 1\r\n          : showMore.recommend + 3;\r\n        setShowMore({ recommend: newRecommend });\r\n      }\r\n    }\r\n  };\r\n  const leftScrollHandler = () => {\r\n    let recLeft = rightLeftScroll.current.scrollLeft;\r\n    let recWidth = rightLeftScroll.current.scrollWidth;\r\n    if ((Math.round(recLeft) - magicNum1) % magicNum2 !== 0) {\r\n      recLeft = Math.round((Math.round(recLeft) - magicNum1) / magicNum2);\r\n      recLeft = recLeft * magicNum2 + magicNum1;\r\n      rightLeftScroll.current.scrollTo({\r\n        top: 0,\r\n        left: recWidth === recLeft ? recLeft - magicNum3 : recLeft - magicNum2,\r\n        behavior: \"smooth\",\r\n      });\r\n    } else {\r\n      rightLeftScroll.current.scrollTo({\r\n        top: 0,\r\n        left: recWidth === recLeft ? recLeft - magicNum3 : recLeft - magicNum2,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const recTouchHandler = () => {\r\n    let recLeft = rightLeftScroll.current.scrollLeft;\r\n    let recWidth = rightLeftScroll.current.scrollWidth;\r\n\r\n    if (recLeft / recWidth < 0.5) {\r\n      if (\r\n        isSmallDevice\r\n          ? showMore.recommend < allRecomData.length + 1\r\n          : showMore.recommend < allRecomData.length + 3\r\n      ) {\r\n        setShowMore({ recommend: allRecomData.length });\r\n      }\r\n    }\r\n    if ((Math.round(recLeft) - magicNum1) % magicNum2 !== 0 && recLeft !== 0) {\r\n      recLeft = Math.round((Math.round(recLeft) - magicNum1) / magicNum2);\r\n      recLeft = recLeft * magicNum2 + magicNum1;\r\n      rightLeftScroll.current.scrollTo({\r\n        top: 0,\r\n        left: recLeft,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {allRecomData.length > 0 && (\r\n        <div>\r\n          <h4 className=\"recom-list-title\">Recommendations</h4>\r\n          <div className=\"recommendation-parent\">\r\n            <div\r\n              className=\"recommendation\"\r\n              ref={rightLeftScroll}\r\n              onTouchEnd={recTouchHandler}\r\n              onMouseDown={recSliderMouseDownHandler}\r\n              onMouseLeave={recSliderMouseLeaveHandler}\r\n              onMouseUp={recSliderMouseUpHandler}\r\n              onMouseMove={recSliderMouseMoveHandler}\r\n            >\r\n              <div>\r\n                {allRecomData.slice(0, showMore.recommend - 1).map((recom, index) => {\r\n                    const id = recom.node\r\n                      ? recom.node.mediaRecommendation.id\r\n                      : recom.media.id;\r\n                    return <Recom key={keyParam + id + index} recom={recom} />;\r\n                })}\r\n                <div ref={wastefulCover} className=\"wasteful-cover\"></div>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={leftScrollHandler}\r\n              className=\"left-0 bg-gradient-to-l\"\r\n            >\r\n              <FontAwesomeIcon\r\n                className=\"font-icon-recom-list rotate-180\"\r\n                icon={faChevronCircleRight}\r\n              />\r\n            </button>\r\n            <button\r\n              onClick={rightScrollHandler}\r\n              className=\"right-0 bg-gradient-to-r\"\r\n            >\r\n              <FontAwesomeIcon\r\n                className=\"font-icon-recom-list\"\r\n                icon={faChevronCircleRight}\r\n              />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default RecomList;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { secondsToDhms } from \"../../utils/helpers\";\r\nimport { faClock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Markup } from \"interweave\";\r\nimport { useApolloClient, gql } from \"@apollo/client\";\r\n\r\nconst AirSlide = ({ airing, onGrabbingSlider }) => {\r\n  const history = useHistory();\r\n  const client = useApolloClient();\r\n\r\n  const animeCardClickHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    client.writeQuery({\r\n      query: gql`\r\n        query WriteIsLoading {\r\n          loadingbar {\r\n            isLoading\r\n          }\r\n        }\r\n      `,\r\n      data: {\r\n        // Contains the data to write\r\n        loadingbar: {\r\n          __typename: \"LoadingBar\",\r\n          isLoading: 30,\r\n        },\r\n      },\r\n    });\r\n\r\n    setTimeout(() => {\r\n      history.push(`/anime/${airing.id}`);\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"air-slide-container anni group\"\r\n      onMouseDown={() => onGrabbingSlider()}\r\n      onTouchStart={() => onGrabbingSlider()}\r\n    >\r\n      <img\r\n        alt=\"\"\r\n        className=\"transform group-hover:scale-110 \"\r\n        src={airing.bannerImage}\r\n      />\r\n      <div className=\"group-hover:bg-opacity-80\">\r\n        <div className=\"air-slide-cover-image transform group-hover:scale-95 \">\r\n          <a onClick={animeCardClickHandler} href={`/anime/${airing.id}`}>\r\n            <img alt=\"\" src={airing.coverImage.large} />\r\n          </a>\r\n        </div>\r\n        <div className=\"air-slide-info\">\r\n          <a href={`/anime/${airing.id}`} onClick={animeCardClickHandler}>\r\n            <h3 onClick={animeCardClickHandler}>\r\n              {airing.title.english\r\n                ? airing.title.english\r\n                : airing.title.romaji}\r\n            </h3>\r\n          </a>\r\n          {airing.format && (\r\n            <p>\r\n              <b>Format:</b>\r\n              <br /> {airing.format.toLowerCase()}\r\n            </p>\r\n          )}\r\n          {airing.source && (\r\n            <p>\r\n              <b>Source:</b>\r\n              <br /> {airing.source.toLowerCase()}\r\n            </p>\r\n          )}\r\n          {airing.genres && (\r\n            <p>\r\n              <b>Genres:</b>\r\n              <br />{\" \"}\r\n              {airing.genres\r\n                .filter((_, index) => index <= 2)\r\n                .map((genre) => {\r\n                  return (\r\n                    <span key={genre} className=\"air-slide-genres\">\r\n                      {genre}\r\n                    </span>\r\n                  );\r\n                })}\r\n            </p>\r\n          )}\r\n          <p className=\"text-indigo-200\">\r\n            <span>\r\n              <b>Next airing:</b> <br /> Episode{\" \"}\r\n              {airing.nextAiringEpisode.episode}{\" \"}\r\n            </span>\r\n            <span className=\"\">\r\n              <FontAwesomeIcon icon={faClock} />{\" \"}\r\n              {secondsToDhms(airing.nextAiringEpisode.timeUntilAiring, \"dhm\")}\r\n            </span>\r\n          </p>\r\n        </div>\r\n        <div className=\"air-slide-desc\">\r\n          <Markup content={airing.description} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AirSlide;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport AirSlide from \"./AirSlide\";\r\nimport { faChevronCircleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst AiringSlider = ({ allAiring, keyParam }) => {\r\n  let autoSlidePlay;\r\n  const [slideNum, setSlideNum] = useState(0);\r\n  const [isAutoPlayOn, setIsAutoPlayOn] = useState(true);\r\n\r\n  const onGrabbingSlider = useCallback(() => {\r\n    setIsAutoPlayOn(false);\r\n    clearTimeout(autoSlidePlay);\r\n    // eslint-disable-next-line\r\n  }, [setIsAutoPlayOn]);\r\n\r\n  // maintain the array for duplicate elements\r\n  let counterAnime = [];\r\n  let trimedallAiring = allAiring.filter((anime) => {\r\n    if (!counterAnime.includes(anime.media.id)) {\r\n      counterAnime.push(anime.media.id);\r\n      if ((anime.media !== undefined) & (anime.media.bannerImage !== null)) {\r\n        return anime;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  const rightHandler = () => {\r\n    setIsAutoPlayOn(false);\r\n\r\n    setTimeout(() => {\r\n      if (slideNum === 7) {\r\n        setSlideNum(0);\r\n      } else {\r\n        setSlideNum(slideNum + 1);\r\n      }\r\n    }, 200);\r\n  };\r\n\r\n  const leftHandler = () => {\r\n    setIsAutoPlayOn(false);\r\n    setTimeout(() => {\r\n      if (slideNum === 0) {\r\n        setSlideNum(7);\r\n      } else {\r\n        setSlideNum(slideNum - 1);\r\n      }\r\n    }, 200);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAutoPlayOn) {\r\n      // eslint-disable-next-line\r\n      autoSlidePlay = setTimeout(() => {\r\n        if (slideNum === 7) {\r\n          setSlideNum(0);\r\n        } else {\r\n          setSlideNum(slideNum + 1);\r\n        }\r\n      }, 4000);\r\n      return () => {\r\n        clearTimeout(autoSlidePlay);\r\n      };\r\n    }\r\n  }, [slideNum, isAutoPlayOn]);\r\n  return (\r\n    <div className=\"airing-slider-container\">\r\n      {trimedallAiring\r\n        .filter((_, index) => index === slideNum)\r\n        .map((airing) => {\r\n          return (\r\n            <AirSlide\r\n              onGrabbingSlider={onGrabbingSlider}\r\n              key={`${keyParam}-${airing.media.id}`}\r\n              airing={airing.media}\r\n            />\r\n          );\r\n        })}\r\n\r\n      <button onClick={leftHandler} className=\"left-0\">\r\n        <FontAwesomeIcon\r\n          className=\"text-4xl transform rotate-180 text-gray-500\"\r\n          icon={faChevronCircleRight}\r\n        />\r\n      </button>\r\n      <button onClick={rightHandler} className=\"right-0\">\r\n        <FontAwesomeIcon\r\n          className=\"text-4xl text-gray-500\"\r\n          icon={faChevronCircleRight}\r\n        />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default AiringSlider;\r\n","const Loading = () => {\r\n  return (\r\n    <div className=\"main-loading-container\">\r\n      <div>\r\n        <div className=\"lds-ripple\">\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { homeQuery } from \"../utils/queries\";\r\nimport AnimeList from \"../components/AnimeList\";\r\nimport AiringList from \"../components/homePage/AiringList\";\r\nimport HomeRec from \"../components/homePage/HomeRec\";\r\nimport TopList from \"../components/homePage/TopList\";\r\nimport RecomList from \"../components/detailPage/RecomList\";\r\nimport AiringSlider from \"../components/homePage/AiringSlider\";\r\nimport Loading from \"./Loading\";\r\nimport { useApolloClient, gql } from \"@apollo/client\";\r\n\r\nconst Home = ({ gridRef }) => {\r\n  const client = useApolloClient();\r\n  client.writeQuery({\r\n    query: gql`\r\n      query WriteIsLoading {\r\n        loadingbar {\r\n          isLoading\r\n        }\r\n      }\r\n    `,\r\n    data: {\r\n      // Contains the data to write\r\n      loadingbar: {\r\n        __typename: \"LoadingBar\",\r\n        isLoading: 80,\r\n      },\r\n    },\r\n  });\r\n\r\n  const hQuery = homeQuery;\r\n  const { loading, error, data } = useQuery(hQuery);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  if (error) {\r\n    console.log(error.message);\r\n    return `Error! ${error}`;\r\n  }\r\n  const trending = data.trending.media;\r\n  const airing = data.airing.airingSchedules;\r\n  const allTime = data.allTime.media;\r\n  const top100 = data.top100.media;\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        ref={gridRef}\r\n        className=\" home-grid-container home-page-container\"\r\n      >\r\n        <div className=\"h-header\">\r\n          {airing[0] && (\r\n            <div>\r\n              <AiringSlider allAiring={airing} keyParam={\"airingSlider\"} />\r\n            </div>\r\n          )}\r\n\r\n          {data.homeRecom.recommendations[0] && (\r\n            <div>\r\n              <RecomList\r\n                allRecom={data.homeRecom.recommendations}\r\n                initialQuantity={7}\r\n                keyParam={\"recSlider\"}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"h-sidebar \">\r\n          {data.homeRecom.recommendations[0] && (\r\n            <div>\r\n              <h3>Top Recommendations</h3>\r\n              <HomeRec\r\n                allRecom={data.homeRecom.recommendations}\r\n                keyParam={\"topRec\"}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {airing[0] && (\r\n            <div>\r\n              <h3>Airing Schedules</h3>\r\n              <AiringList allAiring={airing} keyParam={\"airing\"} />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"h-trending\">\r\n          <h3>Trending</h3>\r\n          <AnimeList\r\n            allAnimeData={trending}\r\n            colsInRow={4}\r\n            initialQuantity={8}\r\n            keyParam={\"homeTrending\"}\r\n          />\r\n        </div>\r\n        <div className=\"h-alltime\">\r\n          <h3>Popular All Time</h3>\r\n          <AnimeList\r\n            allAnimeData={allTime}\r\n            colsInRow={4}\r\n            initialQuantity={8}\r\n            keyParam={\"homepopAllTime\"}\r\n          />\r\n        </div>\r\n        <div className=\"h-top100\">\r\n          <h3>Top 100</h3>\r\n          <TopList\r\n            allAnimeData={top100}\r\n            initialQuantity={8}\r\n            keyParam={\"top100\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst Stream = ({ episode }) => {\r\n  return (\r\n    <motion.a\r\n      href={episode.url}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n      className=\"anime-card-container hover-card-num-1\"\r\n      animate={{ opacity: 1, transition: { duration: 2 } }}\r\n      initial={{ opacity: 0 }}\r\n    >\r\n      <img alt=\"\" src={episode.thumbnail}></img>\r\n      <h3 className=\"text-sm line-clamp-2 px-2\">{episode.title}</h3>\r\n    </motion.a>\r\n  );\r\n};\r\n\r\nexport default Stream;\r\n","import React, { useState } from \"react\";\r\nimport Stream from \"./Stream\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst StreamList = ({ allEpisode, colsInRow, initialQuantity, keyParam }) => {\r\n  const [showMore, setShowMore] = useState({\r\n    stream: initialQuantity,\r\n  });\r\n\r\n  let gridColsTemp = `grid-cols-2 ssm:grid-cols-${colsInRow - 1} lg:grid-cols-${\r\n    colsInRow - 1\r\n  } xl:grid-cols-${colsInRow}`;\r\n\r\n  const streamShowMoreHandler = (e) => {\r\n    if (showMore.stream > 20) {\r\n      setShowMore({ stream: showMore.stream + 999 });\r\n      e.target.remove();\r\n    } else {\r\n      setShowMore({ stream: showMore.stream + 10 });\r\n    }\r\n    if (showMore.stream + 10 >= allEpisode.length) {\r\n      e.target.remove();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div className=\"pb-10\">\r\n      <div className=\"anime-list-container\">\r\n        <div className={`anime-list ${gridColsTemp}`}>\r\n          {allEpisode\r\n            .filter((_, index) => index <= showMore.stream - 1)\r\n            .map((episode) => {\r\n              return (\r\n                <Stream\r\n                  key={`${keyParam}-${episode.title}`}\r\n                  episode={episode}\r\n                />\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n      {allEpisode.length > initialQuantity && (\r\n        <button\r\n          onClick={streamShowMoreHandler}\r\n          className=\"stream-show-more-btn \"\r\n        >\r\n          Load More\r\n        </button>\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\nexport default StreamList;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFire } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Popularity = ({ popularity }) => {\r\n  let popularityRange = 100 - ((popularity / 400000) * 100).toFixed(0);\r\n  if (popularityRange > 94) {\r\n    popularityRange = 94;\r\n  }\r\n  if (popularityRange < 0) {\r\n    popularityRange = 0;\r\n  }\r\n\r\n  return (\r\n    <div className=\"popularity-container\">\r\n      <div>\r\n        <div style={{ left: -popularityRange + \"%\" }}></div>\r\n      </div>\r\n      <FontAwesomeIcon\r\n        style={{ left: 94.8 - popularityRange + \"%\" }}\r\n        className=\"font-icon-pop\"\r\n        icon={faFire}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popularity;\r\n","const ExternalLinks = ({ link }) => {\r\n  let bg;\r\n  switch (link.site) {\r\n    case \"Twitter\":\r\n    case \"Hulu\":\r\n    case \"Funimation\":\r\n      bg = \"blue\";\r\n      break;\r\n    case \"Official Site\":\r\n      bg = \"green\";\r\n      break;\r\n    case \"Youtube\":\r\n    case \"Tubi TV\":\r\n    case \"Netflix\":\r\n      bg = \"red\";\r\n      break;\r\n    case \"Crunchyroll\":\r\n    case \"VRV\":\r\n      bg = \"purple\";\r\n      break;\r\n    case \"AnimeLab\":\r\n    case \"Amazon\":\r\n      bg = \"yellow\";\r\n      break;\r\n    default:\r\n      bg = \"gray\";\r\n  }\r\n\r\n  return (\r\n    <li>\r\n      <a\r\n        className={`external-link  bg-${bg}-300\r\n               hover:bg-${bg}-500 active:bg-${bg}-600`}\r\n        href={link.url}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        {link.site}\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExternalLinks;\r\n","const Rank = ({ rank }) => {\r\n  let bgRank, bgBorder, rankRound;\r\n  if (rank.context.includes(\"most popular\")) {\r\n    bgRank = \"bg-green-200\";\r\n    bgBorder = \"border-green-600\";\r\n    rankRound = \"bg-green-400\";\r\n  } else {\r\n    bgRank = \"bg-yellow-200\";\r\n    bgBorder = \"border-yellow-600\";\r\n    rankRound = \"bg-yellow-400\";\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={`rank ${bgRank} ${\r\n        rank.allTime ? `border-r-4 border-l-4 ${bgBorder} ` : \"\"\r\n      } min-w-max rounded-2xl pr-3 py-1  my-1 overflow-hidden`}\r\n    >\r\n      <span className={`${rankRound} pr-1 py-7 pl-7 font-semibold -ml-6`}>\r\n        #{rank.rank}\r\n      </span>\r\n      {\" \" + rank.context}\r\n      <span\r\n        className={`bg-gray-200 ${\r\n          rank.year ? \"p-1\" : \"\"\r\n        } text-gray-800 rounded-xl text-xs font-bold float-right`}\r\n      >\r\n        {rank.year\r\n          ? `${rank.season ? rank.season.toLowerCase() : \"\"} ${rank.year}`\r\n          : \"\"}\r\n      </span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Rank;\r\n","\r\nconst Trailer = ({ embedId }) => (\r\n  <div className=\"video-responsive\">\r\n    <iframe\r\n      width=\"853\"\r\n      height=\"480\"\r\n      src={`https://www.youtube.com/embed/${embedId}`}\r\n      frameBorder=\"0\"\r\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n      allowFullScreen\r\n      title=\"Embedded youtube\"\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default Trailer;\r\n","import React,{useEffect, useRef} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { unKnownPng } from \"../../utils/helpers\";\r\nimport { useApolloClient,gql } from '@apollo/client';\r\n\r\n\r\nconst Character = ({ char, animeID, mangaStaffID }) => {\r\n  const client = useApolloClient();\r\n  const linkRef = useRef(null);\r\n  let charID, staffID;\r\n  charID = char.node.id;\r\n  if (char.voiceActors[0] === undefined) {\r\n    staffID = mangaStaffID;\r\n  } else {\r\n    staffID = char.voiceActors[0].id;\r\n  }\r\n\r\n  useEffect(() => {\r\n    \r\n    linkRef.current.addEventListener('click', charClickHandler)\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  \r\n  const charClickHandler = () => {\r\n    client.writeQuery({\r\n      query: gql`\r\n      query WriteIsLoading {\r\n        loadingbar {\r\n          isLoading\r\n        }\r\n      }`,\r\n      data: { // Contains the data to write\r\n        loadingbar: {\r\n          __typename: 'LoadingBar',\r\n          isLoading: 30\r\n        },\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Link ref={linkRef}\r\n      to={`/anime/${animeID}/character/${charID}/actor/${staffID}`}\r\n      className=\"char-container\"\r\n    >\r\n      <div className=\"char-image\">\r\n        <img src={char.node.image.medium} alt=\"\"/>\r\n      </div>\r\n      <div\r\n        className=\"char-staff-info\"\r\n        style={{ fontSize: \"9px\" }}\r\n      >\r\n        <div className=\"char-name\">\r\n          <span>{char.node.name.full}</span>\r\n          <span>\r\n            {staffID !== mangaStaffID ? char.voiceActors[0].name.full : \"\"}\r\n          </span>\r\n        </div>\r\n        <div className=\"char-role\">\r\n          <span>{char.role.toLowerCase()}</span>\r\n          <span>\r\n            {staffID !== mangaStaffID ? char.voiceActors[0].languageV2 : \"\"}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"staff-image\">\r\n        <img\r\n          src={\r\n            staffID !== mangaStaffID\r\n              ? char.voiceActors[0].image.medium\r\n              : unKnownPng\r\n          }\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Character;\r\n","import React, { useState } from \"react\";\r\nimport Character from \"./Character\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst CharacterList = ({ characters, animeID, mangaStaffID }) => {\r\n  const [showMore, setShowMore] = useState({\r\n    stream: 5,\r\n  });\r\n\r\n  const streamShowMoreHandler = (e) => {\r\n    if (showMore.stream > 20) {\r\n      setShowMore({ stream: showMore.stream + 999 });\r\n      e.target.remove();\r\n    } else {\r\n      setShowMore({ stream: showMore.stream + 10 });\r\n    }\r\n    if (showMore.stream + 10 >= characters.length) {\r\n      e.target.remove();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"char-list-container\">\r\n      <motion.div>\r\n        {characters\r\n          .filter((_, index) => index < showMore.stream)\r\n          .map((char) => {\r\n            return (\r\n              <Character\r\n                key={char.node.id}\r\n                char={char}\r\n                animeID={animeID}\r\n                mangaStaffID={mangaStaffID}\r\n              />\r\n            );\r\n          })}\r\n      </motion.div>\r\n      {characters.length > 4 && (\r\n        <button\r\n          onClick={streamShowMoreHandler}\r\n          className=\"stream-show-more-btn\"\r\n        >\r\n          Load More\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default CharacterList;\r\n","import { useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { charQuery } from \"../utils/queries\";\r\nimport { Markup } from \"interweave\";\r\nimport AnimeList from \"../components/AnimeList\";\r\nimport { showMoreLessBtn, unKnownPng } from \"../utils/helpers\";\r\nimport { faTimesCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport CircleRate from \"../components/detailPage/CircleRate\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst CharacterDetail = ({ animeID, characterID, actorID }) => {\r\n  const staffContentShowLess = useRef(null);\r\n  const charContentShowLess = useRef(null);\r\n  //if character hasn't any actor\r\n\r\n  const history = useHistory();\r\n  const modalCloseHandler = (e) => {\r\n    if (\r\n      e.target.classList.contains(\"character-page-shadow\") ||\r\n      e.target.classList.contains(\"modal-close\") ||\r\n      e.target.parentElement.classList.contains(\"modal-close\")\r\n    ) {\r\n      //managing 2 scrollbar\r\n      document.body.style.overflow = \"auto\";\r\n      history.push(`/anime/${animeID}`);\r\n    }\r\n  };\r\n\r\n  const { loading, error, data } = useQuery(charQuery, {\r\n    variables: {\r\n      char_id: characterID,\r\n      staff_id: actorID,\r\n    },\r\n  });\r\n\r\n  if (loading) {\r\n    return null;\r\n  }\r\n\r\n  if (error) {\r\n    console.log(error.message);\r\n    return `Error! ${error}`;\r\n  }\r\n  const character = data.Character;\r\n  const staff = data.Staff;\r\n  const charAnimeList = character.media.edges;\r\n  const staffAnimeList = staff.staffMedia.edges;\r\n\r\n  let charFavouritesRange = ((character.favourites / 30000) * 100).toFixed(0);\r\n  let actorFavouritesRange = ((staff.favourites / 10000) * 100).toFixed(0);\r\n\r\n  const monthNames = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  // staff description\r\n  showMoreLessBtn(\r\n    staffContentShowLess,\r\n    \"show-more-btn staff-show-more-desc-btn\",\r\n    250\r\n  );\r\n\r\n  //character desciption\r\n  showMoreLessBtn(\r\n    charContentShowLess,\r\n    \"show-more-btn staff-show-more-desc-btn\",\r\n    250\r\n  );\r\n\r\n  //managing 2 scrollbar\r\n  document.body.style.overflow = \"hidden\";\r\n\r\n  return (\r\n    <div className=\"character-page-shadow\" onClick={modalCloseHandler}>\r\n      <div className=\"character-page-container\">\r\n        <span className=\"modal-close \">\r\n          <FontAwesomeIcon className=\"fixed modal-close\" icon={faTimesCircle} />\r\n        </span>\r\n\r\n        <div className=\"character-info\">\r\n          <div>\r\n            <div className=\"character-image\">\r\n              <img alt=\"\"\r\n                src={character.image.large ? character.image.large : unKnownPng}\r\n              />\r\n              <div>\r\n                <CircleRate\r\n                  rate={charFavouritesRange}\r\n                  symbol={faHeart}\r\n                  size={5}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"character-desc\">\r\n              <h1>\r\n                <strong> Name:</strong> <br />\r\n                {character.name.full}\r\n              </h1>\r\n              {character.age && (\r\n                <p>\r\n                  <strong>Age:</strong>\r\n                  <br />\r\n                  {character.age} years\r\n                </p>\r\n              )}\r\n              {character.dateOfBirth.day && (\r\n                <p>\r\n                  <strong>Date of Birth:</strong>\r\n                  <br />\r\n                  {character.dateOfBirth.day}{\" \"}\r\n                  {monthNames[character.dateOfBirth.month - 1]}\r\n                </p>\r\n              )}\r\n              {character.gender && (\r\n                <p>\r\n                  <strong>Gender:</strong>\r\n                  <br />\r\n                  {character.gender}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            {character.description && (\r\n              <div\r\n                className=\"description-character-markup\"\r\n                ref={charContentShowLess}\r\n              >\r\n                <Markup content={character.description} />\r\n              </div>\r\n            )}\r\n            {charAnimeList[0] && (\r\n              <div className=\"character-media-list\">\r\n                <h3>Character media</h3>\r\n                {\r\n                  <AnimeList\r\n                    allAnimeData={charAnimeList}\r\n                    colsInRow={3}\r\n                    initialQuantity={3}\r\n                    keyParam={\"charMedia\"}\r\n                  />\r\n                }\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"staff-info\">\r\n          <div>\r\n            <div className=\"staff-desc\">\r\n              <h1>\r\n                <strong> Name:</strong> <br />\r\n                {staff.name.full}\r\n              </h1>\r\n              {staff.age && (\r\n                <p>\r\n                  <strong>Age:</strong>\r\n                  <br />\r\n                  {staff.age} years\r\n                </p>\r\n              )}\r\n              {staff.dateOfBirth.day && (\r\n                <p>\r\n                  <strong>Date of Birth:</strong>\r\n                  <br />\r\n                  {staff.dateOfBirth.day}{\" \"}\r\n                  {monthNames[staff.dateOfBirth.month - 1]}\r\n                </p>\r\n              )}\r\n              {staff.gender && (\r\n                <p>\r\n                  <strong>Gender:</strong>\r\n                  <br />\r\n                  {staff.gender}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"staff-image\">\r\n              <img alt=\"\" src={staff.image.large ? staff.image.large : unKnownPng} />\r\n              <div>\r\n                <CircleRate\r\n                  rate={actorFavouritesRange}\r\n                  symbol={faHeart}\r\n                  size={5}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            {staff.description && (\r\n              <div\r\n                className=\"description-staff-markup\"\r\n                ref={staffContentShowLess}\r\n              >\r\n                <Markup content={staff.description} />\r\n              </div>\r\n            )}\r\n            {staffAnimeList[0] && (\r\n              <div className=\"staff-media-list\">\r\n                <h3>Staff media</h3>\r\n                {\r\n                  <AnimeList\r\n                    allAnimeData={staffAnimeList}\r\n                    colsInRow={3}\r\n                    initialQuantity={3}\r\n                    keyParam={\"staffMedia\"}\r\n                  />\r\n                }\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Markup } from \"interweave\";\r\nimport CircleRate from \"./CircleRate\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { showMoreLessBtn } from \"../../utils/helpers\";\r\nimport { decode } from \"html-entities\";\r\n\r\nconst Review = ({ review }) => {\r\n  let reviewText = review.body;\r\n\r\n  let reg1 = /\\[(.*?)\\]\\((.*?)\\)/g;\r\n  reviewText = reviewText.replace(reg1, \"<a href='$2'>$1</a>\");\r\n\r\n  let reg2 = /<pre>/;\r\n  if (reg2.test(reviewText)) {\r\n    reviewText = decode(reviewText);\r\n    reviewText = reviewText.replaceAll(/__|\\*|<\\/?code>|<\\/?pre>/g, \"\");\r\n  }\r\n\r\n  const reviewContentShowLess = useRef(null);\r\n\r\n  let date = new Date(review.createdAt * 1000);\r\n  let year = date.getFullYear();\r\n  let month = date.getMonth();\r\n  let day = date.getDay();\r\n  date = `${year}/${month}/${day}`;\r\n\r\n  useEffect(() => {\r\n    showMoreLessBtn(\r\n      reviewContentShowLess,\r\n      \"show-more-btn to-indigo-50 hover:bg-indigo-50 hover:bg-opacity-60\",\r\n      150\r\n    );\r\n  }, [reviewContentShowLess]);\r\n\r\n  let rate;\r\n  if (review.rating >= 100) {\r\n    rate = 100;\r\n  } else {\r\n    rate = review.rating;\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"review-card-container \"\r\n      animate={{ opacity: 1, transition: { duration: 2 } }}\r\n      initial={{ opacity: 0 }}\r\n    >\r\n      <div className=\"reviewer-container\">\r\n        <div>\r\n          <div className=\"review-user-info\">\r\n            <img alt=\"\" src={review.user.avatar.medium} />\r\n            <h4>{review.user.name}</h4>\r\n          </div>\r\n          <div className=\"review-rate\">\r\n            <div className=\"review-score\">\r\n              <CircleRate rate={review.score} size={4} />\r\n              <br />\r\n            </div>\r\n            <div className=\"review-popularity\">\r\n              <CircleRate rate={rate} symbol={faHeart} size={4} />\r\n\r\n              <p>this review</p>\r\n              <p>\r\n                <strong>{review.ratingAmount}</strong> rates\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"review-date\">\r\n          {date}\r\n        </div>\r\n      </div>\r\n      {review.body ? (\r\n        <div\r\n          className=\"description-character-markup review-body\"\r\n          ref={reviewContentShowLess}\r\n        >\r\n          <Markup content={reviewText} />\r\n        </div>\r\n      ) : (\r\n        <div className=\"description-character-markup review-summary\">\r\n          <Markup content={review.summary} />\r\n        </div>\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","import React, { useState } from \"react\";\r\nimport Review from \"./Review\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst ReviewList = ({ allReviewData, initialQuantity, keyParam }) => {\r\n  const [showMore, setShowMore] = useState({\r\n    review: initialQuantity,\r\n  });\r\n\r\n  const reviewShowMoreHandler = (e) => {\r\n    if (showMore.review > 100) {\r\n      setShowMore({ ...showMore, review: showMore.review + 999 });\r\n      e.target.style.display = \"none\";\r\n    } else {\r\n      setShowMore({ ...showMore, review: showMore.review + 3 });\r\n    }\r\n    if (showMore.review + 3 >= allReviewData.length) {\r\n      e.target.style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div className=\"review-list-container\">\r\n      <div className=\"anime-list-container\">\r\n        <div>\r\n          {allReviewData\r\n            .filter((_, index) => index <= showMore.review - 1)\r\n            .map((review) => {\r\n              return (\r\n                <Review\r\n                  key={`${keyParam}-${review.node.id}`}\r\n                  review={review.node}\r\n                />\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n\r\n      {allReviewData.length > initialQuantity && (\r\n        <button\r\n          onClick={reviewShowMoreHandler}\r\n          className=\"stream-show-more-btn\"\r\n        >\r\n          Load More\r\n        </button>\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\nexport default ReviewList;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { Markup } from \"interweave\";\r\nimport { hexToRgbA, secondsToDhms } from \"../utils/helpers\";\r\nimport AnimeList from \"../components/AnimeList\";\r\nimport StreamList from \"../components/detailPage/StreamList\";\r\nimport CircleRate from \"../components/detailPage/CircleRate\";\r\nimport Popularity from \"../components/detailPage/Popularity\";\r\nimport { faHeart, faClock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport ExternalLinks from \"../components/detailPage/ExternalLinks\";\r\nimport Rank from \"../components/detailPage/Rank\";\r\nimport { detailQuery } from \"../utils/queries\";\r\nimport Trailer from \"../components/detailPage/Trailer\";\r\nimport CharacterList from \"../components/detailPage/CharacterList\";\r\nimport CharacterDetail from \"./CharacterDetail\";\r\nimport ReviewList from \"../components/detailPage/ReviewList\";\r\nimport RecomList from \"../components/detailPage/RecomList\";\r\nimport { useApolloClient, gql } from \"@apollo/client\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst AnimeDetail = () => {\r\n  const client = useApolloClient();\r\n  client.writeQuery({\r\n    query: gql`\r\n      query WriteIsLoading {\r\n        loadingbar {\r\n          isLoading\r\n        }\r\n      }\r\n    `,\r\n    data: {\r\n      // Contains the data to write\r\n      loadingbar: {\r\n        __typename: \"LoadingBar\",\r\n        isLoading: 80,\r\n      },\r\n    },\r\n  });\r\n\r\n  document.body.style.overflow = \"auto\";\r\n\r\n  const params = useParams();\r\n  const id = Number(params.animeID);\r\n  const location = useLocation();\r\n  const charID = location.pathname.split(\"/\");\r\n  const isCharacterPage = charID[3] === \"character\";\r\n\r\n  const selectAnimeQuery = detailQuery;\r\n  const { loading, error, data } = useQuery(selectAnimeQuery, {\r\n    variables: {\r\n      id: id,\r\n    },\r\n  });\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  if (error) {\r\n    console.log(error.message);\r\n    return `Error! ${error}`;\r\n  }\r\n\r\n  const aData = data.Media;\r\n  const title = aData.title.english ? aData.title.english : aData.title.romaji;\r\n  const description = aData.description;\r\n  const startDate = aData.startDate;\r\n  const endDate = aData.endDate;\r\n  const banner = aData.bannerImage;\r\n  const characters = aData.characters.edges;\r\n  const coverImage = aData.coverImage;\r\n  const animeColor30 = hexToRgbA(coverImage.color, 0.3);\r\n  const externalLinks = aData.externalLinks;\r\n  const genres = aData.genres;\r\n  const rankings = aData.rankings;\r\n  const relations = aData.relations.edges;\r\n  const reviews = aData.reviews.edges;\r\n  const streamingEpisodes = aData.streamingEpisodes;\r\n  const studios = aData.studios.edges;\r\n  const tags = aData.tags;\r\n  const nextAiringEpisode = aData.nextAiringEpisode;\r\n  let favouritesRange = ((aData.favourites / 30000) * 100).toFixed(0);\r\n  if (favouritesRange > 100) {\r\n    favouritesRange = 100;\r\n  }\r\n  if (favouritesRange < 1) {\r\n    favouritesRange = 1;\r\n  }\r\n  const popularity = aData.popularity;\r\n  const isOneDate =\r\n    endDate.year === startDate.year &&\r\n    endDate.month === startDate.month &&\r\n    endDate.day === startDate.day;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isCharacterPage && (\r\n        <CharacterDetail\r\n          animeID={charID[2]}\r\n          characterID={charID[4]}\r\n          actorID={charID[6]}\r\n        />\r\n      )}\r\n\r\n      <div className=\"detail-grid-container detail-page-container\">\r\n        <div className=\"d-header\" style={{ backgroundImage: `url(${banner})` }}>\r\n          <div className=\"banner-inside\">\r\n            <h1\r\n              className=\"detail-title\"\r\n              style={{ backgroundColor: `${animeColor30}` }}\r\n            >\r\n              {title}\r\n            </h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"d-sidebar\">\r\n          <img\r\n            alt=\"\"\r\n            className=\"detail-cover-image \"\r\n            style={{ borderColor: `${animeColor30}` }}\r\n            src={coverImage.large}\r\n          />\r\n          <h2>{title}</h2>\r\n          <div className=\"format-side-detail\">{aData.format}</div>\r\n          <div className=\"detail-side-info\">\r\n            {aData.season && aData.season.toLowerCase()}{\" \"}\r\n            {aData.seasonYear && aData.seasonYear}\r\n            {aData.episodes && ` | ${aData.episodes} Episodes `}\r\n            {aData.duration &&\r\n              ` | ${secondsToDhms(aData.duration * 60, \"dhm\")}`}\r\n            {aData.volumes && `${aData.volumes} Volumes | `}\r\n            {aData.chapters && `${aData.chapters} Chapters`}\r\n          </div>\r\n          <div className=\"detail-side-genres-container\">\r\n            {genres.map((gen) => {\r\n              return <div key={gen}>#{gen}</div>;\r\n            })}\r\n          </div>\r\n          <h4>Date</h4> <hr />\r\n          <div className=\"detail-side-date\">\r\n            <span>\r\n              {\" \"}\r\n              {`${startDate.year}${\r\n                startDate.month\r\n                  ? \"/\" + startDate.month + \"/\" + startDate.day\r\n                  : \"\"\r\n              }`}\r\n            </span>\r\n            {!isOneDate && <div>-</div>}\r\n            {!isOneDate && (\r\n              <span>\r\n                {endDate.year\r\n                  ? endDate.year +\r\n                    (endDate.month\r\n                      ? \"/\" + endDate.month + \"/\" + endDate.day\r\n                      : \"\")\r\n                  : \"Present\"}\r\n              </span>\r\n            )}\r\n          </div>\r\n          {nextAiringEpisode && (\r\n            <div className=\"detail-side-airing\">\r\n              <h4>Airing</h4> <hr />\r\n              <div>\r\n                Episode {nextAiringEpisode.episode}\r\n                <span>\r\n                  <FontAwesomeIcon icon={faClock} />{\" \"}\r\n                  {secondsToDhms(nextAiringEpisode.timeUntilAiring, \"dhm\")}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {popularity !== undefined && (\r\n            <div className=\"detail-side-pop\">\r\n              <h4>Popularity</h4>\r\n              <Popularity popularity={popularity} />\r\n            </div>\r\n          )}\r\n          {rankings[0] && (\r\n            <div className=\"d-ranking \">\r\n              <h4>Ranking</h4>\r\n              <hr />\r\n              <ul>\r\n                {rankings.map((rank) => {\r\n                  return <Rank key={rank.id} rank={rank} />;\r\n                })}\r\n              </ul>\r\n            </div>\r\n          )}\r\n          {studios[0] && (\r\n            <div>\r\n              <h4>Studios</h4>\r\n              <hr />\r\n              <div className=\"detail-side-studios\">\r\n                {studios\r\n                  .filter((e) => e.isMain)\r\n                  .map((st) => {\r\n                    return <span key={st.node.id}>{st.node.name}</span>;\r\n                  })}\r\n              </div>\r\n            </div>\r\n          )}\r\n          {studios[0] && (\r\n            <div className=\"detail-side-producers\">\r\n              <h4>Producers</h4>\r\n              <hr />\r\n              <div>\r\n                {studios\r\n                  .filter((e) => !e.isMain)\r\n                  .map((st) => {\r\n                    return <span key={st.node.id}>{st.node.name}</span>;\r\n                  })}\r\n              </div>\r\n            </div>\r\n          )}\r\n          {aData.source && (\r\n            <div>\r\n              <h4>Source</h4>\r\n              <hr />\r\n              <div className=\"detail-side-source\">{aData.source}</div>\r\n            </div>\r\n          )}\r\n          {characters[0] && (\r\n            <div>\r\n              <h4>Characters</h4>\r\n              <hr />\r\n              <CharacterList\r\n                characters={characters}\r\n                mangaStaffID={aData.staff.edges[0].node.id}\r\n                animeID={id}\r\n              />\r\n            </div>\r\n          )}\r\n          {externalLinks[0] && (\r\n            <div>\r\n              <h4>Links</h4>\r\n              <hr />\r\n              <ul>\r\n                {externalLinks.map((link) => {\r\n                  return <ExternalLinks key={link.id} link={link} />;\r\n                })}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"d-main\">\r\n          <div className=\"detail-main-score\">\r\n            <CircleRate rate={aData.meanScore} size={5} />\r\n          </div>\r\n          <div className=\"detail-main-fav\">\r\n            <CircleRate rate={favouritesRange} symbol={faHeart} size={5} />\r\n          </div>\r\n          <div className=\"detail-main-desc\">\r\n            <Markup content={description} />\r\n          </div>\r\n          <br />\r\n          <br />\r\n          {aData.trailer && <Trailer embedId={aData.trailer.id} />} <br />\r\n          <h4>tags:</h4>\r\n          <div className=\"detail-main-tag\">\r\n            {tags &&\r\n              tags\r\n                .filter((_, index) => index < 6)\r\n                .map((tag) => {\r\n                  return (\r\n                    <span key={tag.name}>\r\n                      <span>{tag.name}</span>\r\n                      <span>{tag.rank}%</span>\r\n                    </span>\r\n                  );\r\n                })}\r\n          </div>\r\n        </div>\r\n\r\n        {relations[0] && (\r\n          <div className=\"d-relate\">\r\n            <h4>Relations</h4>\r\n            <hr />\r\n            <AnimeList\r\n              allAnimeData={relations}\r\n              colsInRow={4}\r\n              initialQuantity={4}\r\n              keyParam={\"relate\"}\r\n            />\r\n          </div>\r\n        )}\r\n        <div className=\"d-watch \">\r\n          {streamingEpisodes[0] && (\r\n            <div className=\"detail-watch-stream\">\r\n              <h4>Stream Watch</h4>\r\n              <hr />\r\n              <StreamList\r\n                allEpisode={streamingEpisodes}\r\n                colsInRow={4}\r\n                initialQuantity={4}\r\n                keyParam={\"stream\"}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {reviews[0] && (\r\n            <div className=\"detail-watch-reviews\">\r\n              <h4>Reviews</h4>\r\n              <hr />\r\n              <ReviewList\r\n                allReviewData={reviews}\r\n                initialQuantity={2}\r\n                keyParam={\"review\"}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"d-recom\">\r\n          <RecomList animeID={id} keyParam={\"recom\"} initialQuantity={7} />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AnimeDetail;\r\n","import { useApolloClient, gql } from \"@apollo/client\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst SearchAnime = ({ anime, emptySearchValue }) => {\r\n  const history = useHistory();\r\n  const client = useApolloClient();\r\n\r\n  const animeCardClickHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    client.writeQuery({\r\n      query: gql`\r\n        query WriteIsLoading {\r\n          loadingbar {\r\n            isLoading\r\n          }\r\n        }\r\n      `,\r\n      data: {\r\n        // Contains the data to write\r\n        loadingbar: {\r\n          __typename: \"LoadingBar\",\r\n          isLoading: 30,\r\n        },\r\n      },\r\n    });\r\n\r\n    setTimeout(() => {\r\n      emptySearchValue();\r\n      history.push(`/anime/${anime.id}`);\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <a\r\n      href={`/anime/${anime.id}`}\r\n      onClick={animeCardClickHandler}\r\n      className=\" search-anime-container\"\r\n    >\r\n      <img alt=\"\" src={anime.coverImage.medium} />\r\n      <h4 className=\"line-clamp-2 mx-2\">\r\n        {anime.title.english ? anime.title.english : anime.title.romaji}\r\n      </h4>\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default SearchAnime;\r\n","import React, { useRef, useEffect, useState, useCallback } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { menuSearchQuery } from \"../utils/queries\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SearchAnime from \"../components/SearchAnime\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst SearchList = () => {\r\n  const history = useHistory();\r\n  const searchBoxRef = useRef(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  let searchData = [];\r\n\r\n  const emptySearchValue = useCallback(() => {\r\n    setSearchValue(\"\");\r\n  }, [setSearchValue]);\r\n  const searchChangeHandler = (e) => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  const submitSearchHandler = (e) => {\r\n    e.preventDefault();\r\n    setIsExpanded(false);\r\n    history.push(`/search/${searchValue}`);\r\n    setSearchValue(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const windowClickOutOfSearch = (e) => {\r\n      if (e.target.classList.contains(\"search-click\")) {\r\n        setIsExpanded(true);\r\n      } else {\r\n        setIsExpanded(false);\r\n      }\r\n    };\r\n    window.addEventListener(\"click\", windowClickOutOfSearch);\r\n    return () => {\r\n      setIsExpanded(false);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const searchTimer = setTimeout(() => {\r\n      getSearchAnime({ variables: { search: searchValue } });\r\n      setIsLoading(false);\r\n    }, 700);\r\n    return () => {\r\n      clearTimeout(searchTimer);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [searchValue]);\r\n\r\n  const [getSearchAnime, { error, data }] = useLazyQuery(menuSearchQuery);\r\n\r\n  if (error) {\r\n    return error.message;\r\n  }\r\n\r\n  if (data) {\r\n    searchData = data.Page.media;\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-click searchbox-container\">\r\n      <form onSubmit={submitSearchHandler} className=\"search-click\">\r\n        <span className=\"search-click\">\r\n          <FontAwesomeIcon\r\n            className=\"search-click\"\r\n            icon={faSearch}\r\n            onClick={() => searchBoxRef.current.focus()}\r\n          />\r\n        </span>\r\n        <input\r\n          ref={searchBoxRef}\r\n          onFocus={() => setIsExpanded(true)}\r\n          className=\"search-click \"\r\n          type=\"text\"\r\n          value={searchValue}\r\n          placeholder={\"Search...\"}\r\n          onChange={searchChangeHandler}\r\n        />\r\n      </form>\r\n\r\n      {isExpanded && (\r\n        <div className=\"search-click expanded-search-results\">\r\n          <div className=\"search-click\">\r\n            {searchData.length === 0 && (\r\n              <p className=\"search-click\">\r\n                {searchValue === \"\" ? (\r\n                  \"Search anything you want...\"\r\n                ) : isLoading ? (\r\n                  \"\"\r\n                ) : (\r\n                  <motion.span\r\n                    animate={{\r\n                      opacity: 1,\r\n                      transition: { duration: 0.1, delay: 2 },\r\n                    }}\r\n                    initial={{ opacity: 0 }}\r\n                    className=\"search-click\"\r\n                  >\r\n                    Sorry! We couldn't find what looking for!\r\n                  </motion.span>\r\n                )}\r\n              </p>\r\n            )}\r\n            {isLoading && <div className=\"search-click lds-dual-ring\"></div>}\r\n            {!isLoading && (\r\n              <div className=\"searchbox-result\">\r\n                {searchData.length > 0 && (\r\n                  <Link\r\n                    className=\"searchbox-result-link\"\r\n                    to={`/search/${searchValue}`}\r\n                    onClick={() => setSearchValue(\"\")}\r\n                  >\r\n                    See All Results\r\n                  </Link>\r\n                )}\r\n                <div>\r\n                  {searchData.map((anime) => {\r\n                    return (\r\n                      <SearchAnime\r\n                        key={anime.id}\r\n                        anime={anime}\r\n                        emptySearchValue={emptySearchValue}\r\n                      />\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchList;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useApolloClient } from \"@apollo/client\";\r\nimport { gql } from \"@apollo/client\";\r\nimport SearchList from \"./SearchList\";\r\n\r\nconst Header = () => {\r\n  const client = useApolloClient();\r\n  const navRef = useRef(null);\r\n  const burgerRef = useRef(null);\r\n  const navLinksRef = useRef(null);\r\n  const homeLinkRef = useRef(null);\r\n  const animeLinkRef = useRef(null);\r\n\r\n  // modern Navigation bar code start here\r\n  const scrollerContainer = document.getElementById(\"root\");\r\n\r\n  useEffect(() => {\r\n    const burger = burgerRef.current;\r\n    const nav = navLinksRef.current;\r\n    const navLinks = [homeLinkRef.current, animeLinkRef.current];\r\n\r\n    const navSlide = () => {\r\n      //toggle nav\r\n      burger.addEventListener(\"click\", () => {\r\n        nav.classList.toggle(\"nav-active\");\r\n        //animate links\r\n        navLinks.forEach((link, index) => {\r\n          if (link.style.animation) {\r\n            link.style.animation = \"\";\r\n          } else {\r\n            link.style.animation = `navLinkFade 0.6s ease both ${\r\n              index / 5 + 0.3\r\n            }s`;\r\n          }\r\n        });\r\n\r\n        //burger animation\r\n        burger.classList.toggle(\"toggle\");\r\n      });\r\n\r\n      document.addEventListener(\"click\", (e) => {\r\n        if (e.target.matches(\".navigation\")) return;\r\n        nav.classList.remove(\"nav-active\");\r\n        burger.classList.remove(\"toggle\");\r\n        navLinks.forEach((link) => {\r\n          link.style.animation = \"\";\r\n        });\r\n      });\r\n    };\r\n    navSlide();\r\n    // modern Navigation bar code stop here\r\n\r\n    let prevScrollpos = Number(scrollerContainer.scrollTop.toFixed(2));\r\n    scrollerContainer.addEventListener(\"scroll\", () => {\r\n      let currentScrollPos = Number(scrollerContainer.scrollTop.toFixed(2));\r\n      if (prevScrollpos > currentScrollPos && currentScrollPos > 300) {\r\n        navRef.current.style.top = \"0\";\r\n        navRef.current.style.backgroundColor = \"rgba(49,46,129,1)\";\r\n      } else if (currentScrollPos < 300 || currentScrollPos === 0) {\r\n        navRef.current.style.top = \"0\";\r\n        navRef.current.style.backgroundColor = \"rgba(49,46,129,0.7)\";\r\n      } else {\r\n        navRef.current.style.top = \"-8vh\";\r\n      }\r\n      prevScrollpos = currentScrollPos;\r\n    });\r\n\r\n    window.addEventListener(\"touchmove\", () => {\r\n      let currentScrollPos = Number(scrollerContainer.scrollTop.toFixed(2));\r\n      if (prevScrollpos > currentScrollPos && currentScrollPos > 300) {\r\n        navRef.current.style.top = \"0\";\r\n        navRef.current.style.backgroundColor = \"rgba(49,46,129,1)\";\r\n      } else if (currentScrollPos < 300 || currentScrollPos === 0) {\r\n        navRef.current.style.top = \"0\";\r\n        navRef.current.style.backgroundColor = \"rgba(49,46,129,0.7)\";\r\n      } else {\r\n        navRef.current.style.top = \"-8vh\";\r\n      }\r\n      prevScrollpos = currentScrollPos;\r\n    });\r\n\r\n    navLinks.forEach((link) => {\r\n      link.addEventListener(\"click\", LinkClickHandler);\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const LinkClickHandler = () => {\r\n    client.writeQuery({\r\n      query: gql`\r\n        query WriteIsLoading {\r\n          loadingbar {\r\n            isLoading\r\n          }\r\n        }\r\n      `,\r\n      data: {\r\n        // Contains the data to write\r\n        loadingbar: {\r\n          __typename: \"LoadingBar\",\r\n          isLoading: 30,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const headerLinks = [\r\n    {\r\n      to: \"/\",\r\n      text: \"Home\",\r\n      activeStyle: { backgroundColor: \"#EEF2FF\", color: \"#312E81\" },\r\n      ref: homeLinkRef,\r\n    },\r\n    {\r\n      to: \"/search/\",\r\n      text: \"Anime\",\r\n      activeStyle: { backgroundColor: \"#EEF2FF\", color: \"#312E81\" },\r\n      ref: animeLinkRef,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <nav ref={navRef} id=\"navigation\" className=\"navigation navigation-container\">\r\n      <div className=\"logo group\">\r\n        <h1 className=\" group-hover:animate-none\">WA</h1>\r\n        <span\r\n          className=\"group-hover:animate-none\"\r\n        >\r\n          Wiki Anime\r\n        </span>\r\n      </div>\r\n      <ul ref={navLinksRef} className=\"nav-links navigation\">\r\n        {headerLinks.map((link) => {\r\n          return (\r\n            <li key={link.text} ref={link.ref}>\r\n              <NavLink activeStyle={link.activeStyle} to={link.to} exact={true}>\r\n                {link.text}\r\n              </NavLink>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <SearchList />\r\n\r\n      <div ref={burgerRef} className=\"navigation burger\">\r\n        <div className=\"navigation line1\"></div>\r\n        <div className=\"navigation line2\"></div>\r\n        <div className=\"navigation line3\"></div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const location = useLocation();\r\n  const pathname = location.pathname;\r\n  const [pervPath, setPervPath] = useState(pathname);\r\n\r\n  useEffect(() => {\r\n    if (pathname.includes(\"character\") || pervPath.includes(\"character\")) {\r\n    } else {\r\n      document.getElementById(\"root\").scrollTo(0, 0);\r\n      document.getElementById(\"navigation\").style.top = \"0\";\r\n    }\r\n    setPervPath(pathname);\r\n    // eslint-disable-next-line\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","const Footer = () => {\r\n  return (\r\n    <div className=\"footer-container\">\r\n      <div>\r\n        <div className=\"footer-thank\">\r\n          <p>\r\n            This Single Page Application built by the power of React, graphQL\r\n            and Tailwind css and ect... <br />\r\n            this takes 50 days from me to built, however I learnt a lot at this\r\n            time beside working on my application <br />\r\n            anyway thank you to visiting my app and a big thanks to anilist\r\n            graphQL server <br />\r\n            <span>\r\n              if you think there is something wrong, then please open the\r\n              application with chrome browser.\r\n            </span>\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"footer-logo group\">\r\n          <h1 className=\"animate-textShadowPopTl group-hover:animate-textShadowPopTr\">\r\n            WA\r\n          </h1>\r\n          <span className=\"animate-textShadowPopTl group-hover:animate-textShadowPopTr \">\r\n            Wiki Anime\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"footer-links\">\r\n          <h4> Links</h4>\r\n          <ul>\r\n            <li>\r\n              <img\r\n                alt=\"\"\r\n                src={\r\n                  \"https://img.pngio.com/github-logo-icon-of-glyph-style-available-in-svg-png-eps-ai-github-icon-png-256_256.png\"\r\n                }\r\n              />\r\n              <a\r\n                href=\"https://github.com/dev-aly3n\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                {\" \"}\r\n                dev-aly3n GitHub\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <img\r\n                alt=\"\"\r\n                src={\r\n                  \"https://www.strategy-works.com/wp-content/uploads/2017/12/Icon-LinkedIn.png\"\r\n                }\r\n              />\r\n              <a\r\n                href=\"https://www.linkedin.com/in/aly-mohamadi-4bb966212/\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                {\" \"}\r\n                dev-aly3n LinkedIn\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <img alt=\"\" src={\"https://telegram.org/img/td_icon.png\"} />\r\n              <a\r\n                href=\"https://telegram.me/aly3n\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                {\" \"}\r\n                dev-aly3n Telegram\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n\r\n      <div> All right reserved © dev-aly3n 2021</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { useApolloClient } from \"@apollo/client\";\r\nimport { gql } from \"@apollo/client\";\r\n\r\nconst ProgressBar = () => {\r\n  const progressRef = useRef(null);\r\n  const client = useApolloClient();\r\n\r\n  const READ_ISLOADING = gql`\r\n    query ReadLoading {\r\n      loadingbar {\r\n        isLoading\r\n      }\r\n    }\r\n  `;\r\n  let loadingParam;\r\n  let isChanged = false;\r\n\r\n  useEffect(() => {\r\n    const bar = progressRef.current.firstElementChild;\r\n    const shining = progressRef.current.children[1];\r\n     client.watchQuery({\r\n        query: READ_ISLOADING,\r\n        fetchPolicy: \"cache-only\",\r\n      })\r\n      .subscribe({\r\n        next: ({ data }) => {\r\n          // eslint-disable-next-line\r\n          loadingParam = data.loadingbar.isLoading;\r\n          if (loadingParam < 50) {\r\n            bar.classList.add(\"first-load-animate\");\r\n            progressRef.current.classList.add(\"last-load-animate-for-parent\");\r\n            shining.classList.add(\"shining-bar-animate\");\r\n          } else {\r\n            progressRef.current.classList.remove(\r\n              \"last-load-animate-for-parent\"\r\n            );\r\n            bar.classList.remove(\"first-load-animate\");\r\n            bar.classList.add(\"last-load-animate\");\r\n            progressRef.current.classList.add(\"last-load-animate-for-parent\");\r\n\r\n            setTimeout(() => {\r\n              bar.classList.remove(\"last-load-animate\");\r\n              progressRef.current.classList.remove(\r\n                \"last-load-animate-for-parent\"\r\n              );\r\n              shining.classList.remove(\"shining-bar-animate\");\r\n            }, 1000);\r\n          }\r\n          // eslint-disable-next-line\r\n          isChanged = !isChanged;\r\n        },\r\n        error: (e) => console.error(e),\r\n      });\r\n  }, [isChanged]);\r\n  return (\r\n    <div ref={progressRef} className=\"progress-bar-container\">\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import { useApolloClient, gql } from \"@apollo/client\";\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { filterQuery } from \"../utils/queries\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport TopList from \"../components/homePage/TopList\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AnimeFilter = () => {\r\n  const client = useApolloClient();\r\n  client.writeQuery({\r\n    query: gql`\r\n      query WriteIsLoading {\r\n        loadingbar {\r\n          isLoading\r\n        }\r\n      }\r\n    `,\r\n    data: {\r\n      // Contains the data to write\r\n      loadingbar: {\r\n        __typename: \"LoadingBar\",\r\n        isLoading: 80,\r\n      },\r\n    },\r\n  });\r\n\r\n  const history = useHistory();\r\n  const searchBoxRef = useRef(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  let searchData = [];\r\n  let path = history.location.pathname;\r\n  path = path.split(\"/search/\")[1];\r\n\r\n  const searchChangeHandler = (e) => {\r\n    history.push(`/search/${e.target.value}`);\r\n    let path = history.location.pathname;\r\n    path = path.split(\"/search/\")[1];\r\n    setSearchValue(path);\r\n  };\r\n\r\n  const searchSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const searchTimer = setTimeout(() => {\r\n      getSearchAnime({ variables: { search: searchValue } });\r\n      setIsLoading(false);\r\n    }, 700);\r\n    return () => {\r\n      clearTimeout(searchTimer);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [searchValue]);\r\n\r\n  useEffect(() => {\r\n    if (path === \"\") {\r\n      // eslint-disable-next-line\r\n      path = \"attack on titan\";\r\n    }\r\n    setTimeout(() => {\r\n      setIsLoading(true);\r\n    }, 800);\r\n    setTimeout(() => {\r\n      getSearchAnime({ variables: { search: path } });\r\n\r\n      setIsLoading(false);\r\n    }, 1500);\r\n    \r\n  }, []);\r\n\r\n  const [getSearchAnime, { error, data }] = useLazyQuery(filterQuery);\r\n\r\n  if (error) {\r\n    return error.message;\r\n  }\r\n\r\n  if (data) {\r\n    searchData = data.filter.media;\r\n  }\r\n\r\n  return (\r\n    <div className=\"anime-filter-container\">\r\n      <div className=\"anime-filter-form\">\r\n        <form onSubmit={searchSubmitHandler}>\r\n          <span>\r\n            <FontAwesomeIcon\r\n              className=\"text-white\"\r\n              icon={faSearch}\r\n              onClick={() => searchBoxRef.current.focus()}\r\n            />\r\n          </span>\r\n          <input\r\n            ref={searchBoxRef}\r\n            type=\"text\"\r\n            value={path}\r\n            placeholder={\"Search...\"}\r\n            onChange={searchChangeHandler}\r\n          />\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"filter-result-container\">\r\n        <div>\r\n          {searchData.length === 0 && (\r\n            <div>\r\n              {searchValue === \"\" ? (\r\n                \"\"\r\n              ) : isLoading ? (\r\n                \"\"\r\n              ) : (\r\n                <motion.p\r\n                  animate={{\r\n                    opacity: 1,\r\n                    transition: { duration: 0.1, delay: 2 },\r\n                  }}\r\n                  initial={{ opacity: 0 }}\r\n                >\r\n                  Sorry! We couldn't find what looking for! <br />\r\n                  Try another one!\r\n                </motion.p>\r\n              )}\r\n            </div>\r\n          )}\r\n          {isLoading && <div className=\" lds-dual-ring\"></div>}\r\n          {!isLoading && (\r\n            <div className=\"filter-anime-top-list-container\">\r\n              <TopList\r\n                allAnimeData={searchData}\r\n                initialQuantity={8}\r\n                keyParam={\"top100\"}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnimeFilter;\r\n","import React from \"react\";\r\nimport Home from \"./pages/Home\";\r\nimport AnimeDetail from \"./pages/AnimeDetail\";\r\nimport Header from \"./pages/Header\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport ScrollToTop from \"./pages/ScrollToTop\";\r\nimport Footer from \"./pages/Footer\";\r\nimport ProgressBar from \"./pages/ProgressBar\";\r\nimport { useApolloClient } from \"@apollo/client\";\r\nimport { gql } from \"@apollo/client\";\r\nimport AnimeFilter from \"./pages/AnimeFilter\";\r\n\r\nfunction App() {\r\n  const client = useApolloClient();\r\n  client.writeQuery({\r\n    query: gql`\r\n      query WriteIsLoading {\r\n        loadingbar {\r\n          isLoading\r\n        }\r\n      }\r\n    `,\r\n    data: {\r\n      // Contains the data to write\r\n      loadingbar: {\r\n        __typename: \"LoadingBar\",\r\n        isLoading: 0,\r\n      },\r\n    },\r\n  });\r\n\r\n  //// jsx\r\n  return (\r\n    <div className=\"app all-grid-container\">\r\n      <ProgressBar />\r\n      <header className=\"all-nav\">\r\n        <Header />\r\n      </header>\r\n      <ScrollToTop />\r\n      <main className=\"all-main\">\r\n        <Switch>\r\n          <Route path={[\"/\", \"/wikianime\"]} exact>\r\n            <Home />\r\n          </Route>\r\n          <Route path={\"/anime/:animeID\"}>\r\n            <AnimeDetail />\r\n          </Route>\r\n          <Route path={\"/search/\"}>\r\n            <AnimeFilter />\r\n          </Route>\r\n          <Route path={\"/anime/:animeID/character/:charID/actor/:actorID\"}>\r\n            <AnimeDetail />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n      <footer className=\"all-footer\">\r\n        <Footer />\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/tailwind.output.css\";\r\nimport App from \"./App\";\r\nimport { ApolloClient, InMemoryCache } from \"@apollo/client\";\r\nimport { ApolloProvider } from \"@apollo/client/react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"https://graphql.anilist.co\",\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </ApolloProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n//\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}