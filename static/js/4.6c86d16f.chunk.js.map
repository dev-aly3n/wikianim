{"version":3,"sources":["components/homePage/Top.js","components/homePage/TopList.js","../../../../src/react/hooks/useQuery.ts","components/homePage/Airing.js","components/homePage/AiringList.js","components/homePage/HomeRec.js","components/homePage/AirSlide.js","components/homePage/AiringSlider.js","pages/Home.js","components/detailPage/CircleRate.js","utils/helpers.js","components/detailPage/Recom.js","components/Anime.js","components/AnimeList.js","components/detailPage/RecomList.js"],"names":["Top","anime","rank","history","useHistory","client","useApolloClient","description","substring","className","motion","a","href","id","onClick","e","preventDefault","writeQuery","query","gql","data","loadingbar","__typename","isLoading","setTimeout","push","animate","opacity","transition","duration","initial","loading","width","height","alt","src","coverImage","large","style","backgroundColor","color","title","english","romaji","format","toLowerCase","source","status","season","seasonYear","tags","filter","_","index","map","tag","name","content","CircleRate","size","rate","averageScore","popularity","toFixed","symbol","faHeart","TopList","allAnimeData","initialQuantity","keyParam","useState","stream","showMore","setShowMore","counterAnime","trimedAllAnimeData","anim","undefined","node","includes","div","animeData","length","target","display","useQuery","options","Airing","airing","bannerImage","nextAiringEpisode","episode","icon","faClock","secondsToDhms","timeUntilAiring","AiringList","allAiring","trimedallAiring","media","HomeRecom","allRecom","rec","Recom","widthParam","recom","AirSlide","onGrabbingSlider","animeCardClickHandler","onMouseDown","onTouchStart","genres","genre","AiringSlider","autoSlidePlay","slideNum","setSlideNum","isAutoPlayOn","setIsAutoPlayOn","useCallback","clearTimeout","useEffect","faChevronCircleRight","Home","gridRef","homeQuery","error","Loading","Errors","errMsg","message","trending","airingSchedules","allTime","top100","Fragment","ref","homeRecom","recommendations","RecomList","HomeRec","AnimeList","colsInRow","grad","bg","backgroundImage","borderRadius","right","top","transform","hexToRgbA","hex","c","test","split","join","seconds","dhms","Number","d","Math","floor","h","m","s","dDisplay","hDisplay","mDisplay","showMoreLessBtn","refElement","extraClassName","current","firstElementChild","offsetHeight","overflow","position","showMoreBtn","document","createElement","textContent","lastElementChild","after","addEventListener","unKnownPng","process","monthNames","recMedia","mediaRecommendation","rating","draggable","faThumbsDown","faThumbsUp","Anime","gridColsTemp","animeID","rightLeftScroll","useRef","wastefulCover","recommend","isSmallDevice","documentElement","clientWidth","magicNum1","magicNum2","allRecomData","recomListQuery","variables","Media","edges","startx","scrollLeft","isDown","onTouchEnd","recLeft","scrollWidth","round","scrollTo","left","behavior","pageX","offsetLeft","onMouseLeave","onMouseUp","onMouseMove","walk","recWidth","newRecommend"],"mappings":"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","file":"static/js/4.6c86d16f.chunk.js","sourcesContent":["//libs\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useApolloClient, gql } from \"@apollo/client\";\r\n//components\r\nimport { motion } from \"framer-motion\";\r\nimport CircleRate from \"../detailPage/CircleRate\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Markup } from \"interweave\";\r\n\r\nconst Top = ({ anime, rank }) => {\r\n  const history = useHistory();\r\n  const client = useApolloClient();\r\n\r\n  //for showing progress bar on click\r\n  const animeCardClickHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    client.writeQuery({\r\n      query: gql`\r\n        query WriteIsLoading {\r\n          loadingbar {\r\n            isLoading\r\n          }\r\n        }\r\n      `,\r\n      data: {\r\n        // Contains the data to write\r\n        loadingbar: {\r\n          __typename: \"LoadingBar\",\r\n          isLoading: 30,\r\n        },\r\n      },\r\n    });\r\n\r\n    setTimeout(() => {\r\n      history.push(`/anime/${anime.id}`);\r\n    }, 500);\r\n  };\r\n\r\n  //to remove extra data from description\r\n  let description = anime.description;\r\n  description = description.substring(0, 300);\r\n\r\n  return (\r\n    <div className=\"top-container group\">\r\n      <motion.a\r\n        href={`/anime/${anime.id}`}\r\n        onClick={animeCardClickHandler}\r\n        animate={{ opacity: 1, transition: { duration: 1 } }}\r\n        initial={{ opacity: 0 }}\r\n      >\r\n        <img\r\n          loading=\"lazy\"\r\n          width={96}\r\n          height={160}\r\n          alt=\"\"\r\n          src={anime.coverImage.large}\r\n          style={{ backgroundColor: anime.coverImage.color }}\r\n        />\r\n\r\n        <div className=\"top-info-container\">\r\n          <div className=\"top-status\">\r\n            <h3>\r\n              {anime.title.english ? anime.title.english : anime.title.romaji}\r\n            </h3>\r\n            <div className=\"top-information\">\r\n              {anime.format && <p>{anime.format.toLowerCase()}</p>}\r\n              {anime.source && <p>{anime.source.toLowerCase()}</p>}\r\n              {anime.status && <p>{anime.status.toLowerCase()}</p>}\r\n              <p>\r\n                {anime.season ? anime.season.toLowerCase() : \"\"}{\" \"}\r\n                {anime.seasonYear ? anime.seasonYear : \"\"}\r\n              </p>\r\n            </div>\r\n            <div className=\"top-tag-container\">\r\n              {anime.tags\r\n                .filter((_, index) => index <= 3)\r\n                .map((tag) => {\r\n                  return <span key={tag.name}>{tag.name}</span>;\r\n                })}\r\n            </div>\r\n          </div>\r\n          <div className=\"top-desc\">\r\n            <Markup content={description} />\r\n          </div>\r\n\r\n          <div className=\"top-rate-score transform translate-x-4 -translate-y-4 group-hover:translate-y-0.5 group-hover:-translate-x-0.5\">\r\n            <CircleRate size={4} rate={anime.averageScore} />\r\n          </div>\r\n          <div className=\"top-rate-popularity transform translate-x-4 translate-y-4 group-hover:-translate-y-0.5 group-hover:-translate-x-0.5\">\r\n            <div className=\"relative\">\r\n              <CircleRate\r\n                size={4}\r\n                rate={((anime.popularity / 300000) * 100).toFixed(0)}\r\n                symbol={faHeart}\r\n              />\r\n              <p className=\"top-rate-pop-text\">popularity</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </motion.a>\r\n      <span>{rank}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Top;\r\n","//libs\r\nimport React, { useState } from \"react\";\r\n//components\r\nimport Top from \"./Top\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst TopList = ({ allAnimeData, initialQuantity, keyParam }) => {\r\n  const [showMore, setShowMore] = useState({\r\n    stream: initialQuantity,\r\n  });\r\n\r\n  const streamShowMoreHandler = (e) => {\r\n    if (showMore.stream > 30) {\r\n      setShowMore({ ...showMore, stream: showMore.stream + 999 });\r\n      e.target.style.display = \"none\";\r\n    } else {\r\n      setShowMore({ ...showMore, stream: showMore.stream + 10 });\r\n    }\r\n    if (showMore.stream + 10 >= allAnimeData.length) {\r\n      e.target.style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  // maintain the array for duplicate elements\r\n  let counterAnime = [];\r\n  let trimedAllAnimeData = allAnimeData.filter((anime) => {\r\n    let anim = anime.id !== undefined ? anime : anime.node;\r\n    if (!counterAnime.includes(anim.id)) {\r\n      counterAnime.push(anim.id);\r\n      if (anime !== undefined) {\r\n        return anime;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  return (\r\n    <motion.div className=\"top-list-container\">\r\n      <div className=\"anime-list-container\">\r\n        <motion.div className=\"anime-list\">\r\n          {trimedAllAnimeData\r\n            .filter((_, index) => index <= showMore.stream - 1)\r\n            .map((anime, index) => {\r\n              //check where the data come from node or media\r\n              const animeData = anime.id !== undefined ? anime : anime.node;\r\n              return (\r\n                <Top\r\n                  key={`${keyParam}-${animeData.id}`}\r\n                  anime={animeData}\r\n                  rank={index + 1}\r\n                />\r\n              );\r\n            })}\r\n        </motion.div>\r\n      </div>\r\n      {allAnimeData.length > initialQuantity && (\r\n        <button\r\n          onClick={streamShowMoreHandler}\r\n          className=\"stream-show-more-btn \"\r\n        >\r\n          Load More\r\n        </button>\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\nexport default TopList;\r\n","import { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\n\nimport { QueryHookOptions, QueryResult } from '../types/types';\nimport { useBaseQuery } from './utils/useBaseQuery';\nimport { OperationVariables } from '../../core';\n\nexport function useQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: QueryHookOptions<TData, TVariables>\n) {\n  return useBaseQuery<TData, TVariables>(query, options, false) as QueryResult<\n    TData,\n    TVariables\n  >;\n}\n","//libs\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useApolloClient, gql } from \"@apollo/client\";\r\n// components\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faClock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { motion } from \"framer-motion\";\r\n//helpers and queries\r\nimport { secondsToDhms } from \"../../utils/helpers\";\r\n\r\nconst Airing = ({ airing }) => {\r\n  const history = useHistory();\r\n  const client = useApolloClient();\r\n\r\n  //showing progress bar on click\r\n  const animeCardClickHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    client.writeQuery({\r\n      query: gql`\r\n        query WriteIsLoading {\r\n          loadingbar {\r\n            isLoading\r\n          }\r\n        }\r\n      `,\r\n      data: {\r\n        // Contains the data to write\r\n        loadingbar: {\r\n          __typename: \"LoadingBar\",\r\n          isLoading: 30,\r\n        },\r\n      },\r\n    });\r\n\r\n    //to show progress bar first we use timeout\r\n    setTimeout(() => {\r\n      history.push(`/anime/${airing.id}`);\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <motion.a\r\n      onClick={animeCardClickHandler}\r\n      href={`/anime/${airing.id}`}\r\n      className=\"airing-container group\"\r\n      animate={{ opacity: 1, transition: { duration: 2 } }}\r\n      initial={{ opacity: 0 }}\r\n    >\r\n      <div>\r\n        <img\r\n          loading=\"lazy\"\r\n          height={96}\r\n          alt=\"\"\r\n          className=\"transform group-hover:scale-110\"\r\n          src={airing.bannerImage}\r\n        />\r\n        <div className=\"group-hover:bg-opacity-60\">\r\n          <h3>\r\n            {airing.title.english ? airing.title.english : airing.title.romaji}\r\n          </h3>\r\n          <p>\r\n            <span>Episode {airing.nextAiringEpisode.episode} </span>\r\n            <span className=\"\">\r\n              <FontAwesomeIcon icon={faClock} />{\" \"}\r\n              {secondsToDhms(airing.nextAiringEpisode.timeUntilAiring, \"dhm\")}\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </motion.a>\r\n  );\r\n};\r\n\r\nexport default Airing;\r\n","//components\r\nimport Airing from \"./Airing\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst AiringList = ({ allAiring, keyParam }) => {\r\n  // maintain the array for duplicate elements and also for those who hasn't banner image\r\n  let counterAnime = [];\r\n  let trimedallAiring = allAiring.filter((anime) => {\r\n    if (!counterAnime.includes(anime.media.id)) {\r\n      counterAnime.push(anime.media.id);\r\n      if ((anime.media !== undefined) & (anime.media.bannerImage !== null)) {\r\n        return anime;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  return (\r\n    <motion.div className=\"airing-list-container\">\r\n      <div>\r\n        <div>\r\n          {trimedallAiring\r\n            .filter((_, index) => index <= 7)\r\n            .map((airing) => {\r\n              return (\r\n                <Airing\r\n                  key={`${keyParam}-${airing.media.id}`}\r\n                  airing={airing.media}\r\n                />\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\nexport default AiringList;\r\n","//components\r\nimport Recom from \"../detailPage/Recom\";\r\n\r\nconst HomeRecom = ({ allRecom, keyParam }) => {\r\n  return (\r\n    <div className=\"home-rec\">\r\n      {allRecom\r\n        .filter((_, index) => index <= 1)\r\n        .map((rec) => {\r\n          return (\r\n            <Recom\r\n              key={keyParam + rec.media.id}\r\n              widthParam={true}\r\n              recom={rec}\r\n            />\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeRecom;\r\n","//libs\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useApolloClient, gql } from \"@apollo/client\";\r\n//components\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faClock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Markup } from \"interweave\";\r\n//helpers and quereis\r\nimport { secondsToDhms } from \"../../utils/helpers\";\r\n\r\nconst AirSlide = ({ airing, onGrabbingSlider }) => {\r\n  const history = useHistory();\r\n  const client = useApolloClient();\r\n\r\n  //for showing progress bar on click\r\n  const animeCardClickHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    client.writeQuery({\r\n      query: gql`\r\n        query WriteIsLoading {\r\n          loadingbar {\r\n            isLoading\r\n          }\r\n        }\r\n      `,\r\n      data: {\r\n        // Contains the data to write\r\n        loadingbar: {\r\n          __typename: \"LoadingBar\",\r\n          isLoading: 30,\r\n        },\r\n      },\r\n    });\r\n\r\n    setTimeout(() => {\r\n      history.push(`/anime/${airing.id}`);\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"air-slide-container anni group\"\r\n      onMouseDown={() => onGrabbingSlider()}\r\n      onTouchStart={() => onGrabbingSlider()}\r\n    >\r\n      <img loading=\"lazy\" width={\"100%\"}\r\n        alt=\"\"\r\n        className=\"transform group-hover:scale-110 \"\r\n        src={airing.bannerImage}\r\n      />\r\n      <div className=\"group-hover:bg-opacity-80\">\r\n        <div className=\"air-slide-cover-image transform group-hover:scale-95 \">\r\n          <a onClick={animeCardClickHandler} href={`/anime/${airing.id}`}>\r\n            <img loading=\"lazy\" width={160} height={224} alt=\"\" src={airing.coverImage.large} style={{backgroundColor:airing.coverImage.color}} />\r\n          </a>\r\n        </div>\r\n        <div className=\"air-slide-info\">\r\n          <a href={`/anime/${airing.id}`} onClick={animeCardClickHandler}>\r\n            <h3 onClick={animeCardClickHandler}>\r\n              {airing.title.english\r\n                ? airing.title.english\r\n                : airing.title.romaji}\r\n            </h3>\r\n          </a>\r\n          {airing.format && (\r\n            <p>\r\n              <b>Format:</b>\r\n              <br /> {airing.format.toLowerCase()}\r\n            </p>\r\n          )}\r\n          {airing.source && (\r\n            <p>\r\n              <b>Source:</b>\r\n              <br /> {airing.source.toLowerCase()}\r\n            </p>\r\n          )}\r\n          {airing.genres && (\r\n            <p>\r\n              <b>Genres:</b>\r\n              <br />{\" \"}\r\n              {airing.genres\r\n                .filter((_, index) => index <= 2)\r\n                .map((genre) => {\r\n                  return (\r\n                    <span key={genre} className=\"air-slide-genres\">\r\n                      {genre}\r\n                    </span>\r\n                  );\r\n                })}\r\n            </p>\r\n          )}\r\n          <p className=\"text-indigo-200\">\r\n            <span>\r\n              <b>Next airing:</b> <br /> Episode{\" \"}\r\n              {airing.nextAiringEpisode.episode}{\" \"}\r\n            </span>\r\n            <span className=\"\">\r\n              <FontAwesomeIcon icon={faClock} />{\" \"}\r\n              {secondsToDhms(airing.nextAiringEpisode.timeUntilAiring, \"dhm\")}\r\n            </span>\r\n          </p>\r\n        </div>\r\n        <div className=\"air-slide-desc\">\r\n          <Markup content={airing.description} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AirSlide;\r\n","//libs\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\n//components\r\nimport AirSlide from \"./AirSlide\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronCircleRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst AiringSlider = ({ allAiring, keyParam }) => {\r\n  const [slideNum, setSlideNum] = useState(0);\r\n  const [isAutoPlayOn, setIsAutoPlayOn] = useState(true);\r\n  let autoSlidePlay;\r\n\r\n  //callback for grabbing to stop the autoplay if user grab the slider\r\n  const onGrabbingSlider = useCallback(() => {\r\n    setIsAutoPlayOn(false);\r\n    clearTimeout(autoSlidePlay);\r\n    // eslint-disable-next-line\r\n  }, [setIsAutoPlayOn]);\r\n\r\n  // maintain the array for duplicate elements and also those whose haven't any banner image\r\n  let counterAnime = [];\r\n  let trimedallAiring = allAiring.filter((anime) => {\r\n    if (!counterAnime.includes(anime.media.id)) {\r\n      counterAnime.push(anime.media.id);\r\n      if ((anime.media !== undefined) & (anime.media.bannerImage !== null)) {\r\n        return anime;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  //set timeout to make it smoother to change the slide and set the slide to 0 if we are at the last one\r\n  const rightHandler = () => {\r\n    setIsAutoPlayOn(false);\r\n\r\n    setTimeout(() => {\r\n      if (slideNum === 7) {\r\n        setSlideNum(0);\r\n      } else {\r\n        setSlideNum(slideNum + 1);\r\n      }\r\n    }, 200);\r\n  };\r\n\r\n  const leftHandler = () => {\r\n    setIsAutoPlayOn(false);\r\n    setTimeout(() => {\r\n      if (slideNum === 0) {\r\n        setSlideNum(7);\r\n      } else {\r\n        setSlideNum(slideNum - 1);\r\n      }\r\n    }, 200);\r\n  };\r\n\r\n  //autoplay for slide, we reset the autoplay if user click on left or right button\r\n  useEffect(() => {\r\n    if (isAutoPlayOn) {\r\n      // eslint-disable-next-line\r\n      autoSlidePlay = setTimeout(() => {\r\n        if (slideNum === 7) {\r\n          setSlideNum(0);\r\n        } else {\r\n          setSlideNum(slideNum + 1);\r\n        }\r\n      }, 7000);\r\n      return () => {\r\n        clearTimeout(autoSlidePlay);\r\n      };\r\n    }\r\n  }, [slideNum, isAutoPlayOn]);\r\n  return (\r\n    <div className=\"airing-slider-container\">\r\n      {trimedallAiring\r\n        .filter((_, index) => index === slideNum)\r\n        .map((airing) => {\r\n          return (\r\n            <AirSlide\r\n              onGrabbingSlider={onGrabbingSlider}\r\n              key={`${keyParam}-${airing.media.id}`}\r\n              airing={airing.media}\r\n            />\r\n          );\r\n        })}\r\n\r\n      <button onClick={leftHandler} className=\"left-0\">\r\n        <FontAwesomeIcon\r\n          className=\"icon-btn transform rotate-180\"\r\n          icon={faChevronCircleRight}\r\n        />\r\n      </button>\r\n      <button onClick={rightHandler} className=\"right-0\">\r\n        <FontAwesomeIcon className=\"icon-btn\" icon={faChevronCircleRight} />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default AiringSlider;\r\n","//libs\r\nimport React from \"react\";\r\nimport { useQuery, useApolloClient, gql } from \"@apollo/client\";\r\n//components\r\nimport AnimeList from \"../components/AnimeList\";\r\nimport AiringList from \"../components/homePage/AiringList\";\r\nimport HomeRec from \"../components/homePage/HomeRec\";\r\nimport TopList from \"../components/homePage/TopList\";\r\nimport RecomList from \"../components/detailPage/RecomList\";\r\nimport AiringSlider from \"../components/homePage/AiringSlider\";\r\nimport Loading from \"./Loading\";\r\nimport Errors from \"./Errors\";\r\n//helpers and queries\r\nimport { homeQuery } from \"../utils/queries\";\r\n\r\nconst Home = ({ gridRef }) => {\r\n  //for hiding progress bar on load\r\n  const client = useApolloClient();\r\n  client.writeQuery({\r\n    query: gql`\r\n      query WriteIsLoading {\r\n        loadingbar {\r\n          isLoading\r\n        }\r\n      }\r\n    `,\r\n    data: {\r\n      // Contains the data to write\r\n      loadingbar: {\r\n        __typename: \"LoadingBar\",\r\n        isLoading: 80,\r\n      },\r\n    },\r\n  });\r\n\r\n  const { loading, error, data } = useQuery(homeQuery);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  if (error) {\r\n    return <Errors errMsg={error.message} />;\r\n  }\r\n  const trending = data.trending.media;\r\n  const airing = data.airing.airingSchedules;\r\n  const allTime = data.allTime.media;\r\n  const top100 = data.top100.media;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div ref={gridRef} className=\" home-grid-container home-page-container\">\r\n        <div className=\"h-header\">\r\n          {airing[0] && (\r\n            <div>\r\n              <AiringSlider allAiring={airing} keyParam={\"airingSlider\"} />\r\n            </div>\r\n          )}\r\n\r\n          {data.homeRecom.recommendations[0] && (\r\n            <div>\r\n              <RecomList\r\n                allRecom={data.homeRecom.recommendations}\r\n                initialQuantity={7}\r\n                keyParam={\"recSlider\"}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"h-sidebar \">\r\n          {data.homeRecom.recommendations[0] && (\r\n            <div>\r\n              <h3>Top Recommendations</h3>\r\n              <HomeRec\r\n                allRecom={data.homeRecom.recommendations}\r\n                keyParam={\"topRec\"}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {airing[0] && (\r\n            <div>\r\n              <h3>Airing Schedules</h3>\r\n              <AiringList allAiring={airing} keyParam={\"airing\"} />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"h-trending\">\r\n          <h3>Trending</h3>\r\n          <AnimeList\r\n            allAnimeData={trending}\r\n            colsInRow={4}\r\n            initialQuantity={8}\r\n            keyParam={\"homeTrending\"}\r\n          />\r\n        </div>\r\n        <div className=\"h-alltime\">\r\n          <h3>Popular All Time</h3>\r\n          <AnimeList\r\n            allAnimeData={allTime}\r\n            colsInRow={4}\r\n            initialQuantity={8}\r\n            keyParam={\"homepopAllTime\"}\r\n          />\r\n        </div>\r\n        <div className=\"h-top100\">\r\n          <h3>Top 100</h3>\r\n          <TopList\r\n            allAnimeData={top100}\r\n            initialQuantity={8}\r\n            keyParam={\"top100\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","//components\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst CircleRate = ({ rate, symbol, size }) => {\r\n  //there is 2 circular div that we handle the percentage with the gradient. we also change the color with percentage\r\n  let grad, bg;\r\n  if (rate === null) {\r\n    rate = 0;\r\n  }\r\n  if (rate <= 25) {\r\n    bg = \"bg-red-500\";\r\n    grad = `linear-gradient(${\r\n      (rate / 100) * 360 + 90\r\n    }deg, transparent 50%, rgb(212, 212, 212) 50%), linear-gradient(90deg, rgb(212, 212, 212) 50%, transparent 50%)`;\r\n  } else if (rate < 50) {\r\n    bg = \"bg-yellow-500\";\r\n    grad = `linear-gradient(${\r\n      (rate / 100) * 360 + 90\r\n    }deg, transparent 50%, rgb(212, 212, 212) 50%), linear-gradient(90deg, rgb(212, 212, 212) 50%, transparent 50%)`;\r\n  } else if (rate === 50) {\r\n    bg = \"bg-yellow-300\";\r\n    grad = `linear-gradient(90deg, rgb(212, 212, 212) 50%, transparent 50%)`;\r\n  } else if (rate >= 100) {\r\n    rate = 100;\r\n    bg = \"bg-green-600\";\r\n    grad = \"none\";\r\n  } else if (rate <= 75) {\r\n    bg = \"bg-green-300\";\r\n    grad = `linear-gradient(${\r\n      ((rate - 50) / 100) * 360 + 90\r\n    }deg, transparent 50%, rgba(110,231,183,1) 50%), linear-gradient(90deg, rgb(212, 212, 212) 50%, transparent 50%)`;\r\n  } else {\r\n    bg = \"bg-green-500\";\r\n    grad = `linear-gradient(${\r\n      ((rate - 50) / 100) * 360 + 90\r\n    }deg, transparent 50%, rgba(16,185,129,1) 50%), linear-gradient(90deg, rgb(212, 212, 212) 50%, transparent 50%)`;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: grad,\r\n        width: `${size}rem`,\r\n        height: `${size}rem`,\r\n        borderRadius: \"50%\",\r\n      }}\r\n      className={`${bg} circle-rate-container group group-hover:animate-reversecycler`}\r\n    >\r\n      <div\r\n        className=\"group-hover:animate-cycler\"\r\n        style={{\r\n          width: `${size - 1}rem`,\r\n          height: `${size - 1}rem`,\r\n          borderRadius: \"50%\",\r\n        }}\r\n      >\r\n        {symbol ? (\r\n          <div className=\"rate-symbol\">\r\n            <FontAwesomeIcon\r\n              icon={symbol}\r\n              className={`${\r\n                size === 5 ? \"text-6xl\" : size === 4 ? \"text-5xl \" : \"\"\r\n              } text-red-500`}\r\n            />\r\n            <div\r\n              className={`${\r\n                size === 5 ? \"text-lg\" : size === 4 ? \"text-sm\" : \"\"\r\n              } text-white absolute`}\r\n              style={{\r\n                right: \"50%\",\r\n                top: \"50%\",\r\n                transform: \"translate(50%, -50%)\",\r\n              }}\r\n            >\r\n              {rate}%\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <span className=\"score-num\">\r\n            <span>score</span>\r\n            <span\r\n              className={`${\r\n                size === 5 ? \"text-2xl\" : size === 4 ? \"text-base\" : \"\"\r\n              }`}\r\n            >\r\n              {rate}%\r\n            </span>\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CircleRate;\r\n","// convert hex to rgba\r\nexport const hexToRgbA = (hex, opacity) => {\r\n  let c;\r\n  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\r\n    c = hex.substring(1).split(\"\");\r\n    if (c.length === 3) {\r\n      c = [c[0], c[0], c[1], c[1], c[2], c[2]];\r\n    }\r\n    c = \"0x\" + c.join(\"\");\r\n    return (\r\n      \"rgba(\" +\r\n      [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(\",\") +\r\n      `,${opacity})`\r\n    );\r\n  }\r\n  return \"rgba(0,0,0,0.2)\";\r\n};\r\n\r\nexport const secondsToDhms = (seconds, dhms) => {\r\n  seconds = Number(seconds);\r\n  let d = Math.floor(seconds / (3600 * 24));\r\n  let h = Math.floor((seconds % (3600 * 24)) / 3600);\r\n  let m = Math.floor((seconds % 3600) / 60);\r\n  let s = Math.floor(seconds % 60);\r\n  let dDisplay = d > 0 ? d + \"d \" : \"\";\r\n  let hDisplay = h > 0 ? h + \"h \" : \"\";\r\n  let mDisplay = m > 0 ? m + \"min \" : \"\";\r\n  let sDisplay = s > 0 ? s + \"s\" : \"\";\r\n  if (dhms === \"dhms\") {\r\n    return dDisplay + hDisplay + mDisplay + sDisplay;\r\n  } else if (dhms === \"dhm\") {\r\n    return dDisplay + hDisplay + mDisplay;\r\n  }\r\n};\r\n\r\nexport const showMoreLessBtn = (refElement, extraClassName, height) => {\r\n  return setTimeout(() => {\r\n    if (refElement.current) {\r\n      if (\r\n        refElement.current.firstElementChild.offsetHeight > `${height + 100}`\r\n      ) {\r\n        refElement.current.firstElementChild.style.height = `${height}px`;\r\n        refElement.current.firstElementChild.style.overflow = \"hidden\";\r\n        refElement.current.firstElementChild.style.position = \"relative\";\r\n        const showMoreBtn = document.createElement(\"button\");\r\n        showMoreBtn.className = extraClassName;\r\n        showMoreBtn.textContent = \"Show More\";\r\n        refElement.current.firstElementChild.lastElementChild.after(\r\n          showMoreBtn\r\n        );\r\n\r\n        showMoreBtn.addEventListener(\"click\", () => {\r\n          showMoreBtn.style.display = \"none\";\r\n          refElement.current.firstElementChild.style.height = \"100%\";\r\n        });\r\n      }\r\n    }\r\n  }, 100);\r\n};\r\n\r\nexport const unKnownPng = process.env.PUBLIC_URL + \"/media/defaultavatar.png\";\r\n\r\n\r\n\r\n  export const monthNames = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n","//libs\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useApolloClient, gql } from \"@apollo/client\";\r\n//components\r\nimport { Markup } from \"interweave\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faThumbsUp, faThumbsDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst Recom = ({ recom, widthParam }) => {\r\n  const history = useHistory();\r\n  const client = useApolloClient();\r\n\r\n  //check to see that this components render in home page or detail page\r\n  // optional chaning and nullish coalescing oprator myObj?.prop ?? \"default\"\r\n  //... by this way we check if recom.node is undefined or nall and if yes then read data fom recom.media\r\n  const recMedia = recom.node?.mediaRecommendation ?? recom.media;\r\n  const rating = recom.node?.rating ?? recom.rating;\r\n\r\n  //showing progress bar on click\r\n  const animeCardClickHandler = (e) => {\r\n    e.preventDefault();\r\n    client.writeQuery({\r\n      query: gql`\r\n        query WriteIsLoading {\r\n          loadingbar {\r\n            isLoading\r\n          }\r\n        }\r\n      `,\r\n      data: {\r\n        // Contains the data to write\r\n        loadingbar: {\r\n          __typename: \"LoadingBar\",\r\n          isLoading: 30,\r\n        },\r\n      },\r\n    });\r\n\r\n    //we set timeout to show the progressbar before routing , if we push immediately it doesn't show progressbar\r\n    setTimeout(() => {\r\n      history.push(`/anime/${recMedia.id}`);\r\n    }, 500);\r\n  };\r\n\r\n  //to remove extra data from description\r\n  let description = recMedia.description;\r\n  description = description.substring(0, 300);\r\n  return (\r\n    <motion.a\r\n      draggable={true}\r\n      href={`/anime/${recMedia.id}`}\r\n      onClick={animeCardClickHandler}\r\n      className={` ${\r\n        widthParam ? \"w-full ssm:w-8/12 sm:w-11/12 my-3\" : \"w-60 mx-3\"\r\n      }  recom-container`}\r\n    >\r\n      <div className=\"recom-detail\">\r\n        <img\r\n          loading=\"lazy\"\r\n          width={160}\r\n          height={224}\r\n          alt=\"\"\r\n          src={recMedia.coverImage.large}\r\n          style={{ backgroundColor: recMedia.coverImage.color }}\r\n        />\r\n        <div className=\"recom-info\">\r\n          <p className=\"line-clamp-4\">\r\n            <b>Title:</b>\r\n            <br />{\" \"}\r\n            {recMedia.title.english\r\n              ? recMedia.title.english\r\n              : recMedia.title.romaji}\r\n          </p>\r\n          {recMedia.format && (\r\n            <p>\r\n              <b>Format:</b>\r\n              <br /> {recMedia.format.toLowerCase()}\r\n            </p>\r\n          )}\r\n          {recMedia.source && (\r\n            <p>\r\n              <b>Source:</b>\r\n              <br /> {recMedia.source.toLowerCase()}\r\n            </p>\r\n          )}\r\n          {recMedia.status && (\r\n            <p>\r\n              <b>Status:</b>\r\n              <br /> {recMedia.status.toLowerCase()}\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {recMedia.description && (\r\n        <div className=\"recom-desc line-clamp-5\">\r\n          <b>Description:</b> <Markup content={description} />\r\n        </div>\r\n      )}\r\n      <div className=\"recom-rating\">\r\n        {rating !== undefined &&\r\n          (rating <= 0 ? (\r\n            <div className=\"red-rate\">\r\n              {rating} <FontAwesomeIcon icon={faThumbsDown} />\r\n            </div>\r\n          ) : (\r\n            <div className=\"green-rate\">\r\n              +{rating} <FontAwesomeIcon icon={faThumbsUp} />\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </motion.a>\r\n  );\r\n};\r\n\r\nexport default Recom;\r\n","//libs\r\nimport { useApolloClient, gql } from \"@apollo/client\";\r\nimport { useHistory } from \"react-router-dom\";\r\n//components\r\nimport { motion } from \"framer-motion\";\r\nimport CircleRate from \"./detailPage/CircleRate\";\r\n\r\nconst Anime = ({ anime }) => {\r\n  const client = useApolloClient();\r\n  const history = useHistory();\r\n\r\n  //to showing progress bar on click\r\n  const animeCardClickHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    client.writeQuery({\r\n      query: gql`\r\n        query WriteIsLoading {\r\n          loadingbar {\r\n            isLoading\r\n          }\r\n        }\r\n      `,\r\n      data: {\r\n        // Contains the data to write\r\n        loadingbar: {\r\n          __typename: \"LoadingBar\",\r\n          isLoading: 30,\r\n        },\r\n      },\r\n    });\r\n\r\n    setTimeout(() => {\r\n      history.push(`/anime/${anime.id}`);\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <motion.a\r\n      href={`/anime/${anime.id}`}\r\n      onClick={animeCardClickHandler}\r\n      className=\"anime-card-container group hover-card-num-1\"\r\n      animate={{ opacity: 1, transition: { duration: 1 } }}\r\n      initial={{ opacity: 0 }}\r\n    >\r\n      {anime.averageScore !== undefined && (\r\n        <div\r\n          className=\"anime-circle-rate transform translate-x-4 -translate-y-4 \r\n    group-hover:translate-y-0.5 group-hover:-translate-x-0.5 \"\r\n        >\r\n          <CircleRate rate={anime.averageScore} size={4} />\r\n        </div>\r\n      )}\r\n\r\n      <img\r\n        loading=\"lazy\"\r\n        height={224}\r\n        alt=\"\"\r\n        src={anime.coverImage.large}\r\n        style={{ backgroundColor: anime.coverImage.color }}\r\n      />\r\n      <div\r\n        className=\"anime-info\r\n       \"\r\n      >\r\n        <div className=\" bg-yellow-300 \">{anime.format}</div>\r\n        <div className=\" bg-green-300 \">{anime.source}</div>\r\n        <div className=\" bg-red-300 \">{anime.status}</div>\r\n      </div>\r\n      <h3 className=\"line-clamp-2 \">\r\n        {anime.title.english !== null\r\n          ? anime.title.english\r\n          : anime.title.romaji}\r\n      </h3>\r\n    </motion.a>\r\n  );\r\n};\r\n\r\nexport default Anime;\r\n","//libs\r\nimport React, { useState } from \"react\";\r\n//components\r\nimport Anime from \"./Anime\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst AnimeList = ({ allAnimeData, initialQuantity, colsInRow, keyParam }) => {\r\n  const [showMore, setShowMore] = useState({\r\n    stream: initialQuantity,\r\n  });\r\n\r\n  //manage columns in diferent size (we cant do this in css bcs we change grid templates for mobile and tablet)\r\n  let gridColsTemp = `grid-cols-2 ssm:grid-cols-${colsInRow - 1} lg:grid-cols-${\r\n    colsInRow - 1\r\n  } xl:grid-cols-${colsInRow}`;\r\n\r\n  const streamShowMoreHandler = (e) => {\r\n    if (showMore.stream > 30) {\r\n      setShowMore({ ...showMore, stream: showMore.stream + 999 });\r\n      e.target.style.display = \"none\";\r\n    } else {\r\n      setShowMore({ ...showMore, stream: showMore.stream + 10 });\r\n    }\r\n    if (showMore.stream + 10 >= allAnimeData.length) {\r\n      e.target.style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  // maintain the array for duplicate elements\r\n  let counterAnime = [];\r\n  let trimedAllAnimeData = allAnimeData.filter((anime) => {\r\n    let anim = anime.id !== undefined ? anime : anime.node;\r\n    if (!counterAnime.includes(anim.id)) {\r\n      counterAnime.push(anim.id);\r\n      if (anime !== undefined) {\r\n        return anime;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  return (\r\n    <motion.div className=\"pb-10\">\r\n      <div className=\"anime-list-container\">\r\n        <motion.div className={`anime-list ${gridColsTemp}`}>\r\n          {trimedAllAnimeData\r\n            .filter((_, index) => index <= showMore.stream - 1)\r\n            .map((anime) => {\r\n              //check where the data come from node or media\r\n              const animeData = anime.id !== undefined ? anime : anime.node;\r\n              return (\r\n                <Anime key={`${keyParam}-${animeData.id}`} anime={animeData} />\r\n              );\r\n            })}\r\n        </motion.div>\r\n      </div>\r\n      {allAnimeData.length > initialQuantity && (\r\n        <button\r\n          onClick={streamShowMoreHandler}\r\n          className=\"stream-show-more-btn\"\r\n        >\r\n          Load More\r\n        </button>\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\nexport default AnimeList;\r\n","//libs\r\nimport React, { useState, useRef } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\n//components\r\nimport Recom from \"./Recom\";\r\nimport { faChevronCircleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n//helpers & queries\r\nimport { recomListQuery } from \"../../utils/queries\";\r\n// import Errors from '../../pages/Errors';\r\n\r\nconst RecomList = ({ allRecom, animeID, initialQuantity, keyParam }) => {\r\n  const rightLeftScroll = useRef(null);\r\n  const wastefulCover = useRef(null);\r\n  const [showMore, setShowMore] = useState({\r\n    recommend: initialQuantity,\r\n  });\r\n\r\n  //check to see if we are in small device or large one to decide how many data should load\r\n  const isSmallDevice = document.documentElement.clientWidth <= 768;\r\n  //this magic numbers manage the scroll in small devices like 320px width\r\n  const magicNum1 = 250;\r\n  const magicNum2 = isSmallDevice ? 264 : 264 * 2;\r\n  const magicNum3 = 275;\r\n\r\n  //check to see if we are in home page or detail page and bcs this will throwing error for us, so we mock it\r\n  //... to get the data of id 7 if we are in home page but we dont show this data\r\n  let id;\r\n  if (animeID) {\r\n    id = animeID;\r\n  } else {\r\n    id = 7;\r\n  }\r\n  const { loading, error, data } = useQuery(recomListQuery, {\r\n    variables: {\r\n      id: id,\r\n    },\r\n  });\r\n\r\n  if (loading) {\r\n    return null;\r\n  }\r\n\r\n  if (error) {\r\n    //we comented next line bcs it show the Errors page in middle of the oter pages, we just ignore this error if happened\r\n    // return <Errors errMsg={error.message} />;\r\n    return null;\r\n  }\r\n\r\n  //we check to see if the data come from the parent or from the graphql request\r\n  let allRecomData;\r\n  if (allRecom) {\r\n    allRecomData = allRecom;\r\n  } else {\r\n    allRecomData = data.Media.recommendations.edges;\r\n  }\r\n\r\n  // START of slider : isdown check the mouse key down , startx is the scrill left at the beggining of mouse key down and scroll left is the current scroll left\r\n  let isDown = false;\r\n  let startx, scrollLeft;\r\n\r\n  //on mouse down we set startx and scrollLeft , then we update scrollLeft later but we dont update startx bcs it is constant from a click down to click up\r\n  const recSliderMouseDownHandler = (e) => {\r\n    e.preventDefault();\r\n    isDown = true;\r\n    startx = e.pageX - rightLeftScroll.current.offsetLeft;\r\n    scrollLeft = rightLeftScroll.current.scrollLeft;\r\n  };\r\n\r\n  //we put wastfullCover to avoid triger click action . bcs click happen wen we mouse down and mouse up on the same object\r\n  //... so this 0 opacity cover help us to don't mouse up at the same object\r\n  const recSliderMouseLeaveHandler = () => {\r\n    isDown = false;\r\n    wastefulCover.current.style.display = \"none\";\r\n  };\r\n\r\n  //we put wastfullCover to avoid triger click action . bcs click happen wen we mouse down and mouse up on the same object\r\n  //... so this 0 opacity cover help us to don't mouse up at the same object\r\n  // we also update the state, we load all the data if user dragging the slider\r\n  const recSliderMouseUpHandler = () => {\r\n    isDown = false;\r\n\r\n    wastefulCover.current.style.display = \"none\";\r\n\r\n    setShowMore({ recommend: allRecomData.length });\r\n  };\r\n\r\n  const recSliderMouseMoveHandler = (e) => {\r\n    if (!isDown) return;\r\n    e.preventDefault();\r\n    const x = e.pageX - rightLeftScroll.current.offsetLeft;\r\n    const walk = (x - startx) * 1.5;\r\n    rightLeftScroll.current.scrollLeft = scrollLeft - walk;\r\n    wastefulCover.current.style.display = \"block\";\r\n  };\r\n\r\n  //in scroll handler btn we use our magic number to manage the scroll by using math.round\r\n  //...we also load more data if user click on the right button. the number of new data is depend on size of the device\r\n  const rightScrollHandler = () => {\r\n    let recLeft = rightLeftScroll.current.scrollLeft;\r\n    let recWidth = rightLeftScroll.current.scrollWidth;\r\n\r\n    if ((Math.round(recLeft) - magicNum1) % magicNum2 !== 0) {\r\n      recLeft = Math.round((Math.round(recLeft) - magicNum1) / magicNum2);\r\n      recLeft = recLeft * magicNum2 + magicNum1;\r\n      rightLeftScroll.current.scrollTo({\r\n        top: 0,\r\n        left: recWidth === recLeft ? recLeft + magicNum3 : recLeft + magicNum2,\r\n        behavior: \"smooth\",\r\n      });\r\n      if (\r\n        isSmallDevice\r\n          ? showMore.recommend < allRecomData.length + 1\r\n          : showMore.recommend < allRecomData.length + 3\r\n      ) {\r\n        const newRecommend = isSmallDevice\r\n          ? showMore.recommend + 1\r\n          : showMore.recommend + 3;\r\n        setShowMore({ recommend: newRecommend });\r\n      }\r\n    } else {\r\n      rightLeftScroll.current.scrollTo({\r\n        top: 0,\r\n        left: recLeft === 0 ? recLeft + magicNum1 : recLeft + magicNum2,\r\n        behavior: \"smooth\",\r\n      });\r\n\r\n      if (\r\n        isSmallDevice\r\n          ? showMore.recommend < allRecomData.length + 1\r\n          : showMore.recommend < allRecomData.length + 3\r\n      ) {\r\n        const newRecommend = isSmallDevice\r\n          ? showMore.recommend + 1\r\n          : showMore.recommend + 3;\r\n        setShowMore({ recommend: newRecommend });\r\n      }\r\n    }\r\n  };\r\n\r\n  //like the right handler but we dont load new data as it make sense\r\n  const leftScrollHandler = () => {\r\n    let recLeft = rightLeftScroll.current.scrollLeft;\r\n    let recWidth = rightLeftScroll.current.scrollWidth;\r\n    if ((Math.round(recLeft) - magicNum1) % magicNum2 !== 0) {\r\n      recLeft = Math.round((Math.round(recLeft) - magicNum1) / magicNum2);\r\n      recLeft = recLeft * magicNum2 + magicNum1;\r\n      rightLeftScroll.current.scrollTo({\r\n        top: 0,\r\n        left: recWidth === recLeft ? recLeft - magicNum3 : recLeft - magicNum2,\r\n        behavior: \"smooth\",\r\n      });\r\n    } else {\r\n      rightLeftScroll.current.scrollTo({\r\n        top: 0,\r\n        left: recWidth === recLeft ? recLeft - magicNum3 : recLeft - magicNum2,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  //in touch handler we do same thing. maybe we need to clean this mess and make another function to use in all event listeners\r\n  //.\r\n  //..\r\n  //...\r\n  const recTouchHandler = () => {\r\n    let recLeft = rightLeftScroll.current.scrollLeft;\r\n    let recWidth = rightLeftScroll.current.scrollWidth;\r\n\r\n    if (recLeft / recWidth < 0.5) {\r\n      if (\r\n        isSmallDevice\r\n          ? showMore.recommend < allRecomData.length + 1\r\n          : showMore.recommend < allRecomData.length + 3\r\n      ) {\r\n        setShowMore({ recommend: allRecomData.length });\r\n      }\r\n    }\r\n    if ((Math.round(recLeft) - magicNum1) % magicNum2 !== 0 && recLeft !== 0) {\r\n      recLeft = Math.round((Math.round(recLeft) - magicNum1) / magicNum2);\r\n      recLeft = recLeft * magicNum2 + magicNum1;\r\n      rightLeftScroll.current.scrollTo({\r\n        top: 0,\r\n        left: recLeft,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {allRecomData.length > 0 && (\r\n        <div>\r\n          <h4 className=\"recom-list-title\">Recommendations</h4>\r\n          <div className=\"recommendation-parent\">\r\n            <div\r\n              className=\"recommendation\"\r\n              ref={rightLeftScroll}\r\n              onTouchEnd={recTouchHandler}\r\n              onMouseDown={recSliderMouseDownHandler}\r\n              onMouseLeave={recSliderMouseLeaveHandler}\r\n              onMouseUp={recSliderMouseUpHandler}\r\n              onMouseMove={recSliderMouseMoveHandler}\r\n            >\r\n              <div>\r\n                {allRecomData\r\n                  .filter((_, index) => showMore.recommend - 1 >= index)\r\n                  .map((recom, index) => {\r\n                    const id = recom.node\r\n                      ? recom.node.mediaRecommendation.id\r\n                      : recom.media.id;\r\n                    return <Recom key={keyParam + id + index} recom={recom} />;\r\n                  })}\r\n                <div ref={wastefulCover} className=\"wasteful-cover\"></div>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={leftScrollHandler}\r\n              className=\"left-0 bg-gradient-to-l\"\r\n            >\r\n              <FontAwesomeIcon\r\n                className=\"font-icon-recom-list transform rotate-180\"\r\n                icon={faChevronCircleRight}\r\n              />\r\n            </button>\r\n            <button\r\n              onClick={rightScrollHandler}\r\n              className=\"right-0 bg-gradient-to-r\"\r\n            >\r\n              <FontAwesomeIcon\r\n                className=\"font-icon-recom-list transform\"\r\n                icon={faChevronCircleRight}\r\n              />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default RecomList;\r\n"],"sourceRoot":""}