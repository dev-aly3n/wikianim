{"version":3,"sources":["utils/queries.js","pages/Loading.js","components/SearchAnime.js","pages/SearchList.js","pages/Header.js","pages/ScrollToTop.js","pages/Footer.js","pages/ProgressBar.js","App.js","index.js"],"names":["menuSearchQuery","gql","filterQuery","detailQuery","recomListQuery","homeQuery","charQuery","Loading","className","SearchAnime","anime","emptySearchValue","history","useHistory","client","useApolloClient","href","id","onClick","e","preventDefault","writeQuery","query","data","loadingbar","__typename","isLoading","setTimeout","push","alt","src","coverImage","medium","title","english","romaji","SearchList","searchBoxRef","useRef","useState","searchValue","setSearchValue","setIsLoading","isExpanded","setIsExpanded","searchData","useCallback","useEffect","window","addEventListener","target","classList","contains","searchTimer","getSearchAnime","variables","search","clearTimeout","useLazyQuery","error","console","log","Page","media","onSubmit","icon","faSearch","current","focus","ref","onFocus","type","value","placeholder","onChange","length","motion","span","animate","opacity","transition","duration","delay","initial","to","map","Header","navRef","burgerRef","navLinksRef","homeLinkRef","animeLinkRef","Error404Ref","scrollerContainer","document","getElementById","burger","nav","navLinks","toggle","forEach","link","index","style","animation","matches","remove","prevScrollpos","Number","scrollTop","toFixed","currentScrollPos","top","backgroundColor","LinkClickHandler","headerLinks","text","activeStyle","color","exact","ScrollToTop","pathname","useLocation","pervPath","setPervPath","includes","scrollTo","require","Link","Footer","loading","width","height","rel","ProgressBar","progressRef","READ_ISLOADING","isChanged","bar","firstElementChild","shining","children","watchQuery","fetchPolicy","subscribe","next","add","Home","React","lazy","AnimeDetail","AnimeFilter","Error404","App","fallback","path","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider"],"mappings":"6VAEaA,EAAkBC,YAAH,8TAkBfC,EAAcD,YAAH,8fA6BXE,EAAcF,YAAH,k6EAoJXG,EAAiBH,YAAH,2jBA6BdI,EAAYJ,YAAH,+/DA4GTK,EAAYL,YAAH,85C,2CClUPM,IAZC,WACd,OACE,qBAAKC,UAAU,yBAAf,SACE,8BACE,sBAAKA,UAAU,aAAf,UACE,wBACA,iC,2MCyCKC,EA5CK,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,iBACtBC,EAAUC,cACVC,EAASC,cA4Bf,OACE,oBACEC,KAAI,iBAAYN,EAAMO,IACtBC,QA7B0B,SAACC,GAC7BA,EAAEC,iBAEFN,EAAOO,WAAW,CAChBC,MAAOrB,YAAF,yIAOLsB,KAAM,CAEJC,WAAY,CACVC,WAAY,aACZC,UAAW,OAKjBC,YAAW,WACThB,IACAC,EAAQgB,KAAR,iBAAuBlB,EAAMO,OAC5B,MAODT,UAAU,0BAHZ,UAKE,qBAAKqB,IAAI,GAAGC,IAAKpB,EAAMqB,WAAWC,SAClC,oBAAIxB,UAAU,oBAAd,SACGE,EAAMuB,MAAMC,QAAUxB,EAAMuB,MAAMC,QAAUxB,EAAMuB,MAAME,aCsGlDC,EAtII,WACjB,IAAMxB,EAAUC,cACVwB,EAAeC,iBAAO,MAC5B,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOb,EAAP,KAAkBgB,EAAlB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACIC,EAAa,GAEXlC,EAAmBmC,uBAAY,WACnCL,EAAe,MACd,CAACA,IAYJM,qBAAU,WASR,OADAC,OAAOC,iBAAiB,SAPO,SAAC9B,GAC1BA,EAAE+B,OAAOC,UAAUC,SAAS,gBAC9BR,GAAc,GAEdA,GAAc,MAIX,WACLA,GAAc,MAEf,IAEHG,qBAAU,WACRL,GAAa,GACb,IAAMW,EAAc1B,YAAW,WAC7B2B,EAAe,CAAEC,UAAW,CAAEC,OAAQhB,KACtCE,GAAa,KACZ,KACH,OAAO,WACLe,aAAaJ,MAGd,CAACb,IAEJ,MAA0CkB,YAAa1D,KAAvD,mBAAOsD,EAAP,YAAyBK,EAAzB,EAAyBA,MAAOpC,EAAhC,EAAgCA,KAUhC,OARIoC,GACFC,QAAQC,IAAIF,GAGVpC,IACFsB,EAAatB,EAAKuC,KAAKC,OAIvB,sBAAKvD,UAAU,mCAAf,UACE,uBAAMwD,SA7CkB,SAAC7C,GAC3BA,EAAEC,iBACFwB,GAAc,GACdhC,EAAQgB,KAAR,kBAAwBY,IACxBC,EAAe,KAyCwBjC,UAAU,eAA/C,UACE,sBAAMA,UAAU,eAAhB,SACE,cAAC,IAAD,CACEA,UAAU,eACVyD,KAAMC,IACNhD,QAAS,kBAAMmB,EAAa8B,QAAQC,aAGxC,uBACEC,IAAKhC,EACLiC,QAAS,kBAAM1B,GAAc,IAC7BpC,UAAU,gBACV+D,KAAK,OACLC,MAAOhC,EACPiC,YAAa,YACbC,SAhEoB,SAACvD,GAC3BsB,EAAetB,EAAE+B,OAAOsB,aAmErB7B,GACC,qBAAKnC,UAAU,uCAAf,SACE,sBAAKA,UAAU,eAAf,UACyB,IAAtBqC,EAAW8B,QACV,mBAAGnE,UAAU,eAAb,SACmB,KAAhBgC,EACC,8BACEd,EACF,GAEA,cAACkD,EAAA,EAAOC,KAAR,CACEC,QAAS,CACPC,QAAS,EACTC,WAAY,CAAEC,SAAU,GAAKC,MAAO,IAEtCC,QAAS,CAAEJ,QAAS,GACpBvE,UAAU,eANZ,yDAaLkB,GAAa,qBAAKlB,UAAU,gCAC3BkB,GACA,sBAAKlB,UAAU,mBAAf,UACGqC,EAAW8B,OAAS,GACnB,cAAC,OAAD,CACEnE,UAAU,wBACV4E,GAAE,kBAAa5C,GACftB,QAAS,kBAAMuB,EAAe,KAHhC,6BAQF,8BACGI,EAAWwC,KAAI,SAAC3E,GACf,OACE,cAAC,EAAD,CAEEA,MAAOA,EACPC,iBAAkBA,GAFbD,EAAMO,qBCkCpBqE,EA3JA,WACb,IAAMxE,EAASC,cACTwE,EAASjD,iBAAO,MAChBkD,EAAYlD,iBAAO,MACnBmD,EAAcnD,iBAAO,MACrBoD,EAAcpD,iBAAO,MACrBqD,EAAerD,iBAAO,MACtBsD,EAActD,iBAAO,MAGrBuD,EAAoBC,SAASC,eAAe,QAElDhD,qBAAU,WACR,IAAMiD,EAASR,EAAUrB,QACnB8B,EAAMR,EAAYtB,QAClB+B,EAAW,CAACR,EAAYvB,QAASwB,EAAaxB,QAASyB,EAAYzB,SAIvE6B,EAAO/C,iBAAiB,SAAS,WAC/BgD,EAAI9C,UAAUgD,OAAO,cAErBD,EAASE,SAAQ,SAACC,EAAMC,GAClBD,EAAKE,MAAMC,UACbH,EAAKE,MAAMC,UAAY,GAEvBH,EAAKE,MAAMC,UAAX,qCACEF,EAAQ,EAAI,GADd,QAOJN,EAAO7C,UAAUgD,OAAO,aAG1BL,SAAS7C,iBAAiB,SAAS,SAAC9B,GAC9BA,EAAE+B,OAAOuD,QAAQ,iBACrBR,EAAI9C,UAAUuD,OAAO,cACrBV,EAAO7C,UAAUuD,OAAO,UACxBR,EAASE,SAAQ,SAACC,GAChBA,EAAKE,MAAMC,UAAY,UAO7B,IAAIG,EAAgBC,OAAOf,EAAkBgB,UAAUC,QAAQ,IAC/DjB,EAAkB5C,iBAAiB,UAAU,WAC3C,IAAI8D,EAAmBH,OAAOf,EAAkBgB,UAAUC,QAAQ,IAC9DH,EAAgBI,GAAoBA,EAAmB,KACzDxB,EAAOpB,QAAQoC,MAAMS,IAAM,IAC3BzB,EAAOpB,QAAQoC,MAAMU,gBAAkB,qBAC9BF,EAAmB,KAA4B,IAArBA,GACnCxB,EAAOpB,QAAQoC,MAAMS,IAAM,IAC3BzB,EAAOpB,QAAQoC,MAAMU,gBAAkB,uBAEvC1B,EAAOpB,QAAQoC,MAAMS,IAAM,OAE7BL,EAAgBI,KAGlB/D,OAAOC,iBAAiB,aAAa,WACnC,IAAI8D,EAAmBH,OAAOf,EAAkBgB,UAAUC,QAAQ,IAC9DH,EAAgBI,GAAoBA,EAAmB,KACzDxB,EAAOpB,QAAQoC,MAAMS,IAAM,IAC3BzB,EAAOpB,QAAQoC,MAAMU,gBAAkB,qBAC9BF,EAAmB,KAA4B,IAArBA,GACnCxB,EAAOpB,QAAQoC,MAAMS,IAAM,IAC3BzB,EAAOpB,QAAQoC,MAAMU,gBAAkB,uBAEvC1B,EAAOpB,QAAQoC,MAAMS,IAAM,OAE7BL,EAAgBI,KAGlBb,EAASE,SAAQ,SAACC,GAChBA,EAAKpD,iBAAiB,QAASiE,QAGhC,IAEH,IAAMA,EAAmB,WACvBpG,EAAOO,WAAW,CAChBC,MAAOrB,YAAF,yIAOLsB,KAAM,CAEJC,WAAY,CACVC,WAAY,aACZC,UAAW,QAMbyF,EAAc,CAClB,CACE/B,GAAI,IACJgC,KAAM,OACNC,YAAa,CAAEJ,gBAAiB,UAAWK,MAAO,WAClDjD,IAAKqB,GAEP,CACEN,GAAI,WACJgC,KAAM,QACNC,YAAa,CAAEJ,gBAAiB,UAAWK,MAAO,WAClDjD,IAAKsB,GAEP,CACEP,GAAI,yBACJgC,KAAM,WACNC,YAAa,CAAEJ,gBAAiB,UAAWK,MAAO,WAClDjD,IAAKuB,IAIT,OACE,sBAAKvB,IAAKkB,EAAQtE,GAAG,aAAaT,UAAU,kCAA5C,UACE,sBAAKA,UAAU,aAAf,UACE,oBAAIA,UAAU,4BAAd,gBACA,sBACEA,UAAU,2BADZ,2BAMF,oBAAI6D,IAAKoB,EAAajF,UAAU,uBAAhC,SACG2G,EAAY9B,KAAI,SAACgB,GAChB,OACE,oBAAoBhC,IAAKgC,EAAKhC,IAA9B,SACE,cAAC,UAAD,CAASgD,YAAahB,EAAKgB,YAAajC,GAAIiB,EAAKjB,GAAImC,OAAO,EAA5D,SACGlB,EAAKe,QAFDf,EAAKe,WAQpB,cAAC,EAAD,IAEA,sBAAK/C,IAAKmB,EAAWhF,UAAU,oBAA/B,UACE,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,4BCxJR,SAASgH,IACtB,IACMC,EADWC,cACSD,SAC1B,EAAgClF,mBAASkF,GAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KAYA,OAVA7E,qBAAU,WACJ0E,EAASI,SAAS,cAAgBF,EAASE,SAAS,eAEtD/B,SAASC,eAAe,QAAQ+B,SAAS,EAAG,GAC5ChC,SAASC,eAAe,cAAcQ,MAAMS,IAAM,KAEpDY,EAAYH,KAEX,CAACA,IAEG,KClBQM,EAAQ,IAAjBC,KAAR,I,IAsFeC,EApFA,WACb,OACE,sBAAKzH,UAAU,mBAAf,UACE,gCACE,qBAAKA,UAAU,eAAf,SACE,+HAE8B,uBAF9B,6GAIwC,uBAJxC,kFAMiB,uBACf,qIAOJ,sBAAKA,UAAU,oBAAf,UACE,oBAAIA,UAAU,8DAAd,gBAGA,sBAAMA,UAAU,+DAAhB,2BAKF,sBAAKA,UAAU,eAAf,UACE,wCACA,+BACE,+BACE,qBAAK0H,QAAQ,OAAOC,MAAO,GAAIC,OAAQ,GACrCvG,IAAI,GACJC,IACE,kHAGJ,oBACEd,KAAK,+BACLkC,OAAO,SACPmF,IAAI,sBAHN,UAKG,IALH,yBASF,+BACE,qBAAKH,QAAQ,OAAOC,MAAO,GAAIC,OAAQ,GACrCvG,IAAI,GACJC,IACE,gFAGJ,oBACEd,KAAK,sDACLkC,OAAO,SACPmF,IAAI,sBAHN,UAKG,IALH,2BASF,+BACE,qBAAKH,QAAQ,OAAOC,MAAO,GAAIC,OAAQ,GAAIvG,IAAI,GAAGC,IAAK,yCACvD,oBACEd,KAAK,4BACLkC,OAAO,SACPmF,IAAI,sBAHN,UAKG,IALH,oCAYR,uBAEA,8EClBSC,EA3DK,WAClB,IAAMC,EAAcjG,iBAAO,MACrBxB,EAASC,cAETyH,EAAiBvI,YAAH,8GAQhBwI,GAAY,EAuChB,OArCA1F,qBAAU,WACR,IAAM2F,EAAMH,EAAYpE,QAAQwE,kBAC1BC,EAAUL,EAAYpE,QAAQ0E,SAAS,GAC5C/H,EAAOgI,WAAW,CACfxH,MAAOkH,EACPO,YAAa,eAEdC,UAAU,CACTC,KAAM,YAAe,IAAZ1H,EAAW,EAAXA,KAEQA,EAAKC,WAAWE,UACZ,IACjBgH,EAAIvF,UAAU+F,IAAI,sBAClBX,EAAYpE,QAAQhB,UAAU+F,IAAI,gCAClCN,EAAQzF,UAAU+F,IAAI,yBAEtBX,EAAYpE,QAAQhB,UAAUuD,OAC5B,gCAEFgC,EAAIvF,UAAUuD,OAAO,sBACrBgC,EAAIvF,UAAU+F,IAAI,qBAClBX,EAAYpE,QAAQhB,UAAU+F,IAAI,gCAElCvH,YAAW,WACT+G,EAAIvF,UAAUuD,OAAO,qBACrB6B,EAAYpE,QAAQhB,UAAUuD,OAC5B,gCAEFkC,EAAQzF,UAAUuD,OAAO,yBACxB,MAGL+B,GAAaA,GAEf9E,MAAO,SAACxC,GAAD,OAAOyC,QAAQD,MAAMxC,QAE/B,CAACsH,IAEF,sBAAKpE,IAAKkE,EAAa/H,UAAU,yBAAjC,UACE,wBACA,4B,QChDA2I,EAAOC,IAAMC,MAAK,kBAAM,uDACxBC,EAAcF,IAAMC,MAAK,kBAAM,8DAC/BE,EAAcH,IAAMC,MAAK,kBAAM,uDAC/BG,EAAWJ,IAAMC,MAAK,kBAAM,iCAwDnBI,MAtDf,WAoBE,OAnBe1I,cACRM,WAAW,CAChBC,MAAOrB,YAAF,6HAOLsB,KAAM,CAEJC,WAAY,CACVC,WAAY,aACZC,UAAW,MAOf,sBAAKlB,UAAU,yBAAf,UACE,cAAC,EAAD,IACA,wBAAQA,UAAU,UAAlB,SACE,cAAC,EAAD,MAEF,cAACgH,EAAD,IACA,sBAAMhH,UAAU,WAAhB,SACE,cAAC,WAAD,CAAUkJ,SAAU,cAACnJ,EAAA,EAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoJ,KAAM,CAAC,IAAK,cAAepC,OAAK,EAAvC,SACE,cAAC4B,EAAD,MAEF,cAAC,IAAD,CAAOQ,KAAM,kBAAb,SACE,cAACL,EAAD,MAEF,cAAC,IAAD,CAAOK,KAAM,WAAb,SACE,cAACJ,EAAD,MAEF,cAAC,IAAD,CAAOI,KAAM,mDAAb,SACE,cAACL,EAAD,MAEF,cAAC,IAAD,CAAOK,KAAK,IAAZ,SACE,cAACH,EAAD,aAKR,wBAAQhJ,UAAU,aAAlB,SACE,cAAC,EAAD,U,wBCxDFM,EAAS,IAAI8I,IAAa,CAC9BC,IAAK,6BACLC,MAAO,IAAIC,MAGbC,IAASC,OACP,cAACC,EAAA,EAAD,CAAgBpJ,OAAQA,EAAxB,SACE,cAAC,gBAAD,UACE,cAAC,EAAD,QAGJgF,SAASC,eAAe,W","file":"static/js/main.1bed87e2.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\r\n\r\nexport const menuSearchQuery = gql`\r\n  query MeNuSeArCh($search: String) {\r\n    Page(perPage: 5, page: 1) {\r\n      media(search: $search, sort: SEARCH_MATCH) {\r\n        id\r\n        coverImage {\r\n          medium\r\n          color\r\n        }\r\n        title {\r\n          english\r\n          romaji\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const filterQuery = gql`\r\n  query FiLtErPaGe($search: String) {\r\n    filter: Page(perPage: 50, page: 1) {\r\n      media(search: $search) {\r\n        id\r\n        title {\r\n          english\r\n          romaji\r\n        }\r\n        coverImage {\r\n          large\r\n          color\r\n        }\r\n        source\r\n        format\r\n        status\r\n        averageScore\r\n        popularity\r\n        seasonYear\r\n        season\r\n        tags {\r\n          name\r\n        }\r\n        description(asHtml: true)\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const detailQuery = gql`\r\n  query SelectedAnImE($id: Int) {\r\n    Media(id: $id) {\r\n      id\r\n      title {\r\n        english\r\n        romaji\r\n      }\r\n      description(asHtml: true)\r\n      duration\r\n      startDate {\r\n        year\r\n        month\r\n        day\r\n      }\r\n      endDate {\r\n        year\r\n        month\r\n        day\r\n      }\r\n      coverImage {\r\n        large\r\n        color\r\n      }\r\n      bannerImage\r\n      episodes\r\n      season\r\n      seasonYear\r\n      rankings {\r\n        id\r\n        context\r\n        allTime\r\n        rank\r\n        year\r\n        season\r\n      }\r\n      format\r\n      genres\r\n      streamingEpisodes {\r\n        title\r\n        thumbnail\r\n        url\r\n      }\r\n      relations {\r\n        edges {\r\n          node {\r\n            title {\r\n              english\r\n              romaji\r\n            }\r\n            id\r\n            coverImage {\r\n              large\r\n              color\r\n            }\r\n            source\r\n            format\r\n            status\r\n          }\r\n        }\r\n      }\r\n      reviews {\r\n        edges {\r\n          node {\r\n            id\r\n            user {\r\n              id\r\n              name\r\n              avatar {\r\n                medium\r\n              }\r\n            }\r\n            score\r\n            rating\r\n            ratingAmount\r\n            summary\r\n            body(asHtml: true)\r\n            createdAt\r\n          }\r\n        }\r\n      }\r\n      externalLinks {\r\n        id\r\n        site\r\n        url\r\n      }\r\n      studios {\r\n        edges {\r\n          isMain\r\n          node {\r\n            name\r\n            siteUrl\r\n            id\r\n          }\r\n        }\r\n      }\r\n      tags {\r\n        name\r\n        rank\r\n      }\r\n      popularity\r\n      meanScore\r\n      source\r\n      chapters\r\n      volumes\r\n      favourites\r\n      nextAiringEpisode {\r\n        timeUntilAiring\r\n        episode\r\n      }\r\n      trailer {\r\n        id\r\n      }\r\n      characters(sort: [ROLE]) {\r\n        edges {\r\n          role\r\n          voiceActors {\r\n            id\r\n            name {\r\n              full\r\n            }\r\n            image {\r\n              medium\r\n            }\r\n            languageV2\r\n          }\r\n          node {\r\n            id\r\n            name {\r\n              full\r\n            }\r\n            image {\r\n              medium\r\n            }\r\n          }\r\n        }\r\n      }\r\n      staff(sort: FAVOURITES_DESC) {\r\n        edges {\r\n          node {\r\n            id\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const recomListQuery = gql`\r\n  query rEcOmLiStQuErY($id: Int) {\r\n    Media(id: $id) {\r\n      recommendations(sort: RATING_DESC) {\r\n        edges {\r\n          node {\r\n            rating\r\n            mediaRecommendation {\r\n              id\r\n              format\r\n              source\r\n              status\r\n              title {\r\n                english\r\n                romaji\r\n              }\r\n              coverImage {\r\n                large\r\n                color\r\n              }\r\n              description\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const homeQuery = gql`\r\n  query HoMeAnImE {\r\n    top100: Page(perPage: 50, page: 1) {\r\n      media(sort: SCORE_DESC) {\r\n        id\r\n        title {\r\n          english\r\n          romaji\r\n        }\r\n        coverImage {\r\n          large\r\n          color\r\n        }\r\n        source\r\n        format\r\n        status\r\n        averageScore\r\n        popularity\r\n        seasonYear\r\n        season\r\n        tags {\r\n          name\r\n        }\r\n        description(asHtml: true)\r\n      }\r\n    }\r\n    airing: Page(perPage: 50, page: 1) {\r\n      airingSchedules(sort: TIME, notYetAired: true) {\r\n        media {\r\n          id\r\n          nextAiringEpisode {\r\n            episode\r\n            timeUntilAiring\r\n          }\r\n          bannerImage\r\n          title {\r\n            english\r\n            romaji\r\n          }\r\n          source\r\n          format\r\n          genres\r\n          coverImage {\r\n            large\r\n            color\r\n          }\r\n          description(asHtml: true)\r\n        }\r\n      }\r\n    }\r\n    trending: Page(page: 1, perPage: 50) {\r\n      media(sort: TRENDING_DESC) {\r\n        id\r\n        coverImage {\r\n          large\r\n          color\r\n        }\r\n        title {\r\n          english\r\n          romaji\r\n        }\r\n        source\r\n        format\r\n        status\r\n        averageScore\r\n        meanScore\r\n      }\r\n    }\r\n    homeRecom: Page(perPage: 30, page: 1) {\r\n      recommendations(sort: RATING_DESC) {\r\n        rating\r\n        media {\r\n          id\r\n          description(asHtml: true)\r\n          title {\r\n            english\r\n            romaji\r\n          }\r\n          format\r\n          status\r\n          source\r\n          coverImage {\r\n            large\r\n            color\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allTime: Page(perPage: 50, page: 1) {\r\n      media(sort: POPULARITY_DESC) {\r\n        id\r\n        title {\r\n          english\r\n          romaji\r\n        }\r\n        coverImage {\r\n          large\r\n          color\r\n        }\r\n        source\r\n        format\r\n        status\r\n        averageScore\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const charQuery = gql`\r\n  query SelectedChar($char_id: Int, $staff_id: Int) {\r\n    Character(id: $char_id) {\r\n      id\r\n      name {\r\n        full\r\n        native\r\n      }\r\n      age\r\n      gender\r\n      dateOfBirth {\r\n        year\r\n        month\r\n        day\r\n      }\r\n      description(asHtml: true)\r\n      image {\r\n        large\r\n      }\r\n      favourites\r\n      media {\r\n        edges {\r\n          node {\r\n            id\r\n            coverImage {\r\n              large\r\n              color\r\n            }\r\n            format\r\n            source\r\n            status\r\n            title {\r\n              english\r\n              romaji\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    Staff(id: $staff_id) {\r\n      id\r\n      name {\r\n        full\r\n        native\r\n      }\r\n      favourites\r\n      age\r\n      gender\r\n      dateOfBirth {\r\n        year\r\n        month\r\n        day\r\n      }\r\n      dateOfDeath {\r\n        year\r\n        month\r\n        day\r\n      }\r\n      homeTown\r\n      languageV2\r\n      image {\r\n        large\r\n      }\r\n      yearsActive\r\n      description(asHtml: true)\r\n      staffMedia {\r\n        edges {\r\n          node {\r\n            id\r\n            coverImage {\r\n              large\r\n              color\r\n            }\r\n            format\r\n            source\r\n            status\r\n            title {\r\n              english\r\n              romaji\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","const Loading = () => {\r\n  return (\r\n    <div className=\"main-loading-container\">\r\n      <div>\r\n        <div className=\"lds-ripple\">\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Loading;\r\n","import { useApolloClient, gql } from \"@apollo/client\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst SearchAnime = ({ anime, emptySearchValue }) => {\r\n  const history = useHistory();\r\n  const client = useApolloClient();\r\n\r\n  const animeCardClickHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    client.writeQuery({\r\n      query: gql`\r\n        query WriteIsLoading {\r\n          loadingbar {\r\n            isLoading\r\n          }\r\n        }\r\n      `,\r\n      data: {\r\n        // Contains the data to write\r\n        loadingbar: {\r\n          __typename: \"LoadingBar\",\r\n          isLoading: 30,\r\n        },\r\n      },\r\n    });\r\n\r\n    setTimeout(() => {\r\n      emptySearchValue();\r\n      history.push(`/anime/${anime.id}`);\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <a\r\n      href={`/anime/${anime.id}`}\r\n      onClick={animeCardClickHandler}\r\n      className=\" search-anime-container\"\r\n    >\r\n      <img alt=\"\" src={anime.coverImage.medium} />\r\n      <h4 className=\"line-clamp-2 mx-2\">\r\n        {anime.title.english ? anime.title.english : anime.title.romaji}\r\n      </h4>\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default SearchAnime;\r\n","import React, { useRef, useEffect, useState, useCallback } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { menuSearchQuery } from \"../utils/queries\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SearchAnime from \"../components/SearchAnime\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst SearchList = () => {\r\n  const history = useHistory();\r\n  const searchBoxRef = useRef(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  let searchData = [];\r\n\r\n  const emptySearchValue = useCallback(() => {\r\n    setSearchValue(\"\");\r\n  }, [setSearchValue]);\r\n  const searchChangeHandler = (e) => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  const submitSearchHandler = (e) => {\r\n    e.preventDefault();\r\n    setIsExpanded(false);\r\n    history.push(`/search/${searchValue}`);\r\n    setSearchValue(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const windowClickOutOfSearch = (e) => {\r\n      if (e.target.classList.contains(\"search-click\")) {\r\n        setIsExpanded(true);\r\n      } else {\r\n        setIsExpanded(false);\r\n      }\r\n    };\r\n    window.addEventListener(\"click\", windowClickOutOfSearch);\r\n    return () => {\r\n      setIsExpanded(false);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const searchTimer = setTimeout(() => {\r\n      getSearchAnime({ variables: { search: searchValue } });\r\n      setIsLoading(false);\r\n    }, 700);\r\n    return () => {\r\n      clearTimeout(searchTimer);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [searchValue]);\r\n\r\n  const [getSearchAnime, { error, data }] = useLazyQuery(menuSearchQuery);\r\n\r\n  if (error) {\r\n    console.log(error)\r\n  }\r\n\r\n  if (data) {\r\n    searchData = data.Page.media;\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-click searchbox-container\">\r\n      <form onSubmit={submitSearchHandler} className=\"search-click\">\r\n        <span className=\"search-click\">\r\n          <FontAwesomeIcon\r\n            className=\"search-click\"\r\n            icon={faSearch}\r\n            onClick={() => searchBoxRef.current.focus()}\r\n          />\r\n        </span>\r\n        <input\r\n          ref={searchBoxRef}\r\n          onFocus={() => setIsExpanded(true)}\r\n          className=\"search-click \"\r\n          type=\"text\"\r\n          value={searchValue}\r\n          placeholder={\"Search...\"}\r\n          onChange={searchChangeHandler}\r\n        />\r\n      </form>\r\n\r\n      {isExpanded && (\r\n        <div className=\"search-click expanded-search-results\">\r\n          <div className=\"search-click\">\r\n            {searchData.length === 0 && (\r\n              <p className=\"search-click\">\r\n                {searchValue === \"\" ? (\r\n                  \"Search anything you want...\"\r\n                ) : isLoading ? (\r\n                  \"\"\r\n                ) : (\r\n                  <motion.span\r\n                    animate={{\r\n                      opacity: 1,\r\n                      transition: { duration: 0.1, delay: 2 },\r\n                    }}\r\n                    initial={{ opacity: 0 }}\r\n                    className=\"search-click\"\r\n                  >\r\n                    Sorry! We couldn't find what looking for!\r\n                  </motion.span>\r\n                )}\r\n              </p>\r\n            )}\r\n            {isLoading && <div className=\"search-click lds-dual-ring\"></div>}\r\n            {!isLoading && (\r\n              <div className=\"searchbox-result\">\r\n                {searchData.length > 0 && (\r\n                  <Link\r\n                    className=\"searchbox-result-link\"\r\n                    to={`/search/${searchValue}`}\r\n                    onClick={() => setSearchValue(\"\")}\r\n                  >\r\n                    See All Results\r\n                  </Link>\r\n                )}\r\n                <div>\r\n                  {searchData.map((anime) => {\r\n                    return (\r\n                      <SearchAnime\r\n                        key={anime.id}\r\n                        anime={anime}\r\n                        emptySearchValue={emptySearchValue}\r\n                      />\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchList;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useApolloClient } from \"@apollo/client\";\r\nimport { gql } from \"@apollo/client\";\r\nimport SearchList from \"./SearchList\";\r\n\r\nconst Header = () => {\r\n  const client = useApolloClient();\r\n  const navRef = useRef(null);\r\n  const burgerRef = useRef(null);\r\n  const navLinksRef = useRef(null);\r\n  const homeLinkRef = useRef(null);\r\n  const animeLinkRef = useRef(null);\r\n  const Error404Ref = useRef(null);\r\n\r\n  // modern Navigation bar code start here\r\n  const scrollerContainer = document.getElementById(\"root\");\r\n\r\n  useEffect(() => {\r\n    const burger = burgerRef.current;\r\n    const nav = navLinksRef.current;\r\n    const navLinks = [homeLinkRef.current, animeLinkRef.current, Error404Ref.current];\r\n\r\n    const navSlide = () => {\r\n      //toggle nav\r\n      burger.addEventListener(\"click\", () => {\r\n        nav.classList.toggle(\"nav-active\");\r\n        //animate links\r\n        navLinks.forEach((link, index) => {\r\n          if (link.style.animation) {\r\n            link.style.animation = \"\";\r\n          } else {\r\n            link.style.animation = `navLinkFade 0.6s ease both ${\r\n              index / 5 + 0.3\r\n            }s`;\r\n          }\r\n        });\r\n\r\n        //burger animation\r\n        burger.classList.toggle(\"toggle\");\r\n      });\r\n\r\n      document.addEventListener(\"click\", (e) => {\r\n        if (e.target.matches(\".navigation\")) return;\r\n        nav.classList.remove(\"nav-active\");\r\n        burger.classList.remove(\"toggle\");\r\n        navLinks.forEach((link) => {\r\n          link.style.animation = \"\";\r\n        });\r\n      });\r\n    };\r\n    navSlide();\r\n    // modern Navigation bar code stop here\r\n\r\n    let prevScrollpos = Number(scrollerContainer.scrollTop.toFixed(2));\r\n    scrollerContainer.addEventListener(\"scroll\", () => {\r\n      let currentScrollPos = Number(scrollerContainer.scrollTop.toFixed(2));\r\n      if (prevScrollpos > currentScrollPos && currentScrollPos > 300) {\r\n        navRef.current.style.top = \"0\";\r\n        navRef.current.style.backgroundColor = \"rgba(49,46,129,1)\";\r\n      } else if (currentScrollPos < 300 || currentScrollPos === 0) {\r\n        navRef.current.style.top = \"0\";\r\n        navRef.current.style.backgroundColor = \"rgba(49,46,129,0.7)\";\r\n      } else {\r\n        navRef.current.style.top = \"-8vh\";\r\n      }\r\n      prevScrollpos = currentScrollPos;\r\n    });\r\n\r\n    window.addEventListener(\"touchmove\", () => {\r\n      let currentScrollPos = Number(scrollerContainer.scrollTop.toFixed(2));\r\n      if (prevScrollpos > currentScrollPos && currentScrollPos > 300) {\r\n        navRef.current.style.top = \"0\";\r\n        navRef.current.style.backgroundColor = \"rgba(49,46,129,1)\";\r\n      } else if (currentScrollPos < 300 || currentScrollPos === 0) {\r\n        navRef.current.style.top = \"0\";\r\n        navRef.current.style.backgroundColor = \"rgba(49,46,129,0.7)\";\r\n      } else {\r\n        navRef.current.style.top = \"-8vh\";\r\n      }\r\n      prevScrollpos = currentScrollPos;\r\n    });\r\n\r\n    navLinks.forEach((link) => {\r\n      link.addEventListener(\"click\", LinkClickHandler);\r\n    });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const LinkClickHandler = () => {\r\n    client.writeQuery({\r\n      query: gql`\r\n        query WriteIsLoading {\r\n          loadingbar {\r\n            isLoading\r\n          }\r\n        }\r\n      `,\r\n      data: {\r\n        // Contains the data to write\r\n        loadingbar: {\r\n          __typename: \"LoadingBar\",\r\n          isLoading: 30,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const headerLinks = [\r\n    {\r\n      to: \"/\",\r\n      text: \"Home\",\r\n      activeStyle: { backgroundColor: \"#EEF2FF\", color: \"#312E81\" },\r\n      ref: homeLinkRef,\r\n    },\r\n    {\r\n      to: \"/search/\",\r\n      text: \"Anime\",\r\n      activeStyle: { backgroundColor: \"#EEF2FF\", color: \"#312E81\" },\r\n      ref: animeLinkRef,\r\n    },\r\n    {\r\n      to: \"/404sadjh234oi21j3lkj/\",\r\n      text: \"Error404\",\r\n      activeStyle: { backgroundColor: \"#EEF2FF\", color: \"#312E81\" },\r\n      ref: Error404Ref,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <nav ref={navRef} id=\"navigation\" className=\"navigation navigation-container\">\r\n      <div className=\"logo group\">\r\n        <h1 className=\" group-hover:animate-none\">WA</h1>\r\n        <span\r\n          className=\"group-hover:animate-none\"\r\n        >\r\n          Wiki Anime\r\n        </span>\r\n      </div>\r\n      <ul ref={navLinksRef} className=\"nav-links navigation\">\r\n        {headerLinks.map((link) => {\r\n          return (\r\n            <li key={link.text} ref={link.ref}>\r\n              <NavLink activeStyle={link.activeStyle} to={link.to} exact={true}>\r\n                {link.text}\r\n              </NavLink>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <SearchList />\r\n\r\n      <div ref={burgerRef} className=\"navigation burger\">\r\n        <div className=\"navigation line1\"></div>\r\n        <div className=\"navigation line2\"></div>\r\n        <div className=\"navigation line3\"></div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const location = useLocation();\r\n  const pathname = location.pathname;\r\n  const [pervPath, setPervPath] = useState(pathname);\r\n\r\n  useEffect(() => {\r\n    if (pathname.includes(\"character\") || pervPath.includes(\"character\")) {\r\n    } else {\r\n      document.getElementById(\"root\").scrollTo(0, 0);\r\n      document.getElementById(\"navigation\").style.top = \"0\";\r\n    }\r\n    setPervPath(pathname);\r\n    // eslint-disable-next-line\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","const { Link } = require(\"react-router-dom\")\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer-container\">\r\n      <div>\r\n        <div className=\"footer-thank\">\r\n          <p>\r\n            This Single Page Application built by the power of React, graphQL\r\n            and Tailwind css and ect... <br />\r\n            this takes 50 days from me to built, however I learnt a lot at this\r\n            time beside working on my application <br />\r\n            anyway thank you to visiting my app and a big thanks to anilist\r\n            graphQL server <br />\r\n            <span>\r\n              if you think there is something wrong, then please open the\r\n              application with chrome browser.\r\n            </span>\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"footer-logo group\">\r\n          <h1 className=\"animate-textShadowPopTl group-hover:animate-textShadowPopTr\">\r\n            WA\r\n          </h1>\r\n          <span className=\"animate-textShadowPopTl group-hover:animate-textShadowPopTr \">\r\n            Wiki Anime\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"footer-links\">\r\n          <h4> Links</h4>\r\n          <ul>\r\n            <li>\r\n              <img loading=\"lazy\" width={20} height={20}\r\n                alt=\"\"\r\n                src={\r\n                  \"https://img.pngio.com/github-logo-icon-of-glyph-style-available-in-svg-png-eps-ai-github-icon-png-256_256.png\"\r\n                }\r\n              />\r\n              <a\r\n                href=\"https://github.com/dev-aly3n\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                {\" \"}\r\n                dev-aly3n GitHub\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <img loading=\"lazy\" width={20} height={20}\r\n                alt=\"\"\r\n                src={\r\n                  \"https://www.strategy-works.com/wp-content/uploads/2017/12/Icon-LinkedIn.png\"\r\n                }\r\n              />\r\n              <a\r\n                href=\"https://www.linkedin.com/in/aly-mohamadi-4bb966212/\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                {\" \"}\r\n                dev-aly3n LinkedIn\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <img loading=\"lazy\" width={20} height={20} alt=\"\" src={\"https://telegram.org/img/td_icon.png\"} />\r\n              <a\r\n                href=\"https://telegram.me/aly3n\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                {\" \"}\r\n                dev-aly3n Telegram\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n\r\n      <div> All right reserved © dev-aly3n 2021</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { useApolloClient } from \"@apollo/client\";\r\nimport { gql } from \"@apollo/client\";\r\n\r\nconst ProgressBar = () => {\r\n  const progressRef = useRef(null);\r\n  const client = useApolloClient();\r\n\r\n  const READ_ISLOADING = gql`\r\n    query ReadLoading {\r\n      loadingbar {\r\n        isLoading\r\n      }\r\n    }\r\n  `;\r\n  let loadingParam;\r\n  let isChanged = false;\r\n\r\n  useEffect(() => {\r\n    const bar = progressRef.current.firstElementChild;\r\n    const shining = progressRef.current.children[1];\r\n     client.watchQuery({\r\n        query: READ_ISLOADING,\r\n        fetchPolicy: \"cache-only\",\r\n      })\r\n      .subscribe({\r\n        next: ({ data }) => {\r\n          // eslint-disable-next-line\r\n          loadingParam = data.loadingbar.isLoading;\r\n          if (loadingParam < 50) {\r\n            bar.classList.add(\"first-load-animate\");\r\n            progressRef.current.classList.add(\"last-load-animate-for-parent\");\r\n            shining.classList.add(\"shining-bar-animate\");\r\n          } else {\r\n            progressRef.current.classList.remove(\r\n              \"last-load-animate-for-parent\"\r\n            );\r\n            bar.classList.remove(\"first-load-animate\");\r\n            bar.classList.add(\"last-load-animate\");\r\n            progressRef.current.classList.add(\"last-load-animate-for-parent\");\r\n\r\n            setTimeout(() => {\r\n              bar.classList.remove(\"last-load-animate\");\r\n              progressRef.current.classList.remove(\r\n                \"last-load-animate-for-parent\"\r\n              );\r\n              shining.classList.remove(\"shining-bar-animate\");\r\n            }, 1000);\r\n          }\r\n          // eslint-disable-next-line\r\n          isChanged = !isChanged;\r\n        },\r\n        error: (e) => console.error(e),\r\n      });\r\n  }, [isChanged]);\r\n  return (\r\n    <div ref={progressRef} className=\"progress-bar-container\">\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React, { Suspense } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { useApolloClient } from \"@apollo/client\";\r\nimport { gql } from \"@apollo/client\";\r\n\r\nimport Header from \"./pages/Header\";\r\nimport ScrollToTop from \"./pages/ScrollToTop\";\r\nimport Footer from \"./pages/Footer\";\r\nimport ProgressBar from \"./pages/ProgressBar\";\r\nimport Loading from \"./pages/Loading\";\r\nconst Home = React.lazy(() => import(\"./pages/Home\"));\r\nconst AnimeDetail = React.lazy(() => import(\"./pages/AnimeDetail\"));\r\nconst AnimeFilter = React.lazy(() => import(\"./pages/AnimeFilter\"));\r\nconst Error404 = React.lazy(() => import(\"./pages/Error404\"));\r\n\r\nfunction App() {\r\n  const client = useApolloClient();\r\n  client.writeQuery({\r\n    query: gql`\r\n      query WriteIsLoading {\r\n        loadingbar {\r\n          isLoading\r\n        }\r\n      }\r\n    `,\r\n    data: {\r\n      // Contains the data to write\r\n      loadingbar: {\r\n        __typename: \"LoadingBar\",\r\n        isLoading: 0,\r\n      },\r\n    },\r\n  });\r\n\r\n  //// jsx\r\n  return (\r\n    <div className=\"app all-grid-container\">\r\n      <ProgressBar />\r\n      <header className=\"all-nav\">\r\n        <Header />\r\n      </header>\r\n      <ScrollToTop />\r\n      <main className=\"all-main\">\r\n        <Suspense fallback={<Loading />}>\r\n          <Switch>\r\n            <Route path={[\"/\", \"/wikianime\"]} exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path={\"/anime/:animeID\"}>\r\n              <AnimeDetail />\r\n            </Route>\r\n            <Route path={\"/search/\"}>\r\n              <AnimeFilter />\r\n            </Route>\r\n            <Route path={\"/anime/:animeID/character/:charID/actor/:actorID\"}>\r\n              <AnimeDetail />\r\n            </Route>\r\n            <Route path=\"*\">\r\n              <Error404 />\r\n            </Route>\r\n          </Switch>\r\n        </Suspense>\r\n      </main>\r\n      <footer className=\"all-footer\">\r\n        <Footer />\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/tailwind.output.css\";\r\nimport App from \"./App\";\r\nimport { ApolloClient, InMemoryCache } from \"@apollo/client\";\r\nimport { ApolloProvider } from \"@apollo/client/react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"https://graphql.anilist.co\",\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </ApolloProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n//\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}