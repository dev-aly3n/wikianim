{"version":3,"sources":["components/homePage/Top.js","components/homePage/TopList.js","pages/AnimeFilter.js","components/detailPage/CircleRate.js"],"names":["Top","anime","rank","history","useHistory","client","useApolloClient","description","substring","className","motion","a","href","id","onClick","e","preventDefault","writeQuery","query","gql","data","loadingbar","__typename","isLoading","setTimeout","push","animate","opacity","transition","duration","initial","loading","width","height","alt","src","coverImage","large","style","backgroundColor","color","title","english","romaji","format","toLowerCase","source","status","season","seasonYear","tags","filter","_","index","map","tag","name","content","CircleRate","size","rate","averageScore","popularity","toFixed","symbol","faHeart","TopList","allAnimeData","initialQuantity","keyParam","useState","stream","showMore","setShowMore","counterAnime","trimedAllAnimeData","anim","undefined","node","includes","div","animeData","length","target","display","AnimeFilter","searchBoxRef","useRef","searchValue","setSearchValue","setIsLoading","searchData","path","location","pathname","split","useEffect","searchTimer","getSearchAnime","variables","search","clearTimeout","useLazyQuery","filterQuery","error","errMsg","message","media","onSubmit","icon","faSearch","current","focus","ref","type","value","placeholder","onChange","p","delay","grad","bg","backgroundImage","borderRadius","right","top","transform"],"mappings":"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","file":"static/js/7.74795131.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CircleRate from \"../detailPage/CircleRate\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Markup } from \"interweave\";\r\nimport { useApolloClient, gql } from \"@apollo/client\";\r\n\r\nconst Top = ({ anime, rank }) => {\r\n  const history = useHistory();\r\n  const client = useApolloClient();\r\n\r\n  const animeCardClickHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    client.writeQuery({\r\n      query: gql`\r\n        query WriteIsLoading {\r\n          loadingbar {\r\n            isLoading\r\n          }\r\n        }\r\n      `,\r\n      data: {\r\n        // Contains the data to write\r\n        loadingbar: {\r\n          __typename: \"LoadingBar\",\r\n          isLoading: 30,\r\n        },\r\n      },\r\n    });\r\n\r\n    setTimeout(() => {\r\n      history.push(`/anime/${anime.id}`);\r\n    }, 500);\r\n  };\r\n\r\n  let description = anime.description;\r\n  description = description.substring(0, 300);\r\n\r\n  return (\r\n    <div className=\"top-container group\">\r\n      <motion.a\r\n        href={`/anime/${anime.id}`}\r\n        onClick={animeCardClickHandler}\r\n        animate={{ opacity: 1, transition: { duration: 1 } }}\r\n        initial={{ opacity: 0 }}\r\n      >\r\n        <img loading=\"lazy\" width={96} height={160} alt=\"\" src={anime.coverImage.large} style={{backgroundColor:anime.coverImage.color}} />\r\n\r\n        <div className=\"top-info-container\">\r\n          <div className=\"top-status\">\r\n            <h3>\r\n              {anime.title.english ? anime.title.english : anime.title.romaji}\r\n            </h3>\r\n            <div className=\"top-information\">\r\n              {anime.format && <p>{anime.format.toLowerCase()}</p>}\r\n              {anime.source && <p>{anime.source.toLowerCase()}</p>}\r\n              {anime.status && <p>{anime.status.toLowerCase()}</p>}\r\n              <p>\r\n                {anime.season ? anime.season.toLowerCase() : \"\"}{\" \"}\r\n                {anime.seasonYear ? anime.seasonYear : \"\"}\r\n              </p>\r\n            </div>\r\n            <div className=\"top-tag-container\">\r\n              {anime.tags\r\n                .filter((_, index) => index<=3)\r\n                .map((tag) => {\r\n                  return <span key={tag.name}>{tag.name}</span>;\r\n                })}\r\n            </div>\r\n          </div>\r\n          <div className=\"top-desc\">\r\n            <Markup content={description} />\r\n          </div>\r\n\r\n          <div className=\"top-rate-score transform translate-x-4 -translate-y-4 group-hover:translate-y-0.5 group-hover:-translate-x-0.5\">\r\n            <CircleRate size={4} rate={anime.averageScore} />\r\n          </div>\r\n          <div\r\n            className=\"top-rate-popularity transform translate-x-4 translate-y-4 \r\n    group-hover:-translate-y-0.5 group-hover:-translate-x-0.5\"\r\n          >\r\n            <div className=\"relative\">\r\n              <CircleRate\r\n                size={4}\r\n                rate={((anime.popularity / 300000) * 100).toFixed(0)}\r\n                symbol={faHeart}\r\n              />\r\n              <p className=\"top-rate-pop-text\">popularity</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </motion.a>\r\n      <span>{rank}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Top;\r\n","import React, { useState } from \"react\";\r\nimport Top from \"./Top\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst TopList = ({ allAnimeData, initialQuantity, keyParam }) => {\r\n  const [showMore, setShowMore] = useState({\r\n    stream: initialQuantity,\r\n  });\r\n\r\n  const streamShowMoreHandler = (e) => {\r\n    if (showMore.stream > 30) {\r\n      setShowMore({ ...showMore, stream: showMore.stream + 999 });\r\n      e.target.style.display = \"none\";\r\n    } else {\r\n      setShowMore({ ...showMore, stream: showMore.stream + 10 });\r\n    }\r\n    if (showMore.stream + 10 >= allAnimeData.length) {\r\n      e.target.style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  // maintain the array for duplicate elements\r\n  let counterAnime = [];\r\n  let trimedAllAnimeData = allAnimeData.filter((anime) => {\r\n    let anim = anime.id !== undefined ? anime : anime.node;\r\n    if (!counterAnime.includes(anim.id)) {\r\n      counterAnime.push(anim.id);\r\n      if (anime !== undefined) {\r\n        return anime;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  return (\r\n    <motion.div className=\"top-list-container\">\r\n      <div className=\"anime-list-container\">\r\n        <motion.div className=\"anime-list\">\r\n          {trimedAllAnimeData\r\n            .filter((_, index) => index <= showMore.stream - 1)\r\n            .map((anime, index) => {\r\n              //check where the data come from node or media\r\n              const animeData = anime.id !== undefined ? anime : anime.node;\r\n              return (\r\n                <Top\r\n                  key={`${keyParam}-${animeData.id}`}\r\n                  anime={animeData}\r\n                  rank={index + 1}\r\n                />\r\n              );\r\n            })}\r\n        </motion.div>\r\n      </div>\r\n      {allAnimeData.length > initialQuantity && (\r\n        <button\r\n          onClick={streamShowMoreHandler}\r\n          className=\"stream-show-more-btn \"\r\n        >\r\n          Load More\r\n        </button>\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\nexport default TopList;\r\n","import { useApolloClient, gql } from \"@apollo/client\";\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { filterQuery } from \"../utils/queries\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport TopList from \"../components/homePage/TopList\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Errors from './Errors';\r\n\r\nconst AnimeFilter = () => {\r\n  const client = useApolloClient();\r\n  client.writeQuery({\r\n    query: gql`\r\n      query WriteIsLoading {\r\n        loadingbar {\r\n          isLoading\r\n        }\r\n      }\r\n    `,\r\n    data: {\r\n      // Contains the data to write\r\n      loadingbar: {\r\n        __typename: \"LoadingBar\",\r\n        isLoading: 80,\r\n      },\r\n    },\r\n  });\r\n\r\n  const history = useHistory();\r\n  const searchBoxRef = useRef(null);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  let searchData = [];\r\n  let path = history.location.pathname;\r\n  path = path.split(\"/search/\")[1];\r\n\r\n  const searchChangeHandler = (e) => {\r\n    history.push(`/search/${e.target.value}`);\r\n    let path = history.location.pathname;\r\n    path = path.split(\"/search/\")[1];\r\n    setSearchValue(path);\r\n  };\r\n\r\n  const searchSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const searchTimer = setTimeout(() => {\r\n      getSearchAnime({ variables: { search: searchValue } });\r\n      setIsLoading(false);\r\n    }, 700);\r\n    return () => {\r\n      clearTimeout(searchTimer);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [searchValue]);\r\n\r\n  useEffect(() => {\r\n    if (path === \"\") {\r\n      // eslint-disable-next-line\r\n      path = \"attack on titan\";\r\n    }\r\n    setTimeout(() => {\r\n      setIsLoading(true);\r\n    }, 800);\r\n    setTimeout(() => {\r\n      getSearchAnime({ variables: { search: path } });\r\n\r\n      setIsLoading(false);\r\n    }, 1500);\r\n    \r\n  }, []);\r\n\r\n  const [getSearchAnime, { error, data }] = useLazyQuery(filterQuery);\r\n\r\n  if (error) {\r\n    return <Errors errMsg={error.message} />;\r\n  }\r\n\r\n  if (data) {\r\n    searchData = data.filter.media;\r\n  }\r\n\r\n  return (\r\n    <div className=\"anime-filter-container\">\r\n      <div className=\"anime-filter-form\">\r\n        <form onSubmit={searchSubmitHandler}>\r\n          <span>\r\n            <FontAwesomeIcon\r\n              className=\"text-white\"\r\n              icon={faSearch}\r\n              onClick={() => searchBoxRef.current.focus()}\r\n            />\r\n          </span>\r\n          <input\r\n            ref={searchBoxRef}\r\n            type=\"text\"\r\n            value={path}\r\n            placeholder={\"Search...\"}\r\n            onChange={searchChangeHandler}\r\n          />\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"filter-result-container\">\r\n        <div>\r\n          {searchData.length === 0 && (\r\n            <div>\r\n              {searchValue === \"\" ? (\r\n                \"\"\r\n              ) : isLoading ? (\r\n                \"\"\r\n              ) : (\r\n                <motion.p\r\n                  animate={{\r\n                    opacity: 1,\r\n                    transition: { duration: 0.1, delay: 2 },\r\n                  }}\r\n                  initial={{ opacity: 0 }}\r\n                >\r\n                  Sorry! We couldn't find what looking for! <br />\r\n                  Try another one!\r\n                </motion.p>\r\n              )}\r\n            </div>\r\n          )}\r\n          {isLoading && <div className=\" lds-dual-ring\"></div>}\r\n          {!isLoading && (\r\n            <div className=\"filter-anime-top-list-container\">\r\n              <TopList\r\n                allAnimeData={searchData}\r\n                initialQuantity={8}\r\n                keyParam={\"top100\"}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnimeFilter;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst CircleRate = ({ rate, symbol, size }) => {\r\n  let grad, bg;\r\n  if (rate === null) {\r\n    rate = 0;\r\n  }\r\n  if (rate <= 25) {\r\n    bg = \"bg-red-500\";\r\n    grad = `linear-gradient(${\r\n      (rate / 100) * 360 + 90\r\n    }deg, transparent 50%, rgb(212, 212, 212) 50%), linear-gradient(90deg, rgb(212, 212, 212) 50%, transparent 50%)`;\r\n  } else if (rate < 50) {\r\n    bg = \"bg-yellow-500\";\r\n    grad = `linear-gradient(${\r\n      (rate / 100) * 360 + 90\r\n    }deg, transparent 50%, rgb(212, 212, 212) 50%), linear-gradient(90deg, rgb(212, 212, 212) 50%, transparent 50%)`;\r\n  } else if (rate === 50) {\r\n    bg = \"bg-yellow-300\";\r\n    grad = `linear-gradient(90deg, rgb(212, 212, 212) 50%, transparent 50%)`;\r\n  } else if (rate >= 100) {\r\n    rate = 100;\r\n    bg = \"bg-green-600\";\r\n    grad = \"none\";\r\n  } else if (rate <= 75) {\r\n    bg = \"bg-green-300\";\r\n    grad = `linear-gradient(${\r\n      ((rate - 50) / 100) * 360 + 90\r\n    }deg, transparent 50%, rgba(110,231,183,1) 50%), linear-gradient(90deg, rgb(212, 212, 212) 50%, transparent 50%)`;\r\n  } else {\r\n    bg = \"bg-green-500\";\r\n    grad = `linear-gradient(${\r\n      ((rate - 50) / 100) * 360 + 90\r\n    }deg, transparent 50%, rgba(16,185,129,1) 50%), linear-gradient(90deg, rgb(212, 212, 212) 50%, transparent 50%)`;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: grad,\r\n        width: `${size}rem`,\r\n        height: `${size}rem`,\r\n        borderRadius: \"50%\",\r\n      }}\r\n      className={`${bg} circle-rate-container group group-hover:animate-reversecycler`}\r\n    >\r\n      <div\r\n        className=\"group-hover:animate-cycler\"\r\n        style={{\r\n          width: `${size - 1}rem`,\r\n          height: `${size - 1}rem`,\r\n          borderRadius: \"50%\",\r\n        }}\r\n      >\r\n        {symbol ? (\r\n          <div className=\"rate-symbol\">\r\n            <FontAwesomeIcon\r\n              icon={symbol}\r\n              className={`${\r\n                size === 5 ? \"text-6xl\" : size === 4 ? \"text-5xl \" : \"\"\r\n              } text-red-500`}\r\n            />\r\n            <div\r\n              className={`${\r\n                size === 5 ? \"text-lg\" : size === 4 ? \"text-sm\" : \"\"\r\n              } text-white absolute`}\r\n              style={{\r\n                right: \"50%\",\r\n                top: \"50%\",\r\n                transform: \"translate(50%, -50%)\",\r\n              }}\r\n            >\r\n              {rate}%\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <span className=\"score-num\">\r\n            <span>score</span>\r\n            <span\r\n              className={`${\r\n                size === 5 ? \"text-2xl\" : size === 4 ? \"text-base\" : \"\"\r\n              }`}\r\n            >\r\n              {rate}%\r\n            </span>\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CircleRate;\r\n"],"sourceRoot":""}