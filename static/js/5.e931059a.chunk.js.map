{"version":3,"sources":["components/detailPage/Stream.js","components/detailPage/StreamList.js","components/detailPage/Popularity.js","components/detailPage/ExternalLinks.js","components/detailPage/Rank.js","components/detailPage/Trailer.js","components/detailPage/Character.js","components/detailPage/CharacterList.js","pages/CharacterDetail.js","components/detailPage/Review.js","components/detailPage/ReviewList.js","pages/AnimeDetail.js","components/detailPage/CircleRate.js","utils/helpers.js","components/detailPage/Recom.js","components/Anime.js","components/AnimeList.js","components/detailPage/RecomList.js"],"names":["Stream","episode","motion","a","href","url","target","rel","className","animate","opacity","transition","duration","initial","loading","height","alt","src","thumbnail","title","StreamList","allEpisode","colsInRow","initialQuantity","keyParam","useState","stream","showMore","setShowMore","gridColsTemp","div","filter","_","index","map","length","onClick","e","remove","Popularity","popularityRange","popularity","toFixed","style","left","icon","faFire","ExternalLinks","bg","link","site","Rank","bgRank","bgBorder","rankRound","rank","context","includes","allTime","year","season","toLowerCase","Trailer","embedId","width","frameBorder","allow","allowFullScreen","Character","charID","staffID","char","animeID","mangaStaffID","client","useApolloClient","linkRef","useRef","node","id","undefined","voiceActors","useEffect","current","addEventListener","charClickHandler","writeQuery","query","gql","data","loadingbar","__typename","isLoading","ref","to","image","medium","fontSize","name","full","role","languageV2","unKnownPng","CharacterList","characters","CharacterDetail","characterID","actorID","staffContentShowLess","charContentShowLess","history","useHistory","useQuery","charQuery","variables","char_id","staff_id","error","Errors","errMsg","message","character","staff","Staff","charAnimeList","media","edges","staffAnimeList","staffMedia","charFavouritesRange","favourites","actorFavouritesRange","showMoreLessBtn","document","body","overflow","classList","contains","parentElement","push","faTimesCircle","large","CircleRate","rate","symbol","faHeart","size","age","dateOfBirth","day","monthNames","month","gender","description","content","AnimeList","allAnimeData","Review","review","reviewText","replace","test","decode","replaceAll","reviewContentShowLess","date","Date","createdAt","getFullYear","getMonth","getDay","rating","user","avatar","score","ratingAmount","summary","ReviewList","allReviewData","display","AnimeDetail","params","useParams","Number","useLocation","pathname","split","isCharacterPage","selectAnimeQuery","detailQuery","Loading","aData","Media","english","romaji","startDate","endDate","banner","bannerImage","coverImage","animeColor30","hexToRgbA","color","externalLinks","genres","rankings","relations","reviews","streamingEpisodes","studios","tags","nextAiringEpisode","favouritesRange","isOneDate","Fragment","backgroundImage","backgroundColor","borderColor","format","seasonYear","episodes","secondsToDhms","volumes","chapters","gen","faClock","timeUntilAiring","isMain","st","source","meanScore","trailer","tag","RecomList","grad","borderRadius","right","top","transform","hex","c","substring","join","seconds","dhms","d","Math","floor","h","m","s","dDisplay","hDisplay","mDisplay","refElement","extraClassName","setTimeout","firstElementChild","offsetHeight","position","showMoreBtn","createElement","textContent","lastElementChild","after","Recom","recom","widthParam","recMedia","mediaRecommendation","draggable","preventDefault","status","faThumbsDown","faThumbsUp","Anime","anime","averageScore","counterAnime","trimedAllAnimeData","anim","animeData","allRecom","isSmallDevice","documentElement","clientWidth","magicNum1","magicNum2","rightLeftScroll","wastefulCover","recommend","allRecomData","recomListQuery","recommendations","startx","scrollLeft","isDown","onTouchEnd","recLeft","scrollWidth","round","scrollTo","behavior","onMouseDown","pageX","offsetLeft","onMouseLeave","onMouseUp","onMouseMove","walk","slice","recWidth","faChevronCircleRight","newRecommend"],"mappings":"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","file":"static/js/5.e931059a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst Stream = ({ episode }) => {\r\n  return (\r\n    <motion.a\r\n      href={episode.url}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n      className=\"anime-card-container hover-card-num-1\"\r\n      animate={{ opacity: 1, transition: { duration: 2 } }}\r\n      initial={{ opacity: 0 }}\r\n    >\r\n      <img loading=\"lazy\" height={224} alt=\"\" src={episode.thumbnail} />\r\n      <h3 className=\"text-sm line-clamp-2 px-2\">{episode.title}</h3>\r\n    </motion.a>\r\n  );\r\n};\r\n\r\nexport default Stream;\r\n","import React, { useState } from \"react\";\r\nimport Stream from \"./Stream\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst StreamList = ({ allEpisode, colsInRow, initialQuantity, keyParam }) => {\r\n  const [showMore, setShowMore] = useState({\r\n    stream: initialQuantity,\r\n  });\r\n\r\n  let gridColsTemp = `grid-cols-2 ssm:grid-cols-${colsInRow - 1} lg:grid-cols-${\r\n    colsInRow - 1\r\n  } xl:grid-cols-${colsInRow}`;\r\n\r\n  const streamShowMoreHandler = (e) => {\r\n    if (showMore.stream > 20) {\r\n      setShowMore({ stream: showMore.stream + 999 });\r\n      e.target.remove();\r\n    } else {\r\n      setShowMore({ stream: showMore.stream + 10 });\r\n    }\r\n    if (showMore.stream + 10 >= allEpisode.length) {\r\n      e.target.remove();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div className=\"pb-10\">\r\n      <div className=\"anime-list-container\">\r\n        <div className={`anime-list ${gridColsTemp}`}>\r\n          {allEpisode\r\n            .filter((_, index) => index <= showMore.stream - 1)\r\n            .map((episode) => {\r\n              return (\r\n                <Stream\r\n                  key={`${keyParam}-${episode.title}`}\r\n                  episode={episode}\r\n                />\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n      {allEpisode.length > initialQuantity && (\r\n        <button\r\n          onClick={streamShowMoreHandler}\r\n          className=\"stream-show-more-btn \"\r\n        >\r\n          Load More\r\n        </button>\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\nexport default StreamList;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFire } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Popularity = ({ popularity }) => {\r\n  let popularityRange = 100 - ((popularity / 400000) * 100).toFixed(0);\r\n  if (popularityRange > 94) {\r\n    popularityRange = 94;\r\n  }\r\n  if (popularityRange < 0) {\r\n    popularityRange = 0;\r\n  }\r\n\r\n  return (\r\n    <div className=\"popularity-container\">\r\n      <div>\r\n        <div style={{ left: -popularityRange + \"%\" }}></div>\r\n      </div>\r\n      <FontAwesomeIcon\r\n        style={{ left: 94.8 - popularityRange + \"%\" }}\r\n        className=\"font-icon-pop\"\r\n        icon={faFire}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popularity;\r\n","const ExternalLinks = ({ link }) => {\r\n  let bg;\r\n  switch (link.site) {\r\n    case \"Twitter\":\r\n    case \"Hulu\":\r\n    case \"Funimation\":\r\n      bg = \"blue\";\r\n      break;\r\n    case \"Official Site\":\r\n      bg = \"green\";\r\n      break;\r\n    case \"Youtube\":\r\n    case \"Tubi TV\":\r\n    case \"Netflix\":\r\n      bg = \"red\";\r\n      break;\r\n    case \"Crunchyroll\":\r\n    case \"VRV\":\r\n      bg = \"purple\";\r\n      break;\r\n    case \"AnimeLab\":\r\n    case \"Amazon\":\r\n      bg = \"yellow\";\r\n      break;\r\n    default:\r\n      bg = \"gray\";\r\n  }\r\n\r\n  return (\r\n    <li>\r\n      <a\r\n        className={`external-link  bg-${bg}-300\r\n               hover:bg-${bg}-500 active:bg-${bg}-600`}\r\n        href={link.url}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        {link.site}\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExternalLinks;\r\n","const Rank = ({ rank }) => {\r\n  let bgRank, bgBorder, rankRound;\r\n  if (rank.context.includes(\"most popular\")) {\r\n    bgRank = \"bg-green-200\";\r\n    bgBorder = \"border-green-600\";\r\n    rankRound = \"bg-green-400\";\r\n  } else {\r\n    bgRank = \"bg-yellow-200\";\r\n    bgBorder = \"border-yellow-600\";\r\n    rankRound = \"bg-yellow-400\";\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={`rank ${bgRank} ${\r\n        rank.allTime ? `border-r-4 border-l-4 ${bgBorder} ` : \"\"\r\n      } min-w-max rounded-2xl pr-3 py-1  my-1 overflow-hidden`}\r\n    >\r\n      <span className={`${rankRound} pr-1 py-7 pl-7 font-semibold -ml-6`}>\r\n        #{rank.rank}\r\n      </span>\r\n      {\" \" + rank.context}\r\n      <span\r\n        className={`bg-gray-200 ${\r\n          rank.year ? \"p-1\" : \"\"\r\n        } text-gray-800 rounded-xl text-xs font-bold float-right`}\r\n      >\r\n        {rank.year\r\n          ? `${rank.season ? rank.season.toLowerCase() : \"\"} ${rank.year}`\r\n          : \"\"}\r\n      </span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Rank;\r\n","\r\nconst Trailer = ({ embedId }) => (\r\n  <div className=\"video-responsive\">\r\n    <iframe\r\n    loading=\"lazy\"\r\n      width={853}\r\n      height={480}\r\n      src={`https://www.youtube.com/embed/${embedId}`}\r\n      frameBorder=\"0\"\r\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n      allowFullScreen\r\n      title=\"Embedded youtube\"\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default Trailer;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { unKnownPng } from \"../../utils/helpers\";\r\nimport { useApolloClient, gql } from \"@apollo/client\";\r\n\r\nconst Character = ({ char, animeID, mangaStaffID }) => {\r\n  const client = useApolloClient();\r\n  const linkRef = useRef(null);\r\n  let charID, staffID;\r\n  charID = char.node.id;\r\n  if (char.voiceActors[0] === undefined) {\r\n    staffID = mangaStaffID;\r\n  } else {\r\n    staffID = char.voiceActors[0].id;\r\n  }\r\n\r\n  useEffect(() => {\r\n    linkRef.current.addEventListener(\"click\", charClickHandler);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const charClickHandler = () => {\r\n    client.writeQuery({\r\n      query: gql`\r\n        query WriteIsLoading {\r\n          loadingbar {\r\n            isLoading\r\n          }\r\n        }\r\n      `,\r\n      data: {\r\n        // Contains the data to write\r\n        loadingbar: {\r\n          __typename: \"LoadingBar\",\r\n          isLoading: 30,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Link\r\n      ref={linkRef}\r\n      to={`/anime/${animeID}/character/${charID}/actor/${staffID}`}\r\n      className=\"char-container\"\r\n    >\r\n      <div className=\"char-image\">\r\n        <img\r\n          loading=\"lazy\"\r\n          width={64}\r\n          height={64}\r\n          src={char.node.image.medium}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div className=\"char-staff-info\" style={{ fontSize: \"9px\" }}>\r\n        <div className=\"char-name\">\r\n          <span>{char.node.name.full}</span>\r\n          <span>\r\n            {staffID !== mangaStaffID ? char.voiceActors[0].name.full : \"\"}\r\n          </span>\r\n        </div>\r\n        <div className=\"char-role\">\r\n          <span>{char.role.toLowerCase()}</span>\r\n          <span>\r\n            {staffID !== mangaStaffID ? char.voiceActors[0].languageV2 : \"\"}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"staff-image\">\r\n        <img\r\n          loading=\"lazy\"\r\n          width={64}\r\n          height={64}\r\n          src={\r\n            staffID !== mangaStaffID\r\n              ? char.voiceActors[0].image.medium\r\n              : unKnownPng\r\n          }\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Character;\r\n","import React, { useState } from \"react\";\r\nimport Character from \"./Character\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst CharacterList = ({ characters, animeID, mangaStaffID }) => {\r\n  const [showMore, setShowMore] = useState({\r\n    stream: 5,\r\n  });\r\n\r\n  const streamShowMoreHandler = (e) => {\r\n    if (showMore.stream > 20) {\r\n      setShowMore({ stream: showMore.stream + 999 });\r\n      e.target.remove();\r\n    } else {\r\n      setShowMore({ stream: showMore.stream + 10 });\r\n    }\r\n    if (showMore.stream + 10 >= characters.length) {\r\n      e.target.remove();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"char-list-container\">\r\n      <motion.div>\r\n        {characters\r\n          .filter((_, index) => index < showMore.stream)\r\n          .map((char) => {\r\n            return (\r\n              <Character\r\n                key={char.node.id}\r\n                char={char}\r\n                animeID={animeID}\r\n                mangaStaffID={mangaStaffID}\r\n              />\r\n            );\r\n          })}\r\n      </motion.div>\r\n      {characters.length > 4 && (\r\n        <button\r\n          onClick={streamShowMoreHandler}\r\n          className=\"stream-show-more-btn\"\r\n        >\r\n          Load More\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default CharacterList;\r\n","import { useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { charQuery } from \"../utils/queries\";\r\nimport { Markup } from \"interweave\";\r\nimport AnimeList from \"../components/AnimeList\";\r\nimport { showMoreLessBtn, unKnownPng, monthNames } from \"../utils/helpers\";\r\nimport { faTimesCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport CircleRate from \"../components/detailPage/CircleRate\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Errors from './Errors';\r\n\r\nconst CharacterDetail = ({ animeID, characterID, actorID }) => {\r\n  const staffContentShowLess = useRef(null);\r\n  const charContentShowLess = useRef(null);\r\n  //if character hasn't any actor\r\n\r\n  const history = useHistory();\r\n  const modalCloseHandler = (e) => {\r\n    if (\r\n      e.target.classList.contains(\"character-page-shadow\") ||\r\n      e.target.classList.contains(\"modal-close\") ||\r\n      e.target.parentElement.classList.contains(\"modal-close\")\r\n    ) {\r\n      //managing 2 scrollbar\r\n      document.body.style.overflow = \"auto\";\r\n      history.push(`/anime/${animeID}`);\r\n    }\r\n  };\r\n\r\n  const { loading, error, data } = useQuery(charQuery, {\r\n    variables: {\r\n      char_id: characterID,\r\n      staff_id: actorID,\r\n    },\r\n  });\r\n\r\n  if (loading) {\r\n    return null;\r\n  }\r\n\r\n  if (error) {\r\n    return <Errors errMsg={error.message} /> ;\r\n  }\r\n  const character = data.Character;\r\n  const staff = data.Staff;\r\n  const charAnimeList = character.media.edges;\r\n  const staffAnimeList = staff.staffMedia.edges;\r\n\r\n  let charFavouritesRange = ((character.favourites / 30000) * 100).toFixed(0);\r\n  let actorFavouritesRange = ((staff.favourites / 10000) * 100).toFixed(0);\r\n\r\n\r\n  // staff description\r\n  showMoreLessBtn(\r\n    staffContentShowLess,\r\n    \"show-more-btn staff-show-more-desc-btn\",\r\n    250\r\n  );\r\n\r\n  //character desciption\r\n  showMoreLessBtn(\r\n    charContentShowLess,\r\n    \"show-more-btn character-show-more-desc-btn\",\r\n    250\r\n  );\r\n\r\n  //managing 2 scrollbar\r\n  document.body.style.overflow = \"hidden\";\r\n\r\n  return (\r\n    <div className=\"character-page-shadow\" onClick={modalCloseHandler}>\r\n      <div className=\"character-page-container\">\r\n        <span className=\"modal-close \">\r\n          <FontAwesomeIcon className=\"fixed modal-close\" icon={faTimesCircle} />\r\n        </span>\r\n\r\n        <div className=\"character-info\">\r\n          <div>\r\n            <div className=\"character-image\">\r\n              <img alt=\"\"\r\n                src={character.image.large ? character.image.large : unKnownPng}\r\n              />\r\n              <div>\r\n                <CircleRate\r\n                  rate={charFavouritesRange}\r\n                  symbol={faHeart}\r\n                  size={5}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"character-desc\">\r\n              <h1>\r\n                <strong> Name:</strong> <br />\r\n                {character.name.full}\r\n              </h1>\r\n              {character.age && (\r\n                <p>\r\n                  <strong>Age:</strong>\r\n                  <br />\r\n                  {character.age} years\r\n                </p>\r\n              )}\r\n              {character.dateOfBirth.day && (\r\n                <p>\r\n                  <strong>Date of Birth:</strong>\r\n                  <br />\r\n                  {character.dateOfBirth.day}{\" \"}\r\n                  {monthNames[character.dateOfBirth.month - 1]}\r\n                </p>\r\n              )}\r\n              {character.gender && (\r\n                <p>\r\n                  <strong>Gender:</strong>\r\n                  <br />\r\n                  {character.gender}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            {character.description && (\r\n              <div\r\n                className=\"description-character-markup\"\r\n                ref={charContentShowLess}\r\n              >\r\n                <Markup content={character.description} />\r\n              </div>\r\n            )}\r\n            {charAnimeList[0] && (\r\n              <div className=\"character-media-list\">\r\n                <h3>Character media</h3>\r\n                {\r\n                  <AnimeList\r\n                    allAnimeData={charAnimeList}\r\n                    colsInRow={3}\r\n                    initialQuantity={3}\r\n                    keyParam={\"charMedia\"}\r\n                  />\r\n                }\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"staff-info\">\r\n          <div>\r\n            <div className=\"staff-desc\">\r\n              <h1>\r\n                <strong> Name:</strong> <br />\r\n                {staff.name.full}\r\n              </h1>\r\n              {staff.age && (\r\n                <p>\r\n                  <strong>Age:</strong>\r\n                  <br />\r\n                  {staff.age} years\r\n                </p>\r\n              )}\r\n              {staff.dateOfBirth.day && (\r\n                <p>\r\n                  <strong>Date of Birth:</strong>\r\n                  <br />\r\n                  {staff.dateOfBirth.day}{\" \"}\r\n                  {monthNames[staff.dateOfBirth.month - 1]}\r\n                </p>\r\n              )}\r\n              {staff.gender && (\r\n                <p>\r\n                  <strong>Gender:</strong>\r\n                  <br />\r\n                  {staff.gender}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"staff-image\">\r\n              <img alt=\"\" src={staff.image.large ? staff.image.large : unKnownPng} />\r\n              <div>\r\n                <CircleRate\r\n                  rate={actorFavouritesRange}\r\n                  symbol={faHeart}\r\n                  size={5}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            {staff.description && (\r\n              <div\r\n                className=\"description-staff-markup\"\r\n                ref={staffContentShowLess}\r\n              >\r\n                <Markup content={staff.description} />\r\n              </div>\r\n            )}\r\n            {staffAnimeList[0] && (\r\n              <div className=\"staff-media-list\">\r\n                <h3>Staff media</h3>\r\n                {\r\n                  <AnimeList\r\n                    allAnimeData={staffAnimeList}\r\n                    colsInRow={3}\r\n                    initialQuantity={3}\r\n                    keyParam={\"staffMedia\"}\r\n                  />\r\n                }\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Markup } from \"interweave\";\r\nimport CircleRate from \"./CircleRate\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { showMoreLessBtn } from \"../../utils/helpers\";\r\nimport { decode } from \"html-entities\";\r\n\r\nconst Review = ({ review }) => {\r\n  let reviewText = review.body;\r\n\r\n  let reg1 = /\\[(.*?)\\]\\((.*?)\\)/g;\r\n  reviewText = reviewText.replace(reg1, \"<a href='$2'>$1</a>\");\r\n\r\n  let reg2 = /<pre>/;\r\n  if (reg2.test(reviewText)) {\r\n    reviewText = decode(reviewText);\r\n    reviewText = reviewText.replaceAll(/__|\\*|<\\/?code>|<\\/?pre>/g, \"\");\r\n  }\r\n\r\n  const reviewContentShowLess = useRef(null);\r\n\r\n  let date = new Date(review.createdAt * 1000);\r\n  let year = date.getFullYear();\r\n  let month = date.getMonth();\r\n  let day = date.getDay();\r\n  date = `${year}/${month}/${day}`;\r\n\r\n  useEffect(() => {\r\n    showMoreLessBtn(\r\n      reviewContentShowLess,\r\n      \"show-more-btn to-indigo-50 hover:bg-indigo-50 hover:bg-opacity-60\",\r\n      150\r\n    );\r\n  }, [reviewContentShowLess]);\r\n\r\n  let rate;\r\n  if (review.rating >= 100) {\r\n    rate = 100;\r\n  } else {\r\n    rate = review.rating;\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"review-card-container \"\r\n      animate={{ opacity: 1, transition: { duration: 2 } }}\r\n      initial={{ opacity: 0 }}\r\n    >\r\n      <div className=\"reviewer-container\">\r\n        <div>\r\n          <div className=\"review-user-info\">\r\n            <img loading=\"lazy\" width={80} height={80} alt=\"\" src={review.user.avatar.medium} />\r\n            <h4>{review.user.name}</h4>\r\n          </div>\r\n          <div className=\"review-rate\">\r\n            <div className=\"review-score\">\r\n              <CircleRate rate={review.score} size={4} />\r\n              <br />\r\n            </div>\r\n            <div className=\"review-popularity\">\r\n              <CircleRate rate={rate} symbol={faHeart} size={4} />\r\n\r\n              <p>this review</p>\r\n              <p>\r\n                <strong>{review.ratingAmount}</strong> rates\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"review-date\">\r\n          {date}\r\n        </div>\r\n      </div>\r\n      {review.body ? (\r\n        <div\r\n          className=\"description-character-markup review-body\"\r\n          ref={reviewContentShowLess}\r\n        >\r\n          <Markup content={reviewText} />\r\n        </div>\r\n      ) : (\r\n        <div className=\"description-character-markup review-summary\">\r\n          <Markup content={review.summary} />\r\n        </div>\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","import React, { useState } from \"react\";\r\nimport Review from \"./Review\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst ReviewList = ({ allReviewData, initialQuantity, keyParam }) => {\r\n  const [showMore, setShowMore] = useState({\r\n    review: initialQuantity,\r\n  });\r\n\r\n  const reviewShowMoreHandler = (e) => {\r\n    if (showMore.review > 100) {\r\n      setShowMore({ ...showMore, review: showMore.review + 999 });\r\n      e.target.style.display = \"none\";\r\n    } else {\r\n      setShowMore({ ...showMore, review: showMore.review + 3 });\r\n    }\r\n    if (showMore.review + 3 >= allReviewData.length) {\r\n      e.target.style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div className=\"review-list-container\">\r\n      <div className=\"anime-list-container\">\r\n        <div>\r\n          {allReviewData\r\n            .filter((_, index) => index <= showMore.review - 1)\r\n            .map((review) => {\r\n              return (\r\n                <Review\r\n                  key={`${keyParam}-${review.node.id}`}\r\n                  review={review.node}\r\n                />\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n\r\n      {allReviewData.length > initialQuantity && (\r\n        <button\r\n          onClick={reviewShowMoreHandler}\r\n          className=\"stream-show-more-btn\"\r\n        >\r\n          Load More\r\n        </button>\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\nexport default ReviewList;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { Markup } from \"interweave\";\r\nimport { hexToRgbA, secondsToDhms } from \"../utils/helpers\";\r\nimport AnimeList from \"../components/AnimeList\";\r\nimport StreamList from \"../components/detailPage/StreamList\";\r\nimport CircleRate from \"../components/detailPage/CircleRate\";\r\nimport Popularity from \"../components/detailPage/Popularity\";\r\nimport { faHeart, faClock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport ExternalLinks from \"../components/detailPage/ExternalLinks\";\r\nimport Rank from \"../components/detailPage/Rank\";\r\nimport { detailQuery } from \"../utils/queries\";\r\nimport Trailer from \"../components/detailPage/Trailer\";\r\nimport CharacterList from \"../components/detailPage/CharacterList\";\r\nimport CharacterDetail from \"./CharacterDetail\";\r\nimport ReviewList from \"../components/detailPage/ReviewList\";\r\nimport RecomList from \"../components/detailPage/RecomList\";\r\nimport { useApolloClient, gql } from \"@apollo/client\";\r\nimport Loading from \"./Loading\";\r\nimport Errors from './Errors';\r\n\r\nconst AnimeDetail = () => {\r\n  const client = useApolloClient();\r\n  client.writeQuery({\r\n    query: gql`\r\n      query WriteIsLoading {\r\n        loadingbar {\r\n          isLoading\r\n        }\r\n      }\r\n    `,\r\n    data: {\r\n      // Contains the data to write\r\n      loadingbar: {\r\n        __typename: \"LoadingBar\",\r\n        isLoading: 80,\r\n      },\r\n    },\r\n  });\r\n\r\n  document.body.style.overflow = \"auto\";\r\n\r\n  const params = useParams();\r\n  const id = Number(params.animeID);\r\n  const location = useLocation();\r\n  const charID = location.pathname.split(\"/\");\r\n  const isCharacterPage = charID[3] === \"character\";\r\n\r\n  const selectAnimeQuery = detailQuery;\r\n  const { loading, error, data } = useQuery(selectAnimeQuery, {\r\n    variables: {\r\n      id: id,\r\n    },\r\n  });\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  if (error) {\r\n    return <Errors errMsg={error.message} />\r\n  }\r\n\r\n  const aData = data.Media;\r\n  const title = aData.title.english ? aData.title.english : aData.title.romaji;\r\n  const description = aData.description;\r\n  const startDate = aData.startDate;\r\n  const endDate = aData.endDate;\r\n  const banner = aData.bannerImage;\r\n  const characters = aData.characters.edges;\r\n  const coverImage = aData.coverImage;\r\n  const animeColor30 = hexToRgbA(coverImage.color, 0.3);\r\n  const externalLinks = aData.externalLinks;\r\n  const genres = aData.genres;\r\n  const rankings = aData.rankings;\r\n  const relations = aData.relations.edges;\r\n  const reviews = aData.reviews.edges;\r\n  const streamingEpisodes = aData.streamingEpisodes;\r\n  const studios = aData.studios.edges;\r\n  const tags = aData.tags;\r\n  const nextAiringEpisode = aData.nextAiringEpisode;\r\n  let favouritesRange = ((aData.favourites / 30000) * 100).toFixed(0);\r\n  if (favouritesRange > 100) {\r\n    favouritesRange = 100;\r\n  }\r\n  if (favouritesRange < 1) {\r\n    favouritesRange = 1;\r\n  }\r\n  const popularity = aData.popularity;\r\n  const isOneDate =\r\n    endDate.year === startDate.year &&\r\n    endDate.month === startDate.month &&\r\n    endDate.day === startDate.day;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isCharacterPage && (\r\n        <CharacterDetail\r\n          animeID={charID[2]}\r\n          characterID={charID[4]}\r\n          actorID={charID[6]}\r\n        />\r\n      )}\r\n\r\n      <div className=\"detail-grid-container detail-page-container\">\r\n        <div className=\"d-header\" style={{ backgroundImage: `url(${banner})` }}>\r\n          <div className=\"banner-inside\">\r\n            <h1\r\n              className=\"detail-title\"\r\n              style={{ backgroundColor: `${animeColor30}` }}\r\n            >\r\n              {title}\r\n            </h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"d-sidebar\">\r\n          <img\r\n            alt=\"\"\r\n            className=\"detail-cover-image \"\r\n            style={{ borderColor: `${animeColor30}` , backgroundColor:coverImage.color}}\r\n            src={coverImage.large}\r\n          />\r\n          <h2>{title}</h2>\r\n          <div className=\"format-side-detail\">{aData.format}</div>\r\n          <div className=\"detail-side-info\">\r\n            {aData.season && aData.season.toLowerCase()}{\" \"}\r\n            {aData.seasonYear && aData.seasonYear}\r\n            {aData.episodes && ` | ${aData.episodes} Episodes `}\r\n            {aData.duration &&\r\n              ` | ${secondsToDhms(aData.duration * 60, \"dhm\")}`}\r\n            {aData.volumes && `${aData.volumes} Volumes | `}\r\n            {aData.chapters && `${aData.chapters} Chapters`}\r\n          </div>\r\n          <div className=\"detail-side-genres-container\">\r\n            {genres.map((gen) => {\r\n              return <div key={gen}>#{gen}</div>;\r\n            })}\r\n          </div>\r\n          <h4>Date</h4> <hr />\r\n          <div className=\"detail-side-date\">\r\n            <span>\r\n              {\" \"}\r\n              {`${startDate.year}${\r\n                startDate.month\r\n                  ? \"/\" + startDate.month + \"/\" + startDate.day\r\n                  : \"\"\r\n              }`}\r\n            </span>\r\n            {!isOneDate && <div>-</div>}\r\n            {!isOneDate && (\r\n              <span>\r\n                {endDate.year\r\n                  ? endDate.year +\r\n                    (endDate.month\r\n                      ? \"/\" + endDate.month + \"/\" + endDate.day\r\n                      : \"\")\r\n                  : \"Present\"}\r\n              </span>\r\n            )}\r\n          </div>\r\n          {nextAiringEpisode && (\r\n            <div className=\"detail-side-airing\">\r\n              <h4>Airing</h4> <hr />\r\n              <div>\r\n                Episode {nextAiringEpisode.episode}\r\n                <span>\r\n                  <FontAwesomeIcon icon={faClock} />{\" \"}\r\n                  {secondsToDhms(nextAiringEpisode.timeUntilAiring, \"dhm\")}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {popularity !== undefined && (\r\n            <div className=\"detail-side-pop\">\r\n              <h4>Popularity</h4>\r\n              <Popularity popularity={popularity} />\r\n            </div>\r\n          )}\r\n          {rankings[0] && (\r\n            <div className=\"d-ranking \">\r\n              <h4>Ranking</h4>\r\n              <hr />\r\n              <ul>\r\n                {rankings.map((rank) => {\r\n                  return <Rank key={rank.id} rank={rank} />;\r\n                })}\r\n              </ul>\r\n            </div>\r\n          )}\r\n          {studios[0] && (\r\n            <div>\r\n              <h4>Studios</h4>\r\n              <hr />\r\n              <div className=\"detail-side-studios\">\r\n                {studios\r\n                  .filter((e) => e.isMain)\r\n                  .map((st) => {\r\n                    return <span key={st.node.id}>{st.node.name}</span>;\r\n                  })}\r\n              </div>\r\n            </div>\r\n          )}\r\n          {studios[0] && (\r\n            <div className=\"detail-side-producers\">\r\n              <h4>Producers</h4>\r\n              <hr />\r\n              <div>\r\n                {studios\r\n                  .filter((e) => !e.isMain)\r\n                  .map((st) => {\r\n                    return <span key={st.node.id}>{st.node.name}</span>;\r\n                  })}\r\n              </div>\r\n            </div>\r\n          )}\r\n          {aData.source && (\r\n            <div>\r\n              <h4>Source</h4>\r\n              <hr />\r\n              <div className=\"detail-side-source\">{aData.source}</div>\r\n            </div>\r\n          )}\r\n          {characters[0] && (\r\n            <div>\r\n              <h4>Characters</h4>\r\n              <hr />\r\n              <CharacterList\r\n                characters={characters}\r\n                mangaStaffID={aData.staff.edges[0].node.id}\r\n                animeID={id}\r\n              />\r\n            </div>\r\n          )}\r\n          {externalLinks[0] && (\r\n            <div>\r\n              <h4>Links</h4>\r\n              <hr />\r\n              <ul>\r\n                {externalLinks.map((link) => {\r\n                  return <ExternalLinks key={link.id} link={link} />;\r\n                })}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"d-main\">\r\n          <div className=\"detail-main-score\">\r\n            <CircleRate rate={aData.meanScore} size={5} />\r\n          </div>\r\n          <div className=\"detail-main-fav\">\r\n            <CircleRate rate={favouritesRange} symbol={faHeart} size={5} />\r\n          </div>\r\n          <div className=\"detail-main-desc\">\r\n            <Markup content={description} />\r\n          </div>\r\n          <br />\r\n          <br />\r\n          {aData.trailer && <Trailer embedId={aData.trailer.id} />} <br />\r\n          <h4>tags:</h4>\r\n          <div className=\"detail-main-tag\">\r\n            {tags &&\r\n              tags\r\n                .filter((_, index) => index < 6)\r\n                .map((tag) => {\r\n                  return (\r\n                    <span key={tag.name}>\r\n                      <span>{tag.name}</span>\r\n                      <span>{tag.rank}%</span>\r\n                    </span>\r\n                  );\r\n                })}\r\n          </div>\r\n        </div>\r\n\r\n        {relations[0] && (\r\n          <div className=\"d-relate\">\r\n            <h4>Relations</h4>\r\n            <hr />\r\n            <AnimeList\r\n              allAnimeData={relations}\r\n              colsInRow={4}\r\n              initialQuantity={4}\r\n              keyParam={\"relate\"}\r\n            />\r\n          </div>\r\n        )}\r\n        <div className=\"d-watch \">\r\n          {streamingEpisodes[0] && (\r\n            <div className=\"detail-watch-stream\">\r\n              <h4>Stream Watch</h4>\r\n              <hr />\r\n              <StreamList\r\n                allEpisode={streamingEpisodes}\r\n                colsInRow={4}\r\n                initialQuantity={4}\r\n                keyParam={\"stream\"}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {reviews[0] && (\r\n            <div className=\"detail-watch-reviews\">\r\n              <h4>Reviews</h4>\r\n              <hr />\r\n              <ReviewList\r\n                allReviewData={reviews}\r\n                initialQuantity={2}\r\n                keyParam={\"review\"}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"d-recom\">\r\n          <RecomList animeID={id} keyParam={\"recom\"} initialQuantity={7} />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AnimeDetail;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst CircleRate = ({ rate, symbol, size }) => {\r\n  let grad, bg;\r\n  if (rate === null) {\r\n    rate = 0;\r\n  }\r\n  if (rate <= 25) {\r\n    bg = \"bg-red-500\";\r\n    grad = `linear-gradient(${\r\n      (rate / 100) * 360 + 90\r\n    }deg, transparent 50%, rgb(212, 212, 212) 50%), linear-gradient(90deg, rgb(212, 212, 212) 50%, transparent 50%)`;\r\n  } else if (rate < 50) {\r\n    bg = \"bg-yellow-500\";\r\n    grad = `linear-gradient(${\r\n      (rate / 100) * 360 + 90\r\n    }deg, transparent 50%, rgb(212, 212, 212) 50%), linear-gradient(90deg, rgb(212, 212, 212) 50%, transparent 50%)`;\r\n  } else if (rate === 50) {\r\n    bg = \"bg-yellow-300\";\r\n    grad = `linear-gradient(90deg, rgb(212, 212, 212) 50%, transparent 50%)`;\r\n  } else if (rate >= 100) {\r\n    rate = 100;\r\n    bg = \"bg-green-600\";\r\n    grad = \"none\";\r\n  } else if (rate <= 75) {\r\n    bg = \"bg-green-300\";\r\n    grad = `linear-gradient(${\r\n      ((rate - 50) / 100) * 360 + 90\r\n    }deg, transparent 50%, rgba(110,231,183,1) 50%), linear-gradient(90deg, rgb(212, 212, 212) 50%, transparent 50%)`;\r\n  } else {\r\n    bg = \"bg-green-500\";\r\n    grad = `linear-gradient(${\r\n      ((rate - 50) / 100) * 360 + 90\r\n    }deg, transparent 50%, rgba(16,185,129,1) 50%), linear-gradient(90deg, rgb(212, 212, 212) 50%, transparent 50%)`;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: grad,\r\n        width: `${size}rem`,\r\n        height: `${size}rem`,\r\n        borderRadius: \"50%\",\r\n      }}\r\n      className={`${bg} circle-rate-container group group-hover:animate-reversecycler`}\r\n    >\r\n      <div\r\n        className=\"group-hover:animate-cycler\"\r\n        style={{\r\n          width: `${size - 1}rem`,\r\n          height: `${size - 1}rem`,\r\n          borderRadius: \"50%\",\r\n        }}\r\n      >\r\n        {symbol ? (\r\n          <div className=\"rate-symbol\">\r\n            <FontAwesomeIcon\r\n              icon={symbol}\r\n              className={`${\r\n                size === 5 ? \"text-6xl\" : size === 4 ? \"text-5xl \" : \"\"\r\n              } text-red-500`}\r\n            />\r\n            <div\r\n              className={`${\r\n                size === 5 ? \"text-lg\" : size === 4 ? \"text-sm\" : \"\"\r\n              } text-white absolute`}\r\n              style={{\r\n                right: \"50%\",\r\n                top: \"50%\",\r\n                transform: \"translate(50%, -50%)\",\r\n              }}\r\n            >\r\n              {rate}%\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <span className=\"score-num\">\r\n            <span>score</span>\r\n            <span\r\n              className={`${\r\n                size === 5 ? \"text-2xl\" : size === 4 ? \"text-base\" : \"\"\r\n              }`}\r\n            >\r\n              {rate}%\r\n            </span>\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CircleRate;\r\n","// convert hex to rgba\r\nexport const hexToRgbA = (hex, opacity) => {\r\n  let c;\r\n  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\r\n    c = hex.substring(1).split(\"\");\r\n    if (c.length === 3) {\r\n      c = [c[0], c[0], c[1], c[1], c[2], c[2]];\r\n    }\r\n    c = \"0x\" + c.join(\"\");\r\n    return (\r\n      \"rgba(\" +\r\n      [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(\",\") +\r\n      `,${opacity})`\r\n    );\r\n  }\r\n  return \"rgba(0,0,0,0.2)\";\r\n};\r\n\r\nexport const secondsToDhms = (seconds, dhms) => {\r\n  seconds = Number(seconds);\r\n  let d = Math.floor(seconds / (3600 * 24));\r\n  let h = Math.floor((seconds % (3600 * 24)) / 3600);\r\n  let m = Math.floor((seconds % 3600) / 60);\r\n  let s = Math.floor(seconds % 60);\r\n  let dDisplay = d > 0 ? d + \"d \" : \"\";\r\n  let hDisplay = h > 0 ? h + \"h \" : \"\";\r\n  let mDisplay = m > 0 ? m + \"min \" : \"\";\r\n  let sDisplay = s > 0 ? s + \"s\" : \"\";\r\n  if (dhms === \"dhms\") {\r\n    return dDisplay + hDisplay + mDisplay + sDisplay;\r\n  } else if (dhms === \"dhm\") {\r\n    return dDisplay + hDisplay + mDisplay;\r\n  }\r\n};\r\n\r\nexport const showMoreLessBtn = (refElement, extraClassName, height) => {\r\n  return setTimeout(() => {\r\n    if (refElement.current) {\r\n      if (\r\n        refElement.current.firstElementChild.offsetHeight > `${height + 100}`\r\n      ) {\r\n        refElement.current.firstElementChild.style.height = `${height}px`;\r\n        refElement.current.firstElementChild.style.overflow = \"hidden\";\r\n        refElement.current.firstElementChild.style.position = \"relative\";\r\n        const showMoreBtn = document.createElement(\"button\");\r\n        showMoreBtn.className = extraClassName;\r\n        showMoreBtn.textContent = \"Show More\";\r\n        refElement.current.firstElementChild.lastElementChild.after(\r\n          showMoreBtn\r\n        );\r\n\r\n        showMoreBtn.addEventListener(\"click\", () => {\r\n          showMoreBtn.style.display = \"none\";\r\n          refElement.current.firstElementChild.style.height = \"100%\";\r\n        });\r\n      }\r\n    }\r\n  }, 100);\r\n};\r\n\r\nexport const unKnownPng =\r\n  \"https://png.pngitem.com/pimgs/s/52-526033_unknown-person-icon-png-transparent-png.png\";\r\n\r\n\r\n\r\n  export const monthNames = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n","import { Markup } from \"interweave\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { faThumbsUp, faThumbsDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useApolloClient, gql } from \"@apollo/client\";\r\n\r\nconst Recom = ({ recom, widthParam }) => {\r\n  const recMedia = recom.node ? recom.node.mediaRecommendation : recom.media;\r\n\r\n  const rating = recom.node ? recom.node.rating : recom.rating;\r\n\r\n  const history = useHistory();\r\n  const client = useApolloClient();\r\n\r\n  const animeCardClickHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    client.writeQuery({\r\n      query: gql`\r\n        query WriteIsLoading {\r\n          loadingbar {\r\n            isLoading\r\n          }\r\n        }\r\n      `,\r\n      data: {\r\n        // Contains the data to write\r\n        loadingbar: {\r\n          __typename: \"LoadingBar\",\r\n          isLoading: 30,\r\n        },\r\n      },\r\n    });\r\n\r\n    setTimeout(() => {\r\n      history.push(`/anime/${recMedia.id}`);\r\n    }, 500);\r\n  };\r\n  return (\r\n    <motion.a\r\n      draggable={true}\r\n      href={`/anime/${recMedia.id}`}\r\n      onClick={animeCardClickHandler}\r\n      className={` ${\r\n        widthParam ? \"w-full ssm:w-8/12 sm:w-11/12 my-3\" : \"w-60 mx-3\"\r\n      }  recom-container`}\r\n    >\r\n      <div className=\"recom-detail\">\r\n        <img loading=\"lazy\" width={160} height={224} alt=\"\" src={recMedia.coverImage.large} style={{backgroundColor:recMedia.coverImage.color}} />\r\n        <div className=\"recom-info\">\r\n          <p className=\"line-clamp-4\">\r\n            <b>Title:</b>\r\n            <br />{\" \"}\r\n            {recMedia.title.english\r\n              ? recMedia.title.english\r\n              : recMedia.title.romaji}\r\n          </p>\r\n          {recMedia.format && (\r\n            <p>\r\n              <b>Format:</b>\r\n              <br /> {recMedia.format.toLowerCase()}\r\n            </p>\r\n          )}\r\n          {recMedia.source && (\r\n            <p>\r\n              <b>Source:</b>\r\n              <br /> {recMedia.source.toLowerCase()}\r\n            </p>\r\n          )}\r\n          {recMedia.status && (\r\n            <p>\r\n              <b>Status:</b>\r\n              <br /> {recMedia.status.toLowerCase()}\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {recMedia.description && (\r\n        <div className=\"recom-desc line-clamp-5\">\r\n          <b>Description:</b> <Markup content={recMedia.description} />\r\n        </div>\r\n      )}\r\n      <div className=\"recom-rating\">\r\n        {rating !== undefined &&\r\n          (rating <= 0 ? (\r\n            <div className=\"red-rate\">\r\n              {rating} <FontAwesomeIcon icon={faThumbsDown} />\r\n            </div>\r\n          ) : (\r\n            <div className=\"green-rate\">\r\n              +{rating} <FontAwesomeIcon icon={faThumbsUp} />\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </motion.a>\r\n  );\r\n};\r\n\r\nexport default Recom;\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CircleRate from \"./detailPage/CircleRate\";\r\nimport { useApolloClient, gql } from \"@apollo/client\";\r\n\r\nconst Anime = ({ anime }) => {\r\n  const client = useApolloClient();\r\n  const history = useHistory();\r\n\r\n  const animeCardClickHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    client.writeQuery({\r\n      query: gql`\r\n        query WriteIsLoading {\r\n          loadingbar {\r\n            isLoading\r\n          }\r\n        }\r\n      `,\r\n      data: {\r\n        // Contains the data to write\r\n        loadingbar: {\r\n          __typename: \"LoadingBar\",\r\n          isLoading: 30,\r\n        },\r\n      },\r\n    });\r\n\r\n    setTimeout(() => {\r\n      history.push(`/anime/${anime.id}`);\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <motion.a\r\n      href={`/anime/${anime.id}`}\r\n      onClick={animeCardClickHandler}\r\n      className=\"anime-card-container group hover-card-num-1\"\r\n      animate={{ opacity: 1, transition: { duration: 1 } }}\r\n      initial={{ opacity: 0 }}\r\n    >\r\n      {anime.averageScore !== undefined && (\r\n        <div\r\n          className=\"anime-circle-rate transform translate-x-4 -translate-y-4 \r\n    group-hover:translate-y-0.5 group-hover:-translate-x-0.5 \"\r\n        >\r\n          <CircleRate rate={anime.averageScore} size={4} />\r\n        </div>\r\n      )}\r\n\r\n      <img loading=\"lazy\" height={224} alt=\"\" src={anime.coverImage.large} style={{backgroundColor:anime.coverImage.color}} />\r\n      <div\r\n        className=\"anime-info\r\n       \"\r\n      >\r\n        <div className=\" bg-yellow-300 \">{anime.format}</div>\r\n        <div className=\" bg-green-300 \">{anime.source}</div>\r\n        <div className=\" bg-red-300 \">{anime.status}</div>\r\n      </div>\r\n      <h3 className=\"line-clamp-2\">\r\n        {anime.title.english !== null\r\n          ? anime.title.english\r\n          : anime.title.romaji}\r\n      </h3>\r\n    </motion.a>\r\n  );\r\n};\r\n\r\nexport default Anime;\r\n","import React, { useState } from \"react\";\r\nimport Anime from \"./Anime\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst AnimeList = ({ allAnimeData, initialQuantity, colsInRow, keyParam }) => {\r\n  const [showMore, setShowMore] = useState({\r\n    stream: initialQuantity,\r\n  });\r\n\r\n  let gridColsTemp = `grid-cols-2 ssm:grid-cols-${colsInRow - 1} lg:grid-cols-${\r\n    colsInRow - 1\r\n  } xl:grid-cols-${colsInRow}`;\r\n\r\n  const streamShowMoreHandler = (e) => {\r\n    if (showMore.stream > 30) {\r\n      setShowMore({ ...showMore, stream: showMore.stream + 999 });\r\n      e.target.style.display = \"none\";\r\n    } else {\r\n      setShowMore({ ...showMore, stream: showMore.stream + 10 });\r\n    }\r\n    if (showMore.stream + 10 >= allAnimeData.length) {\r\n      e.target.style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  // maintain the array for duplicate elements\r\n  let counterAnime = [];\r\n  let trimedAllAnimeData = allAnimeData.filter((anime) => {\r\n    let anim = anime.id !== undefined ? anime : anime.node;\r\n    if (!counterAnime.includes(anim.id)) {\r\n      counterAnime.push(anim.id);\r\n      if (anime !== undefined) {\r\n        return anime;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  return (\r\n    <motion.div className=\"pb-10\">\r\n      <div className=\"anime-list-container\">\r\n        <motion.div className={`anime-list ${gridColsTemp}`}>\r\n          {trimedAllAnimeData\r\n            .filter((_, index) => index <= showMore.stream - 1)\r\n            .map((anime) => {\r\n              //check where the data come from node or media\r\n              const animeData = anime.id !== undefined ? anime : anime.node;\r\n              return (\r\n                <Anime key={`${keyParam}-${animeData.id}`} anime={animeData} />\r\n              );\r\n            })}\r\n        </motion.div>\r\n      </div>\r\n      {allAnimeData.length > initialQuantity && (\r\n        <button\r\n          onClick={streamShowMoreHandler}\r\n          className=\"stream-show-more-btn\"\r\n        >\r\n          Load More\r\n        </button>\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\nexport default AnimeList;\r\n","import React, { useState, useRef } from \"react\";\r\nimport Recom from \"./Recom\";\r\nimport { faChevronCircleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { recomListQuery } from \"../../utils/queries\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport Errors from '../../pages/Errors';\r\n\r\nconst RecomList = ({ allRecom, animeID, initialQuantity, keyParam }) => {\r\n  const isSmallDevice = document.documentElement.clientWidth <= 768;\r\n  const magicNum1 = 250;\r\n  const magicNum2 = isSmallDevice ? 264 : 264 * 2;\r\n  const magicNum3 = 275;\r\n  const rightLeftScroll = useRef(null);\r\n  const wastefulCover = useRef(null);\r\n\r\n  const [showMore, setShowMore] = useState({\r\n    recommend: initialQuantity,\r\n  });\r\n\r\n  let id;\r\n  if (animeID) {\r\n    id = animeID;\r\n  } else {\r\n    id = 16498;\r\n  }\r\n  const { loading, error, data } = useQuery(recomListQuery, {\r\n    variables: {\r\n      id: id,\r\n    },\r\n  });\r\n\r\n  if (loading) {\r\n    return null;\r\n  }\r\n\r\n  if (error) {\r\n    return <Errors errMsg={error.message} />;\r\n  }\r\n\r\n  let allRecomData;\r\n  if (allRecom) {\r\n    allRecomData = allRecom;\r\n  } else {\r\n    allRecomData = data.Media.recommendations.edges;\r\n  }\r\n\r\n  let isDown = false;\r\n  let startx, scrollLeft;\r\n\r\n  const recSliderMouseDownHandler = (e) => {\r\n    e.preventDefault();\r\n    isDown = true;\r\n    startx = e.pageX - rightLeftScroll.current.offsetLeft;\r\n    scrollLeft = rightLeftScroll.current.scrollLeft;\r\n  };\r\n\r\n  const recSliderMouseLeaveHandler = () => {\r\n    isDown = false;\r\n    wastefulCover.current.style.display = \"none\";\r\n  };\r\n\r\n  const recSliderMouseUpHandler = () => {\r\n    isDown = false;\r\n\r\n    wastefulCover.current.style.display = \"none\";\r\n\r\n    setShowMore({ recommend: allRecomData.length });\r\n  };\r\n\r\n  const recSliderMouseMoveHandler = (e) => {\r\n    if (!isDown) return;\r\n    e.preventDefault();\r\n    const x = e.pageX - rightLeftScroll.current.offsetLeft;\r\n    const walk = (x - startx) * 1.5;\r\n    rightLeftScroll.current.scrollLeft = scrollLeft - walk;\r\n    wastefulCover.current.style.display = \"block\";\r\n  };\r\n\r\n  const rightScrollHandler = () => {\r\n    let recLeft = rightLeftScroll.current.scrollLeft;\r\n    let recWidth = rightLeftScroll.current.scrollWidth;\r\n\r\n    if ((Math.round(recLeft) - magicNum1) % magicNum2 !== 0) {\r\n      recLeft = Math.round((Math.round(recLeft) - magicNum1) / magicNum2);\r\n      recLeft = recLeft * magicNum2 + magicNum1;\r\n      rightLeftScroll.current.scrollTo({\r\n        top: 0,\r\n        left: recWidth === recLeft ? recLeft + magicNum3 : recLeft + magicNum2,\r\n        behavior: \"smooth\",\r\n      });\r\n      if (\r\n        isSmallDevice\r\n          ? showMore.recommend < allRecomData.length + 1\r\n          : showMore.recommend < allRecomData.length + 3\r\n      ) {\r\n        const newRecommend = isSmallDevice\r\n          ? showMore.recommend + 1\r\n          : showMore.recommend + 3;\r\n        setShowMore({ recommend: newRecommend });\r\n      }\r\n    } else {\r\n      rightLeftScroll.current.scrollTo({\r\n        top: 0,\r\n        left: recLeft === 0 ? recLeft + magicNum1 : recLeft + magicNum2,\r\n        behavior: \"smooth\",\r\n      });\r\n\r\n      if (\r\n        isSmallDevice\r\n          ? showMore.recommend < allRecomData.length + 1\r\n          : showMore.recommend < allRecomData.length + 3\r\n      ) {\r\n        const newRecommend = isSmallDevice\r\n          ? showMore.recommend + 1\r\n          : showMore.recommend + 3;\r\n        setShowMore({ recommend: newRecommend });\r\n      }\r\n    }\r\n  };\r\n  const leftScrollHandler = () => {\r\n    let recLeft = rightLeftScroll.current.scrollLeft;\r\n    let recWidth = rightLeftScroll.current.scrollWidth;\r\n    if ((Math.round(recLeft) - magicNum1) % magicNum2 !== 0) {\r\n      recLeft = Math.round((Math.round(recLeft) - magicNum1) / magicNum2);\r\n      recLeft = recLeft * magicNum2 + magicNum1;\r\n      rightLeftScroll.current.scrollTo({\r\n        top: 0,\r\n        left: recWidth === recLeft ? recLeft - magicNum3 : recLeft - magicNum2,\r\n        behavior: \"smooth\",\r\n      });\r\n    } else {\r\n      rightLeftScroll.current.scrollTo({\r\n        top: 0,\r\n        left: recWidth === recLeft ? recLeft - magicNum3 : recLeft - magicNum2,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const recTouchHandler = () => {\r\n    let recLeft = rightLeftScroll.current.scrollLeft;\r\n    let recWidth = rightLeftScroll.current.scrollWidth;\r\n\r\n    if (recLeft / recWidth < 0.5) {\r\n      if (\r\n        isSmallDevice\r\n          ? showMore.recommend < allRecomData.length + 1\r\n          : showMore.recommend < allRecomData.length + 3\r\n      ) {\r\n        setShowMore({ recommend: allRecomData.length });\r\n      }\r\n    }\r\n    if ((Math.round(recLeft) - magicNum1) % magicNum2 !== 0 && recLeft !== 0) {\r\n      recLeft = Math.round((Math.round(recLeft) - magicNum1) / magicNum2);\r\n      recLeft = recLeft * magicNum2 + magicNum1;\r\n      rightLeftScroll.current.scrollTo({\r\n        top: 0,\r\n        left: recLeft,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {allRecomData.length > 0 && (\r\n        <div>\r\n          <h4 className=\"recom-list-title\">Recommendations</h4>\r\n          <div className=\"recommendation-parent\">\r\n            <div\r\n              className=\"recommendation\"\r\n              ref={rightLeftScroll}\r\n              onTouchEnd={recTouchHandler}\r\n              onMouseDown={recSliderMouseDownHandler}\r\n              onMouseLeave={recSliderMouseLeaveHandler}\r\n              onMouseUp={recSliderMouseUpHandler}\r\n              onMouseMove={recSliderMouseMoveHandler}\r\n            >\r\n              <div>\r\n                {allRecomData.slice(0, showMore.recommend - 1).map((recom, index) => {\r\n                    const id = recom.node\r\n                      ? recom.node.mediaRecommendation.id\r\n                      : recom.media.id;\r\n                    return <Recom key={keyParam + id + index} recom={recom} />;\r\n                })}\r\n                <div ref={wastefulCover} className=\"wasteful-cover\"></div>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={leftScrollHandler}\r\n              className=\"left-0 bg-gradient-to-l\"\r\n            >\r\n              <FontAwesomeIcon\r\n                className=\"font-icon-recom-list rotate-180\"\r\n                icon={faChevronCircleRight}\r\n              />\r\n            </button>\r\n            <button\r\n              onClick={rightScrollHandler}\r\n              className=\"right-0 bg-gradient-to-r\"\r\n            >\r\n              <FontAwesomeIcon\r\n                className=\"font-icon-recom-list\"\r\n                icon={faChevronCircleRight}\r\n              />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default RecomList;\r\n"],"sourceRoot":""}